{"version":3,"sources":["./src/app/widgets/line-chart/line-chart.component.ts","./src/app/widgets/line-chart/line-chart.component.html","./src/app/bars/top-bar/top-bar.component.ts","./src/app/bars/top-bar/top-bar.component.html","./src/app/shared/api.models.ts","./src/app/app-init.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/shared/util.service.ts","./src/app/shared/global.service.ts","./src/app/bars/charts-bar/charts-bar.component.ts","./src/app/bars/charts-bar/charts-bar.component.html","./src/app/widgets/filters/filters.component.ts","./src/app/widgets/filters/filters.component.html","./src/app/widgets/alerts/alerts.component.html","./src/app/widgets/alerts/alerts.component.ts","./src/app/widgets/network/network.ts","./src/app/widgets/network/network.component.ts","./src/app/widgets/network/network.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/bars/time-bar/time-bar.component.ts","./src/app/bars/time-bar/time-bar.component.html","./src/app/widgets/map/map.component.ts","./src/app/widgets/map/map.component.html","./src/app/app.module.ts","./src/app/widgets/line-chart/line.ts","./src/app/shared/api.service.ts","./src/app/widgets/bar-chart/bar.ts","./src/app/widgets/bar-chart/bar-chart.component.ts","./src/app/widgets/bar-chart/bar-chart.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\nimport { LineChart } from './line';\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent implements OnInit {\n\n  // referência para o div do grafico\n  @ViewChild(\"lineChart\", { static: true }) private lineDiv!: ElementRef;\n\n  @Output() lineParamChanged = new EventEmitter<number>();\n  @Output() lineValueChanged = new EventEmitter<number>();\n\n  private lineChart: any;\n\n  private labels: any = {};\n  private rawData: any = {};\n  private nrmData: any = {};\n\n  private unity: any = {};\n\n  public ids: any = [];\n\n  constructor(public global: GlobalService, public util: UtilService) {\n    this.ids = this.global.getGlobal('line_params').value;\n  }\n\n  ngOnInit(): void {\n    this.lineChart = new LineChart(this.lineDiv.nativeElement);\n  }\n\n  updateData(responseData: any, dataId: any, chartColor: any) {\n    // manages data for each from\n    for (let paramId of Object.keys(responseData)) {\n      // clear existing element\n      this.deleteData(paramId, dataId, chartColor);\n      //creating list to average, max, min\n      this.rawData[paramId][dataId][chartColor] = [];\n      // adiciona os valores não normalizados\n      for (let i = 0; i < responseData[paramId].result.length; i++) {\n        //pega o tempo\n        const pointTime = responseData[paramId].result[i].k[0];\n        //pega valor das médias\n        const pointAverageValue = responseData[paramId].result[i].v[0];\n        //pega valor max\n        const pointMaxValue = responseData[paramId].result[i].v[2];\n        //pega valor min\n        const pointMinValue = responseData[paramId].result[i].v[3];        \n        this.rawData[paramId][dataId][chartColor].push({ x: this.util.secondsToDate(pointTime), y: pointAverageValue, z: pointMaxValue, k: pointMinValue});\n      }\n      // computes the unity\n      this.computeUnity(paramId);\n\n      // atualiza os labels baseado no dado novo\n      this.updateLabels(paramId);\n\n      // normaliza os dados de dataId\n      this.normalizeData(paramId);\n    }\n  }\n\n  drawChart(from: string, selectedParam: string, name: any = undefined) {\n    // TODO: passar os labels de y em um objeto.\n    if (from.includes('dns')) {\n      // set y label.\n      this.lineChart.setLabelY(\"Requisitions [%]\");\n    }\n    else {\n      // set y label.\n      this.lineChart.setLabelY(\"Requisitions\" + \" [\" + this.unity[from].prefix + \"package\" + \"]\");\n    }\n\n    // atualiza os labels\n    this.lineChart.setLabels(this.labels[from], name);\n\n    // atualiza os gráficos\n    for (const dataId of Object.keys(this.nrmData[from])) {\n      for (const color of Object.keys(this.nrmData[from][dataId])) {\n        // gets the data\n        const data = this.nrmData[from][dataId];\n        const chartData = [];\n        for(let i = 0; i < data[color].length; i++) {\n          if(selectedParam == 'average') {\n            chartData.push(data[color][i].x);\n          } else if(selectedParam == 'max') {\n            chartData.push(data[color][i].y);\n          } else {\n            chartData.push(data[color][i].z);\n          }     \n        }\n        this.lineChart.updateDataset(dataId, color, chartData, name);\n      }\n    }\n  }\n\n  deleteData(from: string, dataId: string, color: string) {\n    // new group\n    if (!this.rawData[from]) {\n      this.rawData[from] = {};\n    }\n    // new dataId\n    if (!this.rawData[from][dataId]) {\n      this.rawData[from][dataId] = {};\n    }\n\n    delete this.rawData[from][dataId][color];\n    // new group\n    if (!this.nrmData[from]) {\n      this.nrmData[from] = {};\n    }\n    // new dataId\n    if (!this.nrmData[from][dataId]) {\n      this.nrmData[from][dataId] = {};\n    }\n\n    delete this.nrmData[from][dataId][color];\n  }\n\n  clearChart(from: string, dataId: string, color: string) {\n    // removes from chart\n    this.lineChart.removeDataset(dataId, color);\n\n    this.deleteData(from, dataId, color);\n\n    // atualiza os labels baseado no dado novo\n    this.updateLabels(from);\n\n    // normaliza os dados de dataId\n    this.normalizeData(from);\n  }\n\n  clearLabel(from: string) {\n    this.labels[from] = [];\n  }\n\n  computeUnity(from: string) {\n    let max = -1;\n\n    const dataIds = Object.keys(this.rawData[from]);\n    for (let dataId of dataIds) {\n      const colors = Object.keys(this.rawData[from][dataId]);\n      for (let color of colors) {\n        // pega o máximo do dado atual\n        const mx = Math.max(...this.rawData[from][dataId][color].map((d: any) => d.y))\n        // atualiza o máximo global\n        max = Math.max(mx, max);\n      }\n    }\n\n    // computes the best unity\n    this.unity[from] = this.util.compute_best_unity(0, max);\n  }\n\n  normalizeData(from: string) {\n    // pega o dataset\n    const data = this.rawData[from];\n\n    // limpa os dados normalizados\n    this.nrmData[from] = {};\n\n    const dataIds = Object.keys(data);\n    for (let dataId of dataIds) {\n      this.nrmData[from][dataId] = {};\n      const colors = Object.keys(data[dataId]);\n      for (let color of colors) {\n        this.nrmData[from][dataId][color] = [];\n        for (let pId = 0; pId < data[dataId][color].length; pId++) {\n          this.nrmData[from][dataId][color].push({ x: data[dataId][color][pId].y / this.unity[from].div,\n                                                   y: data[dataId][color][pId].z / this.unity[from].div,\n                                                   z: data[dataId][color][pId].k / this.unity[from].div});\n        };\n      }\n    }\n  }\n\n  updateLabels(from: string) {\n    // result array\n    this.labels[from] = [];\n\n    const tsT0 = this.global.getGlobal(\"t0_vis\");\n    const tsT1 = this.global.getGlobal(\"t1_vis\");\n\n    const interval = tsT1.value - tsT0.value;\n\n    const data = this.rawData[from];\n\n    for (let dataId of Object.keys(data)) {\n      for (let chartColor of Object.keys(data[dataId])) {\n        // numero de pontos\n        const nPoints = this.rawData[from][dataId][chartColor].length;\n\n        // só atualiza se chegar um dado com mais pontos\n        if (this.labels.length > nPoints) {\n          continue;\n        }\n\n        // só atualiza se chegar um dado com mais pontos\n        if (nPoints === 0) {\n          continue;\n        }\n\n        // calcula o delta de tempo\n        const tDelta = interval / (nPoints - 1);\n\n        // result array\n        this.labels[from] = [];\n\n        let current = tsT0.value;\n        while (current <= tsT1.value) {\n          let label = '';\n          let date = new Date(current * 1000);\n          if (interval < 1200) { // 20 min\n            //@ts-ignore\n            label = date.toLocaleString('en-US', { hour12: false, dateStyle: 'short', timeStyle: 'short', timeZone: 'UTC' });\n          } else if (interval < 72000) { // 20 hs\n            //@ts-ignore\n            label = date.toLocaleString('en-US', { hour12: false, dateStyle: 'short', timeStyle: 'short', timeZone: 'UTC' });\n          } else if (interval < 4320000) { // 50 dias\n            //@ts-ignore\n            label = date.toLocaleString('en-US', { hour12: false, dateStyle: 'short', timeStyle: 'short', timeZone: 'UTC' });\n          } else {\n            //@ts-ignore\n            label = date.toLocaleString('en-US', { dateStyle: 'short', timeZone: 'UTC' });\n          }\n          this.labels[from].push(label);\n          current += tDelta\n        }\n      }\n    }\n  }\n\n  onParamChange(event: any) {\n    const line_params_value = {\n      key: \"line_params_value\",\n      value: event.target.value\n    };\n    \n    this.global.setGlobal(line_params_value);\n    this.lineParamChanged.emit();\n  }\n\n  onValueChange(event: any) {\n    const line_selected_params_value = {\n      key: \"line_selected_params_value\",\n      value: event.target.value\n    };\n    this.global.setGlobal(line_selected_params_value);\n    this.lineValueChanged.emit();\n  }\n}\n","<div class=\"fill\">\n  <canvas class=\"fill\" style=\"padding-bottom: 10px; border-bottom: 1px solid #eee;\" #lineChart></canvas>\n  <div style=\"margin-top: 7px; padding-bottom: 7px; display: flex;\">\n    <select name=\"select\" class=\"param-selector\" (change)=\"this.onParamChange($event)\">\n      <option *ngFor=\"let param of this.ids; let idx = index\" [value]=\"param.id\">{{param.caption}}</option>\n    </select>   \n    <select name=\"select\" class=\"value-selector\" (change)=\"this.onValueChange($event)\">\n      <option value=\"average\" selected>Average</option>\n      <option value=\"max\">Max</option>\n      <option value=\"min\">Min</option>\n    </select>\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from 'src/app/shared/global.service';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor(public global: GlobalService) { }\n\n  ngOnInit(): void {}\n\n}\n","<div class=\"main-bar\">\n\n  <div class=\"row\">\n    <!-- Logo -->\n    <i class=\"rnp-logo\"></i>\n    <!-- Nome -->\n    <div class=\"menu-container\">\n      <h2 class=\"project-title\">Network Borescope</h2>\n      <img class=\"uff-logo\" src=\"assets/logouff.png\" alt=\"\">\n      <img class=\"ic-logo\" src=\"assets/logoic.png\" alt=\"\">\n    </div>\n  </div>\n</div>\n","/**\n * Schema Request Class\n */\n export class SchemaRequest {\n  schema: any[];\n  id: number;\n  from: string;\n\n  constructor() {\n    this.schema = [1];\n    this.id = 1;\n    this.from = \"ttls\";\n  }\n}\n\n/**\n * Bounds Request Class\n */\nexport class BoundsRequest {\n  bounds: string;\n  where: any[];\n  dummy: number[];\n  id: number;\n  from: string;\n\n  constructor(zoom: number) {\n    let location = [\"location\", \"zrect\", zoom, 85, -179, -85, 179];\n    this.bounds = \"location\";\n    this.where = [location];\n    this.dummy = [1];\n    this.id = 1;\n    this.from = \"ttls\"\n  }\n}\n\n/**\n * Query Request Class\n */\nexport class QueryRequest {\n  'select': any[];\n  'where': any[];\n  'id': number;\n  'from': string;\n  'group-by': any;\n  'group-by-output': string;\n\n  constructor() {\n    let location = [\"location\", \"zrect\", 14, -22.75212144238171, -43.90960693359376, -23.073414748499108, -42.944183349609375];\n    let time = [ \"time\", \"between\", 1583020800, 1585698900];\n    let client = [\"cliente\", \"eq\", '10'];\n    this['select'] = [\"hsum\"];\n    this['group-by'] = {};\n    this['group-by-output']= \"kv\";\n    this['where'] = [ time, location, client ];\n    this['id'] = 1;\n    this['from'] = \"ttls\";\n  }\n}\n\nexport class MatrixRequest {\n  'what': string;\n  'metric': number;\n  'field': string;\n  'start': number;\n  'end': number;\n\n  constructor() {\n    this['what'] = \"matrix\";\n    this['metric'] = 10;\n    this['field']= \"h_avg\";\n    this['start'] = 1;\n    this['end'] = 1634149785;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './shared/api.service';\nimport { GlobalService } from './shared/global.service';\nimport { UtilService } from './shared/util.service';\n\nimport { environment } from 'src/environments/environment';\n@Injectable()\nexport class AppInitService {\n\n  constructor(public global: GlobalService, public api: ApiService, public utils: UtilService) { }\n\n  async loadSchema() {\n    const schema_ttls = await this.api.getSchema('ttls');\n    console.log(schema_ttls);\n\n    const schema_serv = await this.api.getSchema('serv');\n    console.log(schema_serv);\n\n    const schema_dns  = await this.api.getSchema('dns');\n    console.log(schema_dns);\n\n    const data = {\n      key: \"schema_info\",\n      value: {\n        'ttls': schema_ttls.result,\n        'serv': schema_serv.result,\n        'dns' : schema_dns.result\n      }\n    }\n\n    this.global.setGlobal(data);\n  }\n\n  async loadTimeBounds() {\n    const bounds = await this.api.getTimeBounds();\n    console.log(bounds);\n\n    let bounds_time = {\n      key: \"bounds_time\",\n      value: [bounds.result.vs[0][0], bounds.result.vs[1][0]]\n    };\n    this.global.setGlobal(bounds_time);\n\n    let t0_filter = {\n      key: \"t0_filter\",\n      value: bounds_time.value[0]\n    };\n    this.global.setGlobal(t0_filter);\n\n    let t1_filter = {\n      key: \"t1_filter\",\n      value: bounds_time.value[1]\n    };\n    this.global.setGlobal(t1_filter);\n\n\n    let t0_vis = {\n      key: \"t0_vis\",\n      value: bounds_time.value[0]\n    };\n    this.global.setGlobal(t0_vis);\n\n    let t1_vis = {\n      key: \"t1_vis\",\n      value: bounds_time.value[1]\n    };\n    this.global.setGlobal(t1_vis);\n  }\n\n  async loadGeoBounds() {\n    const bounds = await this.api.getGeoBounds();\n    console.log(bounds);\n\n    const data = {\n      key: \"bounds_geo\",\n      value: bounds.result.vs\n    }\n\n    this.global.setGlobal(data);\n  }\n\n  async loadIPs() {\n    const data = await this.api.getIPs();\n    // console.log(data);\n\n    const list_ips = {\n      key: 'list_ips',\n      value: data\n    };\n    this.global.setGlobal(list_ips);\n  }\n\n  async loadEnvIp() {\n    const config = await this.api.getConfig();\n    environment.backend = config.backend;\n    this.api.updateConfig();\n  }\n\n  loadClients() {\n    const schema = this.global.getGlobal('schema_info').value;\n\n    const data = {\n      key: 'list_clientes',\n      value: schema['ttls'].clientes_df\n    };\n    this.global.setGlobal(data);\n  }\n\n  loadLabelMaps() {\n    const schema = this.global.getGlobal('schema_info').value;\n\n    const data = {\n      key: 'label_maps',\n      value: {\n        'ttls': {},\n        'services': schema['serv'].services\n      }\n    };\n    this.global.setGlobal(data);\n  }\n\n\n  init() {\n    return new Promise<void>(async (resolve) => {\n      await this.loadEnvIp();\n      console.log(environment)\n\n      await this.loadSchema();\n      await this.loadTimeBounds();\n      await this.loadGeoBounds();\n      await this.loadIPs();\n\n      this.loadClients();\n      this.loadLabelMaps();\n      console.log('########## Initialization Done! ##########')\n\n      resolve();\n    });\n  }\n}\n","import { AfterViewInit, Component, ViewChild } from '@angular/core';\n\nimport { ApiService } from 'src/app/shared/api.service';\nimport { GlobalService } from 'src/app/shared/global.service';\n\nimport { MapComponent } from 'src/app/widgets/map/map.component';\nimport { BarChartComponent } from 'src/app/widgets/bar-chart/bar-chart.component';\nimport { LineChartComponent } from 'src/app/widgets/line-chart/line-chart.component';\nimport { NetworkComponent } from 'src/app/widgets/network/network.component';\nimport { AlertsComponent } from '../widgets/alerts/alerts.component';\nimport { FiltersComponent } from 'src/app/widgets/filters/filters.component';\n\nimport { UtilService } from '../shared/util.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements AfterViewInit {\n\n  // referência para componente do mapa\n  @ViewChild(\"appMap\", { static: true }) private map!: MapComponent;\n  // referência para o componente do gráfico de barras\n  @ViewChild(\"appBarChart\", { static: true }) private bar!: BarChartComponent;\n  // referência para o componente do gráfico de linhas\n  @ViewChild(\"appLineChart\", { static: true }) private line!: LineChartComponent;\n  // referência para o componente da heatmatrix\n  @ViewChild(\"appNetworkChart\", { static: true }) private net!: NetworkComponent;\n  // referência para o componente dos alertas\n  @ViewChild(\"appAlerts\", { static: true }) private alerts!: AlertsComponent;\n  // referência para componente do mapa\n  @ViewChild(\"appFilters\", { static: true }) private filters!: FiltersComponent;\n\n  public last: string = 'none';\n  public moving: string = 'none';\n\n  private timeBoundsRefreshFnc: any = undefined;\n\n  constructor(public global: GlobalService, public api: ApiService, public util: UtilService) {\n    this.timeBoundsRefreshFnc = setInterval(async () => {\n      await this.timeBoundsRefresh();\n      await this.listIpsRefresh();\n    }, 60 * 1000);\n  }\n\n  ngAfterViewInit(): void {\n    this.initCharts();\n  }\n\n  ngDestroy() {\n    if (this.timeBoundsRefreshFnc) {\n      clearInterval(this.timeBoundsRefreshFnc);\n    }\n  }\n\n  /**\n   * Inicializa os gráficos usando os dados do mapa\n   */\n  initCharts() {\n    this.updateHeatmap();\n    // barchart e linechart do mapa\n    this.updateLineChart('map', '#AAAAAA');\n    this.updateBarChart('map', '#AAAAAA');\n\n    // adiciona ao estado global\n    this.addChartElementToGlobal('map', '#AAAAAA');\n\n    // heat matrix\n    this.updateHeatmatrix();\n  }\n\n  /**\n   * Redesenha todos os gráficos\n   */\n  redrawAllCharts() {\n    this.updateHeatmap();\n\n    const line_params = this.global.getGlobal('line_params').value;\n    for (const param of line_params) {\n      this.line.clearLabel(param);\n    }\n\n    const bar_params = this.global.getGlobal('bar_params').value;\n    for (const param of bar_params) {\n      this.bar.clearLabel(param);\n    }\n\n    const elements = this.global.getGlobal('active_chart_elements').value;\n    for (const elem of elements) {\n      this.updateLineChart(elem.dataId, elem.chartColor, elem.feature);\n      this.updateBarChart(elem.dataId, elem.chartColor, elem.feature);\n    }\n\n    this.updateHeatmatrix();\n  }\n\n  /**\n   * Atualização automática do gráfico\n   */\n  async timeBoundsRefresh() {\n    console.log('########## timeBoundsRefresh ##########')\n\n    const bounds = await this.api.getTimeBounds();\n\n    let bounds_time = {\n      key: \"bounds_time\",\n      value: [bounds.result.vs[0][0], bounds.result.vs[1][0]]\n    };\n    this.global.setGlobal(bounds_time);\n\n    console.log(bounds_time);\n    console.log('#######################################')\n  }\n\n  async listIpsRefresh() {\n    console.log('########## ipListRefresh ##############')\n    const ips = await this.api.getIPs();\n\n    const list_ips = {\n      key: \"list_ips\",\n      value: ips\n    };\n    this.global.setGlobal(list_ips);\n\n    console.log(list_ips);\n    console.log('#######################################')\n}\n\n\n  /**\n   * Calcula o z-index do widget do gráfico\n   */\n  chartZindex(chartId: string) {\n    if (chartId == this.moving) {\n      return 950;\n    }\n    if (chartId == this.last) {\n      return 930;\n    }\n    return 900;\n  }\n\n  /**\n   * Checa se o widget do gráfico é visivel\n   */\n  isChartVisible(chartId: string): boolean {\n    const obj = this.global.getGlobal('widgets_charts');\n    return obj.value[chartId];\n  }\n\n  /**\n   * Checa se o modal de filtro é visivel\n   */\n  isConfigVisible(configId: string): boolean {\n    const obj = this.global.getGlobal('widgets_config');\n    return obj.value[configId];\n  }\n\n  /**\n   * Adiciona um elemento do gráfico ao estado global\n   */\n  addChartElementToGlobal(dataId: string, chartColor: string, feature: any = undefined) {\n    // restaura o estado\n    const elements = this.global.getGlobal('active_chart_elements');\n\n    // procura o elemento\n    const id = elements.value.findIndex((el: any) => {\n      return el.dataId === dataId && el.chartColor === chartColor\n    });\n\n    // se achar, remove\n    if (id >= 0) {\n      elements.value.splice(id, 1);\n    }\n\n    // adiciona o novo elemento\n    elements.value.push({ dataId, chartColor, feature });\n\n    // restaura o estado\n    this.global.setGlobal(elements)\n  }\n\n  /**\n   * Remove um elemento do gráfico do estado global\n   */\n  removeChartElementFromGlobal(dataId: string, chartColor: string, feature: any = undefined) {\n    // remove o polígono a lista de elementos ativos\n    const elements = this.global.getGlobal('active_chart_elements');\n\n    // procura o elemento\n    const id = elements.value.findIndex((el: any) => {\n      return el.dataId === dataId && el.chartColor === chartColor\n    });\n\n    // se achar, remove\n    if (id >= 0) {\n      elements.value.splice(id, 1);\n    }\n\n    // atualiza o estado\n    this.global.setGlobal(elements)\n  }\n\n  /**\n   * Atualiza o mapa depois de um evento de zoom ou pan\n   */\n  onMoveEnded() {\n    // atualiza o heatmap\n    this.updateHeatmap();\n\n    // redesenha o elemento map dos gráficos\n    this.updateLineChart('map', '#AAAAAA');\n    this.updateBarChart('map', '#AAAAAA');\n\n    // TODO: atualizar a heat matrix com base no zoom\n    this.updateHeatmatrix();\n  }\n\n  /**\n   * Atualiza os gráficos após a criação de uma seleções do mapa\n   */\n  onPolyCreated(event: any) {\n    const color = event.options.color;\n    const poly = event._latlngs[0];\n\n    // barchart e linechart da seleção geométrica\n    this.updateLineChart('geometry', color, poly);\n    this.updateBarChart('geometry', color, poly);\n\n    // adiciona ao estado global\n    this.addChartElementToGlobal('geometry', color, poly);\n  }\n\n  /**\n   * Atualiza os gráficos após a remoção de uma seleções do mapa\n   */\n  onPolyRemoved(event: any) {\n    const color = event.options.color;\n\n    const line_params = this.global.getGlobal('line_params').value;\n    for (const param of line_params) {\n      this.line.clearChart(param.id, 'geometry', color);\n    }\n\n    const bar_params = this.global.getGlobal('bar_params').value;\n    const lmap = this.global.getGlobal('label_maps').value;\n\n    for (const param of bar_params) {\n      this.bar.clearChart(param.id, 'geometry', color, lmap);\n    }\n\n    // remove do estado global\n    this.removeChartElementFromGlobal('geometry', color);\n  }\n\n  /**\n   * Atualiza os gráficos após a seleção de um pin do mapa\n   */\n  onMarkerAdded(event: any) {\n    const cod = event.cod;\n    const color = event.color;\n    const name = event.nome.replace(/_/g, ' ');;\n    // barchart e linechart do marker\n    this.updateLineChart('client', color, cod, name);\n    this.updateBarChart('client', color, cod, name);\n\n    // adiciona ao estado global\n    this.addChartElementToGlobal('client', color, cod);\n  }\n\n  /**\n   * Atualiza os gráficos após a remoção de um pin do mapa\n   */\n  onMarkerRemoved(event: any) {\n    const color = event.color;\n\n    const line_params = this.global.getGlobal('line_params').value;\n    for (const param of line_params) {\n      this.line.clearChart(param.id, 'client', color);\n    }\n\n    const bar_params = this.global.getGlobal('bar_params').value;\n    const lmap = this.global.getGlobal('label_maps').value;\n\n    for (const param of bar_params) {\n      this.bar.clearChart(param.id, 'client', color, lmap);\n    }\n\n    // remove do estado global\n    this.removeChartElementFromGlobal('client', color);\n  }\n\n  /**\n   * Atualiza os gráficos após a criação de um filtro\n   */\n  onFiltersDefined(clientData: any) {\n    this.map.drawFilterMarkers(clientData);\n    this.updateLineChart('filter', this.global.getGlobal('filter_color').value);\n    this.updateBarChart('filter', this.global.getGlobal('filter_color').value);\n    // adiciona ao estado global\n    this.addChartElementToGlobal('filter', this.global.getGlobal('filter_color').value, clientData);\n  }\n\n  /**\n   * Atualiza os gráficos após a remoção de um filtro\n   */\n  onFiltersRemoved() {\n    this.map.eraseFilterMarkers();\n\n    const line_params = this.global.getGlobal('line_params').value;\n    for (const param of line_params) {\n      this.line.clearChart(param.id, 'filter', this.global.getGlobal('filter_color').value);\n    }\n\n    const bar_params = this.global.getGlobal('bar_params').value;\n    const lmap = this.global.getGlobal('label_maps').value;\n\n    for (const param of bar_params) {\n      this.bar.clearChart(param.id, 'filter', this.global.getGlobal('filter_color').value, lmap);\n    }\n\n    // remove do estado global\n    this.removeChartElementFromGlobal('filter', this.global.getGlobal('filter_color').value);\n  }\n\n  /**\n   * Atualiza o critério de groupby do barchart\n   */\n  onBarSelectedChanged() {\n    const param = this.global.getGlobal('bar_params_value').value;\n    this.bar.drawChart(param);\n  };\n\n  /**\n   * Atualiza o from de saída do linechart\n   */\n   onLineSelectedChanged(){\n    const param = this.global.getGlobal('line_params_value').value;\n    const selectedParam = this.global.getGlobal('line_selected_params_value').value;\n    this.line.drawChart(param, selectedParam);\n  }\n  /**\n   * reseta a timeseries quando o botão de reset do zoom é clicado\n   */\n  onTimeseriesReset() {\n    this.net.clearTimeseries();\n  }\n  /**\n   * Atualiza o período de tempo ativo das visualizações\n   */\n  async onChartTimeChanged(delta: number) {\n    // reseta o tempo\n    if (delta === 5) {\n      const bounds = this.global.getGlobal('bounds_time');\n\n      let tsT0 = this.global.getGlobal(\"t0_vis\");\n      tsT0.value = bounds.value[0];\n      this.global.setGlobal(tsT0);\n\n      let tsT1 = this.global.getGlobal(\"t1_vis\");\n      tsT1.value = bounds.value[1];\n      this.global.setGlobal(tsT1);\n    }\n\n    // atualiza o range de tempo dos gráficcos\n    this.updateChartsTimeRange(delta)\n    // redesenha todos os gráficos\n    this.redrawAllCharts();\n  }\n\n  /**\n   * Intervalo de tempo usado na montagem da consulta\n   */\n  getTime(dataId: string = 'map') {\n    const t0Str = dataId === 'filter' ? 't0_filter' : 't0_vis';\n    const t1Str = dataId === 'filter' ? 't1_filter' : 't1_vis';\n\n    let tsT0 = this.global.getGlobal(t0Str);\n    let tsT1 = this.global.getGlobal(t1Str);\n    let list = [];\n    list.push(\"time\");\n    list.push(\"between\");\n\n    list.push(tsT0.value);\n    list.push(tsT1.value);\n\n    return list;\n  }\n\n  /**\n   * Atualiza o intervalo de tempo dos gráficos\n   */\n  updateChartsTimeRange(id: number) {\n    let tsT0 = this.global.getGlobal(\"t0_vis\");\n    let tsT1 = this.global.getGlobal(\"t1_vis\");\n\n    let d = (tsT1.value - tsT0.value);\n\n    let small = 20;\n    let midi = 10;\n    let large = 2;\n\n    if (id == 1) {\n      d = d / small;\n    } else if (id == -1) {\n      d = - d / small;\n    } else if (id == 2) {\n      d = d / midi;\n    } else if (id == -2) {\n      d = - d / midi;\n    } else if (id == 3) {\n      d = d / large;\n    } else if (id == -3) {\n      d = - d / large;\n    }\n    else if (id == 4) {\n      d >>= 1;\n      let tmid = tsT0.value + d;\n      d >>= 1;\n      let t0 = tmid - d;\n      let t1 = tmid + d;\n      if (t0 >= t1) t1 = t0 + 1;\n      tsT0.value = t0;\n      tsT1.value = t1;\n      d = 0;\n    }\n    else if (id == -4) {\n      d >>= 1;\n      let tmid = tsT0.value + d;\n      d <<= 1;\n      let t0 = tmid - d;\n      let t1 = tmid + d;\n      if (t0 >= t1) t1 = t0 + 1;\n      tsT0.value = t0;\n      tsT1.value = t1;\n      d = 0;\n    }\n    else if (id == 5) {\n      d = 0;\n    }\n\n    d = Math.floor(d);\n    let xt0 = tsT0.value + d;\n    let xt1 = tsT1.value + d;\n    let tnice = this.util.time_nice(xt0, xt1);\n\n    const sDate = new Date(0);\n    sDate.setUTCSeconds(tnice.t0)\n    const eDate = new Date(0);\n    eDate.setUTCSeconds(tnice.t1)\n\n    console.log('#### New time range ############################')\n    console.log(sDate.toUTCString(), eDate.toUTCString());\n\n    tsT0.value = tnice.t0;\n    tsT1.value = tnice.t1;\n    this.global.setGlobal(tsT0);\n    this.global.setGlobal(tsT1);\n  }\n\n  /**\n   * Função que faz o request dos heatmaps.\n   */\n  async updateHeatmap() {\n    const location = this.map.getLocation();\n    const time = this.getTime();\n\n    const res = await this.api.requestHeatMap(location, time);\n    this.map.drawHeatMap(res);\n  }\n\n  async updateBarChart(dataId: string, chartColor: string, feat: any = undefined, name: any = undefined) {\n    const time = this.getTime(dataId);\n    const location = (dataId === 'geometry') ?\n      this.map.getPoly(feat) : this.map.getLocation();\n\n    let client = undefined;\n    if (dataId === 'filter') {\n      client = this.filters.getClients();\n    }\n    if (dataId === 'client') {\n      client = this.map.getClient(feat);\n    }\n\n    const data: any = {};\n    const bar_params = this.global.getGlobal('bar_params').value;\n    for (const param of bar_params) {\n      const res = await this.api.requestBarChart(location, time, client, param);\n      data[param.id] = res;\n    }\n    const lmap = this.global.getGlobal('label_maps').value;\n    this.bar.updateData(data, dataId, chartColor, lmap);\n\n    const param = this.global.getGlobal('bar_params_value').value;\n    this.bar.drawChart(param, name);\n  }\n\n  async updateLineChart(dataId: string, chartColor: string, feat: any = undefined, name: any = undefined) {\n    const time = this.getTime(dataId);\n    const location = (dataId === 'geometry') ?\n      this.map.getPoly(feat) : this.map.getLocation();\n\n    let client = undefined;\n    if (dataId === 'filter') {\n      client = this.filters.getClients();\n    }\n    if (dataId === 'client') {\n      client = this.map.getClient(feat);\n    }\n\n    const data: any = {};\n    const line_params = this.global.getGlobal('line_params').value;\n\n    for (const param of line_params) {\n      const res = await this.api.requestLineChart(location, time, client, param);\n      data[param.id] = res;\n    }\n    this.line.updateData(data, dataId, chartColor);\n\n    const param = this.global.getGlobal('line_params_value').value;\n    const selectedParam = this.global.getGlobal('line_selected_params_value').value;\n    this.line.drawChart(param, selectedParam, name);\n  }\n\n  async updateHeatmatrix() {\n    let tsT0 = this.global.getGlobal(\"t0_vis\").value;\n    let tsT1 = this.global.getGlobal(\"t1_vis\").value;\n\n    const selectedParam = parseInt(this.global.getGlobal('heatmatrix_param').value);\n    const selectedValue = this.global.getGlobal('heatmatrix_value').value;\n    const capitals = this.global.getGlobal('state_capitals').value.default;\n\n    const clicked = this.global.getGlobal(\"clicked_element\").value;\n\n    const res = await this.api.requestHeatmatrix(selectedParam, selectedValue, tsT0, tsT1, clicked);\n    const data = JSON.parse(res).result;\n\n    this.net.drawChart(data, capitals, clicked, selectedParam != 77);\n  }\n\n  async updateTimeseries(event: any) {\n    let tsT0 = this.global.getGlobal(\"t0_vis\").value;\n    let tsT1 = this.global.getGlobal(\"t1_vis\").value;\n\n    const selectedParam = parseInt(this.global.getGlobal('heatmatrix_param').value);\n    const selectedValue = this.global.getGlobal('heatmatrix_value').value;\n    const capitals = this.global.getGlobal('state_capitals').value.default;\n\n    const clicked = this.global.getGlobal(\"clicked_element\").value;\n\n    const res = await this.api.requestHeatmatrix(selectedParam, selectedValue, tsT0, tsT1, clicked);\n    const data = JSON.parse(res).result;\n    const selectedData:any = [];\n    const datetimeArray:any = [];\n    for(let i = 0; i < event.length; i++) {\n      selectedData[i] = [event[i],[]];\n\n      for(let j = 0; j < data.length; j++) {\n        if(data[j][0] == event[i]) selectedData[i][1].push(data[j][2])\n      } \n    }\n    \n    for(let i = 0; i < 7; i++) {\n      let label = '';\n      let date = new Date(data[i][1] * 1000);\n      //@ts-ignore\n      label = date.toLocaleString('en-US', { hour12: false, dateStyle: 'short', timeStyle: 'short', timeZone: 'UTC' })\n      datetimeArray.push(label);\n    }\n    this.net.updateTimeseriesData(selectedData, datetimeArray, capitals, clicked);\n  }\n}\n","<div id=\"rnp-inicio-screen\" class=\"home\">\n\n  <div class=\"row home-map-row\">\n    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 fill\" style=\"padding: 0px !important;\">\n      <app-map #appMap\n      (moveEndedEvent) = \"this.onMoveEnded()\"\n      (polyCreatedEvent) = \"this.onPolyCreated($event)\"\n      (polyEditedEvent) = \"this.onPolyCreated($event)\"\n      (polyRemovedEvent) = \"this.onPolyRemoved($event)\"\n      (markerAddedEvent) = \"this.onMarkerAdded($event)\"\n      (markerRemovedEvent) = \"this.onMarkerRemoved($event)\"\n      (resetTimeseries) = \"this.onTimeseriesReset()\"\n      ></app-map>\n    </div>\n  </div>\n\n  <app-charts-bar class=\"charts-menu\"></app-charts-bar>\n\n  <div ngDraggable class=\"widget bar-chart-window\"\n  [style.z-index] = \"this.isChartVisible('bar') ? this.chartZindex('bar') : '-10' \"\n  (started)=\"this.moving = 'bar'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'bar'\">\n    <app-bar-chart #appBarChart\n    (barParamChanged) = \"this.onBarSelectedChanged()\"\n    ></app-bar-chart>\n  </div>\n\n  <div ngDraggable class=\"widget line-chart-window\"\n  [style.z-index] = \"this.isChartVisible('line') ? this.chartZindex('line') : '-10' \"\n  (started)=\"this.moving = 'line'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'line'\">\n    <app-line-chart #appLineChart\n    (lineParamChanged) = \"this.onLineSelectedChanged()\"\n    (lineValueChanged) = \"this.onLineSelectedChanged()\"\n    ></app-line-chart>\n  </div>\n\n  <div ngDraggable class=\"widget network-window\"\n  [style.z-index] = \"this.isChartVisible('net') ? this.chartZindex('net') : '-10' \"\n  (started)=\"this.moving = 'net'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'net'\">\n    <app-network #appNetworkChart \n    (heatMatrixValueChanged) = \"this.updateHeatmatrix();\"\n    (heatMatrixParamChanged) = \"this.updateHeatmatrix();\"\n    (onCapitalSelected) = \"this.updateTimeseries($event);\"\n    ></app-network>\n  </div>\n\n  <div ngDraggable style=\"position: absolute; top: 400px; left: 10px; width: 200px; z-index: 900;\"\n  [style.z-index] = \"this.isChartVisible('alerts') ? this.chartZindex('alerts') : '-10' \"\n  (started)=\"this.moving = 'alerts'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'alerts'\">\n    <app-alerts #appAlerts></app-alerts>\n  </div>\n\n  <div style=\"position: absolute; width: 400px; bottom: 10px; left: 10px; z-index: -10;\"\n  [style.z-index] = \"this.isConfigVisible('filters') ? this.chartZindex('filters') : '-10'\">\n    <app-filters #appFilters\n    (filtersDefined) = this.onFiltersDefined($event)\n    (filtersRemoved) = this.onFiltersRemoved()></app-filters>\n  </div>\n\n  <app-time-bar class=\"time-menu\"\n    (chartTimeChanged) = \"this.onChartTimeChanged($event)\">  \n  </app-time-bar> \n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backend: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { GlobalService } from './global.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor(public global: GlobalService) { }\n\n  /**\n   * Converte \"tile\" em longitude.\n   */\n  tile2long(x: number, z: number) {\n    return (x / Math.pow(2, z) * 360 - 180);\n  }\n\n  /**\n   * Converte \"tile\" em latitude.\n   */\n  tile2lat(y: number, z: number) {\n    var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n    return (180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))));\n  }\n\n  /**\n   * Converte \"tile\" em longitude média.\n   */\n  tile2longX(x: number, z: number) {\n    let c1 = this.tile2long(x, z);\n    let c2 = this.tile2long(x + 1, z);\n    return (c1 + c2) / 2;\n  }\n\n  /**\n   * Converte \"tile\" em latitude média.\n   */\n  tile2latX(x: number, z: number) {\n    let c1 = this.tile2lat(x, z);\n    let c2 = this.tile2lat(x + 1, z);\n    return (c1 + c2) / 2;\n  }\n\n  /**\n   * Ajusta o intervalo da série temporal.\n   */\n  time_nice(t0: number, t1: number) {\n    let dt0 = new Date(0); // The 0 there is the key, which sets the date to the epoch\n    let Y0, M0, D0, h0, m0, s0;\n    dt0.setUTCSeconds(t0);\n    s0 = dt0.getSeconds();\n    m0 = dt0.getMinutes();\n    h0 = dt0.getHours();\n    D0 = dt0.getDate();\n    M0 = dt0.getMonth();\n    Y0 = dt0.getFullYear();\n\n    let dt1 = new Date(0); // The 0 there is the key, which sets the date to the epoch\n    let Y1, M1, D1, h1, m1, s1;\n    dt1.setUTCSeconds(t0);\n    s1 = dt1.getSeconds();\n    m1 = dt1.getMinutes();\n    h1 = dt1.getHours();\n    D1 = dt1.getDate();\n    M1 = dt1.getMonth();\n    Y1 = dt1.getFullYear();\n\n    let d = t1 - t0;\n    let changed = 0;\n    if (d < 180) {\n      if (s0 > 0) { t0 -= s0; s0 = 0; changed = 1; }\n      if (s1 > 0) { t1 += 60 - s1; s1 = 0; changed = 1; }\n    } else if (d < 600) {\n      if (s0 > 0) { t0 -= s0; s0 = 0; changed = 1; }\n      if (s1 > 0) { t1 += 60 - s1; s1 = 0; changed = 1; }\n      let x;\n      x = m0 % 5;\n      if (x != 0) { t0 -= x * 60; m0 -= x; changed = 1; }\n      x = m1 % 5;\n      if (x != 0) { t1 -= x * 60; m1 -= x; changed = 1; }\n    }\n\n    if (changed) {\n      let o0 = new Date(0);\n      o0.setSeconds(s0);\n      o0.setMinutes(m0);\n      o0.setHours(h0);\n      o0.setDate(D0);\n      o0.setMonth(M0);\n      o0.setFullYear(Y0);\n\n      let o1 = new Date(0);\n      o1.setSeconds(s1);\n      o1.setMinutes(m1);\n      o1.setHours(h1);\n      o1.setDate(D1);\n      o1.setMonth(M1);\n      o1.setFullYear(Y1);\n    }\n    return { t0: t0, t1: t1 };\n  }\n\n\n\n/**\n * Difine o intervalo de Y no gráfico inferior.\n */\n compute_best_unity(mn: any, mx: any) {\n  let div = 1;\n  let potencia = 0;\n  for (let i = 0; i < 20; i++) {\n    if (mx/div < 100) {\n      break;\n    }\n    potencia ++;\n    div *= 10;\n  }\n  potencia -= potencia % 3;\n  div = 1; for (let i=0;i<potencia;i++) div *= 10;\n\n  let prefixos = [ \"\", \"K x \", \"M x \", \"G x \", \"T x \", \"E x \", \"P x \" ];\n  let prefixo = prefixos[potencia/3];\n\n  let res = { prefix: prefixo, div: div, log: -1 };\n\n  // logaritmica ou nao\n  if (mn && mx/(mn+1) > 1000) {\n    res.log = 1;\n  } else {\n    res.log = 0;\n  }\n\n  return res;\n}\n\n  /**\n   * Converte segundos em data.\n   */\n  secondsToDate(seconds: number) {\n    var date = new Date(0);\n    date.setUTCSeconds(seconds);\n    return date;\n  }\n\n  /**\n   * Recupera URL base.\n   */\n  getUrlBase() {\n    var getUrl = window.location;\n    return getUrl.protocol + \"//\" + getUrl.host;\n  }\n\n  /**\n   * Exibe o json usado nas requisições a API.\n   */\n  showTrace(title: string, json: any) {\n    let trace_mode = this.global.getGlobal(\"trace_mode\");\n    if (trace_mode.value) {\n      console.log(title);\n      console.log(JSON.stringify(json));\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as capitals from '../../assets/capitais.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    /**\n     * Esquema usado para o armazenamento dos dados\n     */\n    const schema_info = {\n      key: \"schema_info\",\n      value: {}\n    };\n    this.setGlobal(schema_info);\n\n    /**\n     * Id da consulta usado pelo tiny cubes\n     */\n    const query_id = {\n      key: \"query_id\",\n      value: 1\n    };\n    this.setGlobal(query_id);\n\n    /**\n     * Elementos ativos nos gráficos\n     */\n    const active_chart_elements = {\n      key: \"active_chart_elements\",\n      value: []\n    };\n    this.setGlobal(active_chart_elements);\n\n    /**\n     * Domínio temporal dos dados.\n     */\n    const bounds_time = {\n      key: \"bounds_time\",\n      value: false\n    };\n    this.setGlobal(bounds_time);\n\n    /**\n     * Domínio espacial dos dados.\n     */\n    const bounds_geo = {\n      key: \"bounds_geo\",\n      value: false\n    };\n    this.setGlobal(bounds_geo);\n\n    /**\n     * Estabelece uma constante para um valor de zoom no mapa.\n     */\n    const geo_extra_zoom = {\n      key: \"geo_extra_zoom\",\n      value: 5\n    };\n    this.setGlobal(geo_extra_zoom);\n\n    /**\n     * Guarda o time inicial nas visualizações.\n     */\n    const t0_vis = {\n      key: \"t0_vis\",\n      value: undefined\n    };\n    this.setGlobal(t0_vis);\n\n    /**\n     * Guarda o time final nas visualizações.\n     */\n    const t1_vis = {\n      key: \"t1_vis\",\n      value: undefined\n    };\n    this.setGlobal(t1_vis);\n\n    /**\n     * Guarda o time inicial usado no filtro.\n     */\n    const t0_filter = {\n      key: \"t0_filter\",\n      value: undefined\n    };\n    this.setGlobal(t0_filter);\n\n    /**\n     * Guarda o time final usado no filtro.\n     */\n    const t1_filter = {\n      key: \"t1_filter\",\n      value: undefined\n    };\n    this.setGlobal(t1_filter);\n\n    /**\n     * Mapa de labels do barchart.\n     */\n    const label_maps = {\n      key: \"label_maps\",\n      value: {\n        'ttls': {},\n        'services': {}\n      }\n    };\n    this.setGlobal(label_maps);\n\n    /**\n     * Guarda o parametro selecionado no network chart quando mudado para heatmatrix ou timeseries\n     */\n     const network_param = {\n      key: \"network_param\",\n      value: 1\n    };\n    this.setGlobal(network_param);\n    /**\n     * Guarda as opções de from do bar chart.\n     */\n    const bar_params = {\n      key: \"bar_params\",\n      value: [\n        {id: 'ttls', from: 'ttls', groupBy: 'ttl',  select: [\"hsum\"]},\n        {id: 'services', from: 'serv', groupBy: 'serv', select: [\"hsum\"]}\n      ]\n    };\n    this.setGlobal(bar_params);\n\n    /**\n     * Guarda a seleção de from do bar chart.\n     */\n    const bar_params_value = {\n      key: \"bar_params_value\",\n      value: bar_params.value[0].id\n    };\n    this.setGlobal(bar_params_value);\n\n    /**\n     * Guarda as opções de from do line chart.\n     */\n    const line_params = {\n      key: \"line_params\",\n      value: [\n        {id: 'packet_rate', from: 'ttls', groupBy: 'time', select: ['hsum'], caption: 'packet rate'},\n        {id: 'dns_in',  from: 'dns',  groupBy: 'time', select: ['total_ireq', 'total_ireq_off'], caption: 'dns requests received w/o answer'},\n        {id: 'dns_out', from: 'dns',  groupBy: 'time', select: ['total_oreq', 'total_oreq_off'], caption: 'dns requests sent w/o answer'},\n      ]\n    };\n    this.setGlobal(line_params);\n\n    /**\n     * Guarda a seleção de from do line chart.\n     */\n    const line_params_value = {\n      key: \"line_params_value\",\n      value: line_params.value[0].id\n    };\n    this.setGlobal(line_params_value);\n    \n    /**\n     * Guarda a seleção de average, max, min selecionado no line chart.\n     */   \n    const line_selected_params_value = {\n      key: \"line_selected_params_value\",\n      value: 'average'\n    };\n    this.setGlobal(line_selected_params_value);\n\n    /**\n     * Guarda a seleção dos parametros para a heatmatrix\n     */       \n      const heatmatrix_param = {\n      key: \"heatmatrix_param\",\n      value: \"10\",\n    };\n    this.setGlobal(heatmatrix_param);\n\n    /**\n     * Guarda a seleção dos valores para a heatmatrix\n     */       \n    const heatmatrix_value = {\n      key: \"heatmatrix_value\",\n      value: \"h_avg\",\n    };\n    this.setGlobal(heatmatrix_value);\n    /**\n    * Guarda a seleção dos valores para a heatmatrix\n    */       \n    const scattergl_options = {\n      key: \"scattergl_options\",\n      value: 0,\n      param: 0,\n      invert: true\n    };\n    this.setGlobal(scattergl_options);\n    /**\n     * Estabelece uma lista de cores.\n     */\n     const draw_colors = {\n      key: \"draw_colors\",\n      value: [\n        '#1F77B4', '#2CA02C', '#9467BD', '#8C564B', '#E377C2',\n        '#AEC7E8', '#98DF8A', '#C5B0D5', '#C49C94', '#F7B6D2'\n      ]\n    };\n    this.setGlobal(draw_colors);\n\n    /**\n     * Lista de cores usadas.\n     */\n     const used_draw_colors = {\n      key: \"used_draw_colors\",\n      value: []\n    };\n    this.setGlobal(used_draw_colors);\n\n    /**\n     * Guarda a cor atual.\n     */\n    const draw_color_index = {\n      key: \"draw_color_index\",\n      value: 0\n    };\n    this.setGlobal(draw_color_index);\n\n    /**\n     * Guarda a cor do elemento não selecionado.\n     */\n     const unselected_color = {\n      key: 'unselected_color',\n      value: '##CCC'\n    }\n    this.setGlobal(unselected_color);\n    \n    /**\n     * Guarda a as capitais e suas localizações.\n     */\n     const state_capitals =  {\n       key: 'state_capitals',\n       value: capitals\n     }\n     this.setGlobal(state_capitals);\n    \n    /**\n     * Guarda se o click foi no botão de reset zoom ou algum pin de capital\n     */\n\n    const clicked_element = {\n      key: 'clicked_element',\n      value: -1\n    }\n    this.setGlobal(clicked_element);\n    /**\n     * Guarda a cor do filtro.\n     */\n     const filter_color = {\n      key: 'filter_color',\n      value: '#FF7F0E'\n    }\n    this.setGlobal(filter_color);\n\n    /**\n     * Guarda a cor do outlier.\n     */\n     const outlier_color = {\n      key: 'outlier_color',\n      value: '#D62728'\n    }\n    this.setGlobal(outlier_color);\n\n    /**\n     * Guarta a lista de clientes\n     */\n    const list_clientes = {\n      key: \"list_clientes\",\n      value: []\n    }\n    this.setGlobal(list_clientes);\n\n    /**\n     * Guarda a lista de ips\n     */\n     const list_ips = {\n      key: \"list_ips\",\n      value: []\n    }\n    this.setGlobal(list_ips);\n\n    /**\n     * Estado das janelas dos gráficos\n     */\n    const widgets_charts = {\n      key: \"widgets_charts\",\n      value: { 'line': false, 'bar': false, 'alerts': false, 'hasAlert': false, 'net': false }\n    }\n    this.setGlobal(widgets_charts);\n\n    /**\n     * Estado das janelas de configuração\n     */\n    const widgets_config = {\n      key: \"widgets_config\",\n      value: { 'filters': false }\n    }\n    this.setGlobal(widgets_config);\n\n    /**\n     * Modo de debug.\n     */\n    const trace_mode = {\n      key: \"trace_mode\",\n      value: true\n    };\n    this.setGlobal(trace_mode);\n  }\n\n  /**\n   * Recupera a variavél global gravada na sessão.\n   */\n  getGlobal(key: string): any {\n    // invalid key\n    if (key === null) {\n      console.log(`getGlobal --> Ivalid key: ${key}`);\n      return undefined;\n    }\n\n    // item not found\n    const value = sessionStorage.getItem(key);\n    if (value === null) {\n      console.log(`getGlobal --> Key not found: ${key}`);\n      return undefined;\n    }\n\n    return JSON.parse(value);\n  }\n\n  /**\n   * Grava a varavél global na sessão.\n   */\n  setGlobal(object: any) {\n    sessionStorage.setItem(object.key, JSON.stringify(object));\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from 'src/app/shared/global.service';\n\n@Component({\n  selector: 'app-charts-bar',\n  templateUrl: './charts-bar.component.html',\n  styleUrls: ['./charts-bar.component.css']\n})\nexport class ChartsBarComponent implements OnInit {\n\n  constructor(public global: GlobalService) {}\n\n  ngOnInit(): void {}\n\n  toggleChartVisibility(chartId: string) {\n    const obj = this.global.getGlobal('widgets_charts');\n\n    obj.value[chartId] = !obj.value[chartId];\n    this.global.setGlobal(obj);\n  }\n\n  isChartVisible(chartId: string): boolean {\n    const obj = this.global.getGlobal('widgets_charts');\n    return obj.value[chartId];\n  }\n\n  setChartsPosition() {\n    const obj = this.global.getGlobal('widgets_charts').value;\n    const barDiv = document.querySelectorAll<HTMLElement>(\".bar-chart-window\")[0];\n    const lineDiv = document.querySelectorAll<HTMLElement>(\".line-chart-window\")[0];\n    const netDiv = document.querySelectorAll<HTMLElement>(\".network-window\")[0];\n  }\n\n  setAlertColor() {\n    const obj = this.global.getGlobal('widgets_charts');\n    if(obj.value['hasAlert']) {\n      return '#F51720';\n    }\n    else {\n      if(obj.value['alerts']) return '#243d8f';\n      else return '#000';\n    } \n  }\n  \n  toggleConfigVisibility(configId: string) {\n    const obj = this.global.getGlobal('widgets_config');\n\n    obj.value[configId] = !obj.value[configId];\n    this.global.setGlobal(obj);\n  }\n\n  isConfigVisible(configId: string): boolean {\n    const obj = this.global.getGlobal('widgets_config');\n    return obj.value[configId];\n  }\n}\n","<div class=\"row\" (click)=\"this.setChartsPosition()\">\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleChartVisibility('alerts')\">\n    <span class=\"fas fa-exclamation fa-lg\" id=\"alerts\"\n    [style.color]=\"this.setAlertColor()\"></span>\n  </button>\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleConfigVisibility('filters')\">\n    <span class=\"fas fa-cog fa-lg\"\n    [style.color]=\"this.isConfigVisible('filters') ? '#243d8f' : '#000' \"></span>\n  </button>\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleChartVisibility('bar')\">\n    <span class=\"fas fa-chart-bar fa-lg\"\n    [style.color]=\"this.isChartVisible('bar') ? '#243d8f' : '#000' \"></span>\n  </button>\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleChartVisibility('line')\">\n    <span class=\"fas fa-line-chart fa-lg\"\n    [style.color]=\"this.isChartVisible('line') ? '#243d8f' : '#000' \"></span>\n  </button>\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleChartVisibility('net')\">\n    <span class=\"fas fa-project-diagram fa-lg\"\n    [style.color]=\"this.isChartVisible('net') ? '#243d8f' : '#000' \"></span>\n  </button>\n</div>\n","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { ApiService } from 'src/app/shared/api.service';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.css']\n})\nexport class FiltersComponent implements OnInit {\n\n  @Output() filtersDefined = new EventEmitter<any>();\n  @Output() filtersRemoved = new EventEmitter();\n\n  @ViewChild(\"clientsInput\", { static: true }) private clientsInput!: ElementRef;\n\n  public clients: any = [];\n  public clientsSelection = [];\n\n  public dateRange: any = {start: null, end: null};\n\n  constructor(public global: GlobalService, public api: ApiService, public util: UtilService) {}\n\n  ngOnInit(): void {\n    this.clients = this.global.getGlobal('list_clientes').value;\n  }\n\n  toggleFiltersVisibility() {\n    const obj = this.global.getGlobal('widgets_config');\n\n    obj.value['filters'] = !obj.value['filters'];\n    this.global.setGlobal(obj);\n  }\n\n  getClients() {\n    let list = [];\n    list.push(\"cliente\");\n    list.push(\"eq\");\n\n    this.clientsSelection.forEach((client: any) => {\n      let found = this.clients.items.find((c: any) => c.caption === client);\n      if (found) {\n        list.push(parseInt(found.cod))\n      }\n    });\n\n    return list;\n  }\n\n  updateClientSelection(event: any) {\n    this.clientsSelection = event.target.value.split(',').filter( (d: string) => d.length > 0 );\n  }\n\n  getStartDate() {\n    let tsT0 = this.global.getGlobal(\"t0_filter\");\n\n    let start = new Date(tsT0.value * 1000);\n    return  start.toISOString().slice(0,-8).replace('T', ' # ');\n  }\n\n  getEndDate() {\n    let tsT1 = this.global.getGlobal(\"t1_filter\");\n\n    let end = new Date(tsT1.value * 1000);\n    return end.toISOString().slice(0,-8).replace('T', ' # ');\n  }\n\n  updateDate(dateId: string, event: any) {\n    this.dateRange[dateId] = event.target.value;\n  }\n\n  saveDate() {\n    let tsT0 = this.global.getGlobal(\"t0_filter\");\n    let tsT1 = this.global.getGlobal(\"t1_filter\");\n\n    if (this.dateRange['start']) {\n      const parts = this.dateRange['start'].split(' # ');\n\n      let start = new Date(`${parts[0]}T${parts[1]}:00Z`).getTime() / 1000;\n\n      if(start > tsT1.value) {\n        console.log('Invalid Filter Date: end < start.')\n        return\n      }\n\n      tsT0.value = start;\n      this.global.setGlobal(tsT0);\n    }\n\n    if (this.dateRange['end']) {\n      const parts = this.dateRange['end'].split(' # ');\n      let end = new Date(`${parts[0]}T${parts[1]}:00Z`).getTime() / 1000;\n\n      if(end < tsT0.value) {\n        console.log('Invalid Filter Date: end < start.')\n        return\n      }\n\n      tsT1.value = end;\n      this.global.setGlobal(tsT1);\n    }\n  }\n\n  saveFilters() {\n    if(!this.clientsSelection.length) {\n      console.log('Invalid Filter: empity client list.')\n      return;\n    }\n\n    const clientsList = this.clients.items;\n    const selectedClients = this.clientsSelection;\n\n    const clientsData = [];\n    for(let i = 0; i < selectedClients.length; i++) {\n      let client = clientsList.find((x: any) => x.caption === selectedClients[i]);\n      clientsData.push(client)\n    };\n\n    this.saveDate();\n    this.toggleFiltersVisibility();\n    this.filtersDefined.emit(clientsData);\n  }\n\n  removeFilters() {\n    let t0 = this.global.getGlobal(\"t0_filter\");\n    let start = new Date(t0.value * 1000);\n    this.dateRange['start'] = start.toISOString().slice(0,-8).replace('T', ' # ');\n\n    let t1 = this.global.getGlobal(\"t1_filter\");\n    let end = new Date(t1.value * 1000);\n    this.dateRange['end'] = end.toISOString().slice(0,-8).replace('T', ' # ');\n\n    this.clientsSelection = [];\n    this.clientsInput.nativeElement.value = '';\n\n    this.saveDate();\n    this.toggleFiltersVisibility();\n    this.filtersRemoved.emit();\n  }\n\n  onClickRefresh() {\n    const bnds = this.global.getGlobal(\"bounds_time\");\n\n    const tsT0 = this.global.getGlobal(\"t0_filter\");\n    const tsT1 = this.global.getGlobal(\"t1_filter\");\n\n    tsT0.value = bnds.value[0];\n    tsT1.value = bnds.value[1];\n\n    this.global.setGlobal(tsT0);\n    this.global.setGlobal(tsT1);\n  }\n\n  refreshAvailable() {\n    const bnds = this.global.getGlobal(\"bounds_time\");\n\n    const tsT0 = this.global.getGlobal(\"t0_filter\");\n    const tsT1 = this.global.getGlobal(\"t1_filter\");\n\n    return bnds.value[0] !== tsT0.value || bnds.value[1] !== tsT1.value;\n  }\n}\n","<div class=\"modal-content\">\n\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title ng-binding\">Filters</h4>\n  </div>\n\n  <div class=\"modal-body\">\n\n    <div class=\"row\">Clients</div>\n\n    <div class=\"row\">\n      <input style=\"width: 100%\" type=\"email\" list=\"clientes\" multiple (keyup)='this.updateClientSelection($event)'\n        title=\"\" pattern=\"\" #clientsInput>\n      <datalist id=\"clientes\">\n        <option *ngFor=\"let el of this.clients.items\" [value]=\"el.caption\">\n      </datalist>\n    </div>\n\n    <div class=\"row\" style=\"height: 5px;\"></div>\n    <div class=\"row\">Date Range</div>\n\n    <div class=\"row\">\n      <div class=\"input-group input-daterange\">\n        <input type=\"text\" class=\"form-control\" [value]=\"this.getStartDate()\" (keyup)=\"this.updateDate('start', $event)\">\n        <div class=\"input-group-addon\">to</div>\n        <input type=\"text\" class=\"form-control\" [value]=\"this.getEndDate()\" (keyup)=\"this.updateDate('end', $event)\">\n        <div class=\"input-group-addon\" style=\"padding: 0;\">\n          <button class=\"btn btn-filter\" (click)='this.onClickRefresh()'>\n            <i class=\"fas fa-sync-alt fa-lg\" [style.color]=\"this.refreshAvailable() ? '#F97432' : '#AAAAAA'\"></i>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" style=\"height: 20px;\"></div>\n    </div>\n\n  <div class=\"modal-footer\" style=\"padding-right: 0;\">\n    <button type=\"button\" class=\"btn btn-primary-color\" (click)=\"this.saveFilters()\">Save</button>\n    <button type=\"button\" class=\"btn btn-delete-color\" (click)=\"this.removeFilters()\">Delete</button>\n    <button type=\"button\" class=\"btn btn-secondary-color\" (click)=\"this.toggleFiltersVisibility()\">Cancel</button>\n  </div>\n</div>\n","<div class=\"modal-content\" >\n\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title ng-binding\">Alerts</h4>\n  </div>\n\n  <div class=\"modal-body\" >\n    <div class=\"row\">\n      <table class=\"table-striped customTable\" style=\"width: 100% !important;\">\n        <thead>\n          <tr style=\"height: 30px\">\n            <th>Unknown IPs</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let ip of this.ipsList\" style=\"height: 30px\">\n            <td>OTHERS: {{ip[0]}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"row\">\n\n    </div>\n\n  </div>\n<!--\n  <div class=\"modal-footer\">\n  </div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\n\nimport { ApiService } from 'src/app/shared/api.service';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\n\n@Component({\n  selector: 'app-alerts',\n  templateUrl: './alerts.component.html',\n  styleUrls: ['./alerts.component.css']\n})\nexport class AlertsComponent implements OnInit {\n\n  public ipsList: string[] = [];\n\n  constructor(public global: GlobalService, public api: ApiService, public util: UtilService) { }\n\n  ngOnInit(): void {\n    const ips = this.global.getGlobal('list_ips');\n    const t0_vis = this.global.getGlobal('t0_vis').value * 1000;\n    const t1_vis = this.global.getGlobal('t1_vis').value * 1000;\n    for(let i = 0; i < ips.value.length; i++) {\n      let t0_ip = new Date(ips.value[i][1]).getTime();\n      let t1_ip = new Date(ips.value[i][2]).getTime();\n      //if(t0_ip >= t0_vis && t1_ip <= t1_vis) this.ipsList.push(ips.value[i]);\n      if(ips.value[i][3] == 1) this.ipsList.push(ips.value[i]);\n    };\n    if(this.ipsList.length) {\n      const obj = this.global.getGlobal('widgets_charts');\n\n      // obj.value['alerts'] = !obj.value['alerts'];\n      obj.value['hasAlert'] = true;\n      this.global.setGlobal(obj);\n    }\n  }\n\n  toggleFiltersVisibility() {\n    const obj = this.global.getGlobal('widgets_charts');\n\n    obj.value['alerts'] = !obj.value['alerts'];\n    this.global.setGlobal(obj);\n  }\n}\n","import * as d3 from 'd3';\nimport d3Tip from \"d3-tip\";\nimport { CategoryScale, Chart, Legend, LinearScale, LineController, LineElement, PointElement, Tooltip } from 'chart.js';\n\n\nexport class Network {\n  // chart data\n  protected _data: any = null;\n\n  // capitals\n  protected _capitals: any = null;\n\n  // params\n  protected _isTime: boolean = false;\n  protected _invert: boolean = false;\n  protected _capitalId: number = 0;\n\n  // Chart div\n  protected _chartDiv: HTMLElement;\n  // Svg element\n  protected _svgCanvas: any = null;\n  // Group element\n  protected _svgGroup: any = null;\n\n  // margin object\n  protected _margin = { top: 40, right: 10, bottom: 50, left: 70 };\n\n  // svg width\n  protected _width: number = 800;\n  // charts height\n  protected _height: number = 600;\n\n  // scales\n  protected _inScale: any = null;\n  protected _outScale: any = null;\n  protected _cScale: any = null;\n\n  // axis\n  protected _xAxis: any = null;\n  protected _yAxis: any = null;\n\n  // axis labels\n  protected _xAxisLabel: any = null;\n  protected _yAxisLabel: any = null;\n\n  // title\n  protected _title: any = null;\n\n  // last rectangle stroke added\n  protected _lastIndices: number[] = [];\n\n  constructor(chartDiv: HTMLElement) {\n    this._chartDiv = chartDiv;\n\n    this.initSvgAndGroups();\n    this.initScalesAndAxes();\n\n    window.addEventListener('resize', this.resize.bind(this));\n  }\n\n  setData(data: any, capitals: any, isTime: boolean = false, invert: boolean = false, capitalId: number) {\n    this._data = data;\n    this._capitals = capitals;\n    this._isTime = isTime;\n    this._invert = invert;\n    this._capitalId = capitalId;\n  }\n\n  render() {\n    this.updateScales();\n    this.updateAxes();\n    this.updateLabelsAndTitle()\n    this.updateRectangles();\n    this.updateLegend();\n  }\n\n  resize() {\n    this._svgCanvas.remove();\n\n    this.initSvgAndGroups();\n    this.initScalesAndAxes();\n    this.render();\n  }\n\n  initSvgAndGroups() {\n    // dimensions using margins convention\n    this._width = this._chartDiv.clientWidth - this._margin.left - this._margin.right;\n    this._height = this._chartDiv.clientHeight - this._margin.top - this._margin.bottom;\n\n    // creates the new canvas element\n    this._svgCanvas = d3.select(this._chartDiv)\n        .append('svg')\n        .attr('width', this._chartDiv.clientWidth)\n        .attr('height', this._chartDiv.clientHeight + 26);\n\n    // axis title\n    this._svgCanvas\n    .append('text')\n    .attr('class', 'chart chart-title')\n    .attr(\"transform\", \"translate(\" + (this._width/1.6) + \" ,\" + (this._margin.top  - 15) + \")\")\n    .style(\"text-anchor\", \"middle\")\n    .style('fill', '#8c8c8c');\n\n    // axis label groups\n    this._svgCanvas\n    .append('text')\n    .attr('class', 'axis axis--x--label')\n    .attr(\"transform\", \"translate(\" + (this._width/1.6) + \" ,\" + (this._height + this._margin.bottom + 30) + \")\")\n    .style(\"text-anchor\", \"middle\")\n    .style('fill', '#8c8c8c');\n\n    this._svgCanvas\n    .append('text')\n    .attr('class', 'axis axis--y--label')\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 10)\n    .attr(\"x\", 0 - (this._height / 1.5))\n    .attr(\"dy\", \"1em\")\n    .style(\"text-anchor\", \"middle\")\n    .style('fill', '#8c8c8c');\n    \n    // creates the group\n    this._svgGroup = this._svgCanvas\n        .append('g')\n        .attr('class', 'svgGroup')\n        .attr('transform', 'translate(' + this._margin.left + ',' + this._margin.top + ')');\n\n    // axis groups\n    this._svgGroup\n        .append('g')\n        .attr('class', 'axis axis--x')\n        .attr('transform', 'translate(0,' + (this._height) + ')');\n\n    this._svgGroup\n        .append('g')\n        .attr('class', 'axis axis--y');\n  }\n\n  initScalesAndAxes() {\n    this._inScale = d3.scaleBand().range([0, this._height]).paddingInner(0.1).paddingOuter(0.0);\n    this._outScale = d3.scaleBand().range([0, this._width]).paddingInner(0.1).paddingOuter(0.0);\n    this._cScale = d3.scaleSequential(d3.interpolateReds);\n\n    // @ts-ignore\n    this._xAxis = d3.axisBottom(this._outScale);\n    // @ts-ignore\n    this._yAxis = d3.axisLeft(this._outScale);\n  }\n\n   updateScales() {\n    const ids = this._data.map( (d: any) => this.getCapitalId( d[0] ));\n    const labelsIn = Array.from(new Set(ids));\n\n    let labelsOut = labelsIn;\n    if (this._isTime) {\n      const ts = this._data.map( (d: any) => this.valToDate(d[1]) );\n      labelsOut = Array.from(new Set(ts));\n    }\n\n    // @ts-ignore\n    this._inScale.domain(labelsIn);\n    // @ts-ignore\n    this._outScale.domain(labelsOut);\n    // @ts-ignore\n    const all = d3.extent(this._data.map((d: any) => d[2]).filter(e => e > 0) );\n\n    if (this._invert) {\n      this._cScale.domain( all.reverse() );\n    }\n    else {\n      this._cScale.domain( all );\n    }\n    console.log(\"Color Scale\", all)\n  }\n\n  updateAxes() {\n    this._xAxis.scale(this._outScale).tickSizeOuter(0);\n    this._svgGroup.select('.axis--x').call(this._xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'end')\n        .style('pointer-events', 'auto')\n        .style('', 'default')\n        .attr('dx', '-0.1em')\n        .attr('dy', '+0.3em')\n        .attr('transform', 'rotate(-25)');\n\n    this._yAxis.scale(this._inScale).tickSizeOuter(0);\n    this._svgGroup.select('.axis--y').call(this._yAxis)\n        .selectAll('text')\n        .style('pointer-events', 'auto')\n  }\n\n\n  updateRectangles() {\n    // @ts-ignore\n    const tip = d3Tip()\n    .attr('class', 'd3-tip').html((d: any) => {\n      return `${(d[2]).toFixed(1)}`;\n    })\n    this._svgCanvas.call(tip);\n\n    const rects = this._svgGroup.selectAll(\".rect_group\").data([null]).join('g').attr('class', 'rect_group');\n\n    rects.selectAll(\"rect\")\n        .data(this._data)\n        .join(\"rect\")\n        .attr(\"x\", (d: any) => this._outScale( this._isTime ? this.valToDate( d[1] ) : this.getCapitalId(d[1])))\n        .attr(\"y\", (d: any) => this._inScale( this._isTime ? this.getCapitalId(d[0]) : this.getCapitalId(d[0])))\n        .attr(\"width\", this._outScale.bandwidth())\n        .attr(\"height\", this._inScale.bandwidth())\n        .attr(\"fill\", (d: any) => this.valToColor(d))\n        .attr(\"id\", (d: any, i: number) => i )\n        .on('mouseover', (e: any, d: any) => tip.show(d, e.target))\n        .on('mouseout' , (e: any, d: any) => tip.hide(d, e.target));\n  }\n\n  highlightRectangle(indices: number[]) {\n    if(this._lastIndices.length > 0) {\n      for(let i = 0; i < this._lastIndices.length; i++) {\n        this._svgGroup.select('[id=\"' + this._lastIndices[i] + '\"]')\n        .attr(\"stroke\", \"none\");\n      }\n    }\n\n    for(let i = 0; i < indices.length; i++) {\n    this._svgGroup.select('[id=\"' + indices[i] + '\"]')\n                  .attr(\"stroke\", \"#333\")\n                  .attr('stroke-width', '2')\n    }\n\n    this._lastIndices = indices;      \n  }\n\n  removeRectangleHighlight() {\n    if(this._lastIndices.length > 0) {\n      for(let i = 0; i < this._lastIndices.length; i++) {\n        this._svgGroup.select('[id=\"' + this._lastIndices[i] + '\"]')\n        .attr(\"stroke\", \"none\");\n      }\n    }\n    this._lastIndices = [];  \n  }\n\n  updateLabelsAndTitle() {\n\n    if (this._isTime) {\n      const popId = this.getCapitalId(this._capitalId);\n      this._xAxisLabel = 'Tempo'\n      this._yAxisLabel = 'Pop de chegada';\n      this._title = 'Medição do pop ' +  popId + ' para os demais pops ao longo do tempo'\n    } else {\n      this._capitalId = 0;\n      this._xAxisLabel = 'Pop de chegada'\n      this._yAxisLabel = 'Pop de saída';\n      this._title = 'Medição entre pops'\n    }\n\n    this._svgCanvas.select('.axis--x--label')\n        .text(this._xAxisLabel)\n\n    this._svgCanvas.select('.axis--y--label')\n        .text(this._yAxisLabel)\n\n    this._svgCanvas.select('.chart-title')\n        .text(this._title)\n  }\n\n  updateLegend() {\n    //remove antiga legenda e ticks\n    this._svgCanvas.select(\".legend-scale\").remove();\n    this._svgCanvas.select(\"defs\").remove();\n    this._svgCanvas.select(\"#linear-gradient\").remove();\n    this._svgCanvas.select(\"#legend\").remove();\n\n    const defs =  this._svgCanvas\n                  .append('defs')\n\n    const linearGradient =  defs\n                            .append('linearGradient')\n                            .attr('id', 'linear-gradient')\n\n    linearGradient.selectAll('stop')\n    .data(this._cScale.ticks().map((t: any, i: any, n: any) => ({ offset: `${100*i/n.length}%`, color: this._cScale(t) })))\n    .enter().append('stop')\n    .attr('offset', (d: any) => d.offset)\n    .attr('stop-color', (d: any) => d.color); \n\n    this._svgCanvas\n    .append('g')\n    .attr('id', 'legend')\n    .attr(\"transform\", \"translate(\" + (this._width*0.05) + \" ,\" + (this._height + this._margin.bottom + 42) + \")\")\n    .append(\"rect\")\n    .attr('transform', \"translate(\" + this._margin.left + \" ,\" +  0 + \")\")\n    .attr(\"width\", this._width - this._margin.right - this._margin.left)\n    .attr(\"height\", 12)\n    .style('fill', 'url(#linear-gradient)')\n\n    const legendScale = d3.scaleLinear()\n                        .domain(this._cScale.domain())\n                        .range([this._margin.left, this._width - this._margin.right])\n    \n    this._svgCanvas\n    .append('g')\n    .attr(\"class\", \"legend-scale\")\n    .attr(\"transform\", \"translate(\" + (this._width*0.05) + \" ,\" + (this._height + this._margin.bottom + 42) + \")\")\n    .call(d3.axisBottom(legendScale)\n    .ticks(this._width / 100)\n    .tickSize(12))\n\n    this._svgCanvas.selectAll(\".legend-scale line\")\n    .attr(\"stroke\", \"#fff\");\n\n    this._svgCanvas.select(\".legend-scale path\")\n    .attr(\"stroke\", \"#fff\");\n  }\n\n  getCapitalId(id: number) {\n    return this._capitals.filter((c: any) => c.cod === id)[0].id.toUpperCase();\n  }\n\n  valToColor(d: any) {\n    if (d[2] === 0) {\n      return \"#333\";\n    }\n    \n    return this._cScale(d[2])\n  }\n\n  valToDate(d: any) {\n    const data = new Date(1000 * d)\n    //@ts-ignore\n    return data.toLocaleString('en-US', { dateStyle: 'short', timeZone: 'UTC' });\n  }\n}\n\n\nexport class Timeseries {\n\n  private chart: any;\n  private canvas: HTMLCanvasElement;\n  // capitals\n  private capitals: any = null;\n  // labels \n  private labels: any = null;\n  private data: any = null;\n  \n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.init();\n  }\n\n  //Configuração do grafico\n  init() {\n    if (this.canvas === undefined) {\n      return;\n    }\n\n    //Registra os elementos utilizados pelo grafico\n    Chart.register(PointElement, LineElement, LineController, CategoryScale, LinearScale, Legend, Tooltip);\n    Chart.defaults.animation = false;\n\n    this.chart = new Chart(this.canvas, {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: []\n      },\n      options: {\n        plugins: {\n          legend: {\n            title: {\n              display: true,\n              text: 'Legend'\n            },\n            display: true,\n            position: \"top\",\n          },\n          title: {\n            display: false,\n            text: 'Title'\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false,\n          },\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        responsive: true,\n        hover: {\n          mode: 'nearest',\n          intersect: true\n        },\n        scales: {\n          x: {\n            display: true,\n            time: {\n              parser: 'MM/DD/YYYY HH:mm',\n              tooltipFormat: 'll HH:mm'\n            },\n            title: {\n              display: true,\n              text: 'Tempo'\n            }\n          },\n          y: {\n            display: true,\n            title: {\n              display: true,\n              text: 'Pop de chegada'\n            }\n          }\n        }\n      }\n    });\n  }\n\n\n  //Modifica as configurações globais para os títulos\n  setTitle(id: number) {\n    this.chart.options.plugins.legend.title.text = this.getCapitalId(id);\n  }\n\n  setCapitals(capitals: any) {\n    this.capitals = capitals;\n  }\n\n  updateData(data: any, colorList: any) {\n    const datasets = this.chart.config.data.datasets;\n    for(let i = 0; i < data.length; i++) {\n      const newData = {\n        label: this.getCapitalId(data[i][0]),\n        data: data[i][1],\n        backgroundColor: colorList[i],\n        borderColor: colorList[i],\n        fill: false\n      };\n      datasets.push(newData);\n    }\n    this.chart.update();\n  }\n\n  setLabels(labels: any) {\n      this.chart.config.data.labels = labels;\n  }\n\n  getCapitalId(id: number) {\n      return this.capitals.filter((c: any) => c.cod === id)[0].id.toUpperCase();\n  }\n\n  clear() {\n    this.chart.data.labels = [];\n    this.chart.data.datasets = [];\n    this.chart.update();\n  }\n\n  render() {\n    this.chart.update();\n  }\n\n  removeDataset() {\n    this.chart.config.data.labels = [];\n    this.chart.config.data.datasets = [];\n    this.chart.update();\n  }\n}","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { point } from 'leaflet';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\nimport { Network } from './network';\nimport { Timeseries } from './network';\n\n@Component({\n  selector: 'app-network',\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.css']\n})\nexport class NetworkComponent implements OnInit {\n\n  // referência para o div do grafico\n  @ViewChild(\"netChart\", { static: true }) private netDiv!: ElementRef;\n  @ViewChild(\"timeseriesChart\", { static: true }) private timeseriesDiv!: ElementRef;\n\n  @Output() heatMatrixValueChanged = new EventEmitter<number>();\n  @Output() heatMatrixParamChanged = new EventEmitter<number>();\n  @Output() onCapitalSelected = new EventEmitter<any>();\n  // objeto do gráfico\n  private netChart: any;\n  private timeseriesChart: any;\n  //capitals select list\n  private selectedCapitals: any = [];\n  //lista de cores\n  private drawColors: any = [\n    '#1F77B4', '#2CA02C', '#9467BD', '#8C564B', '#E377C2',\n    '#AEC7E8', '#98DF8A', '#C5B0D5', '#C49C94', '#F7B6D2'\n  ];\n  //guarda se o chart a ser mostrado é o network ou umap\n  public networkChange: boolean = false;\n  //lista de cores já usadas\n  private usedColors: any = [];\n  //multiselect\n  public dropdownList: any = [];\n  public dropdownSettings: any = {};\n\n  constructor(public global: GlobalService, public util: UtilService) { }\n\n  ngOnInit(): void {\n    this.netChart = new Network(this.netDiv.nativeElement);\n    this.timeseriesChart = new Timeseries(this.timeseriesDiv.nativeElement);\n    //setando as configuracoes do multiselect\n    const capitals = this.global.getGlobal(\"state_capitals\").value.default;\n    for(let i = 0; i < capitals.length; i++) {\n      let id = capitals[i].id.toUpperCase();\n      let cod = capitals[i].cod;\n      let obj:any = {};\n      obj['estado'] = id;\n      obj['cod'] = cod;\n      this.dropdownList.push(obj);\n    };\n    this.dropdownSettings = {\n      singleSelection: false,\n      limitSelection: 10,\n      idField: 'cod',\n      textField: 'estado',\n      enableCheckAll: false,\n      unSelectAll: false,\n      itemsShowLimit: 0,\n      allowSearchFilter: false\n    };\n  }\n\n  drawChart(data: any, capitals: any, clicked: number = -1, invert: boolean = false) {\n    const capitalId = clicked;\n    this.netChart.setData(data, capitals, clicked >= 0, invert, capitalId);\n    this.netChart.render();\n    this.timeseriesChart.setCapitals(capitals);\n  }\n\n  updateTimeseriesData(data: any, dates: any, capitals: any, clicked: number) {\n    for(let i = 0; i < data.length; i++) {\n       this.updateUsedColors(true,this.drawColors[i]);\n    }\n\n    this.timeseriesChart.clear();\n    this.timeseriesChart.updateData(data, this.drawColors);\n    this.timeseriesChart.setLabels(dates);\n    this.timeseriesChart.setTitle(clicked);\n    this.timeseriesChart.render();\n  }\n\n  onValueChange(event: any) {\n    const heatmatrix_value = {\n      key: \"heatmatrix_value\",\n      value: event.target.value\n    };\n    this.global.setGlobal(heatmatrix_value);\n    this.heatMatrixValueChanged.emit();\n    if(!this.isTimeseriesSelected()) { \n      this.onCapitalSelected.emit(this.selectedCapitals);\n    }\n  }\n\n  onParamChange(event: any) {\n    const heatmatrix_param = {\n      key: \"heatmatrix_param\",\n      value: event.target.value\n    };\n    this.global.setGlobal(heatmatrix_param);\n    this.heatMatrixParamChanged.emit();\n    if(!this.isTimeseriesSelected()) { \n      this.onCapitalSelected.emit(this.selectedCapitals);\n    }\n  }\n\n  onChartChange(event: any) {\n    if(event.target.value == 'heatmatrix') {\n      const network_param = {\n        key: \"network_param\",\n        value: 1\n      };\n      this.global.setGlobal(network_param);\n    } else {\n      const network_param = {\n        key: \"network_param\",\n        value: 0\n      };\n      this.global.setGlobal(network_param);  \n    }\n  }\n\n  networkToggle() {\n    this.networkChange = !this.networkChange;\n  }\n\n  isTimeseriesSelected() {\n    const network_param = this.global.getGlobal(\"network_param\");\n    return network_param.value !== 0;\n  }\n\n\n  onCapitalSelect(event: any, added: boolean) {\n    if(this.selectedCapitals.includes(event.cod)) {\n      const index = this.selectedCapitals.indexOf(event.cod);\n      this.selectedCapitals = this.selectedCapitals.filter((e:any) => e !== event.cod);\n      this.updateUsedColors(false, this.usedColors[index]);\n    } else {\n      this.selectedCapitals.push(event.cod);\n    };\n    this.onCapitalSelected.emit(this.selectedCapitals);\n  }\n\n  chartDisplay() {\n    const network_param = this.global.getGlobal(\"network_param\").value;\n    //verdadeiro para heatmatrix\n    if(network_param == 1) return [true,false];\n    //verdadeiro para time series\n    else return [false,true];\n  }\n\n  isCapitalSelected() {\n    return (this.global.getGlobal(\"clicked_element\").value > 0)\n  }\n  \n  clearTimeseries() {\n    this.selectedCapitals = [];\n    this.timeseriesChart.clear();\n  }\n\n  /**\n * seta as cores já utilizadas\n */\n  updateUsedColors(added: boolean, color: string) {\n    if (added) {\n      if(!this.usedColors.includes(color)) this.usedColors.push(color);\n    }\n    else {\n      this.usedColors = this.usedColors.filter( (d: string) => d !== color );\n    }\n  }\n\n  highlightHeatmatrix(indices: number[]) {\n    this.netChart.highlightRectangle(indices);\n  }\n  \n  removeHighlightHeatmatrix() {\n    this.netChart.removeRectangleHighlight();\n  }\n}\n","<div>\n    <div class=\"fill network-chart\" [style.z-index]=\"this.chartDisplay()[0] ? 99 : -1\" [style.opacity]=\"this.chartDisplay()[0] ? 1 : 0\" #netChart></div>\n    <div class=\"fill timeseries-chart\" [style.z-index]=\"this.chartDisplay()[1] ? 99 : -1\" [style.opacity]=\"this.chartDisplay()[1] ? 1 : 0\">\n        <canvas style=\"padding-bottom: 10px; width: 100%; height: 100%;\" #timeseriesChart></canvas>\n    </div>\n    <div style=\"display: flex; margin-top: 27px; padding-bottom: 7px; width: 100%; border-top: 1px solid #eee; left: 10px; font-size: 11px !important;\">\n        <div id=\"code-select-box\" class=\"code-select\">\n            <select name=\"code\" class=\"network-select\" (change)=\"this.onParamChange($event)\" [disabled]=\"this.networkChange\">\n                <optgroup label=\"Atraso e perda\">\n                    <option value=\"10\">Failures</option>\n                    <option value=\"11\">Atraso de ida e volta (RTT - average)</option>\n                    <option value=\"12\">Atraso de ida e volta (RTT - min)</option>\n                    <option value=\"13\">Atraso de ida e volta (RTT - max)</option>\n                    <option value=\"16\">Histogram-ttl-reverse (average)</option>\n                    <option value=\"17\">Histogram-ttl-reverse (min)</option>\n                    <option value=\"18\">Histogram-ttl-reverse (max)</option>\n                    <option value=\"21\">Packet-count-lost-bidir</option>\n                    <option value=\"22\">Packet-count-sent</option>\n                    <option value=\"23\">Packet-duplicates-bidir</option>\n                    <option value=\"24\">Packet-loss-rate-bidir</option>\n                    <option value=\"25\">Packet-reorders-bidir</option>\n                </optgroup>\n                <optgroup label=\"Atraso unidirecional\">\n                    <option value=\"40\">Failures</option>\n                    <option value=\"41\">Atraso unidirecional (owdelay - average)</option>\n                    <option value=\"42\">Atraso unidirecional (owdelay - min)</option>\n                    <option value=\"43\">Atraso unidirecional (owdelay - max)</option>\n                    <option value=\"46\">Histogram-ttl (average)</option>\n                    <option value=\"47\">Histogram-ttl (min)</option>\n                    <option value=\"48\">Histogram-ttl (max)</option>\n                    <option value=\"51\">Packet-count-lost</option>\n                    <option value=\"52\">Packet-count-sent</option>\n                    <option value=\"53\">Packet-duplicates</option>\n                    <option value=\"54\">Packet-loss-rate</option>\n                    <option value=\"55\">Packet-reorders</option>\n                </optgroup>\n                <optgroup label=\"BANDA (BBR)\">\n                     <option value=\"70\">Failures</option>\n                    <option value=\"71\">Packet-retransmits</option>\n                    <option value=\"72\">Packet-retransmits-subintervals (average)</option>\n                    <option value=\"73\">Packet-retransmits-subintervals (min)</option>\n                    <option value=\"74\">Packet-retransmits-subintervals (max)</option>\n                    <option value=\"77\">Throughput (BBR)</option>\n                    <option value=\"78\">Throughput-subintervals (average)</option>\n                    <option value=\"79\">Throughput-subintervals (min)</option>\n                    <option value=\"80\">Throughput-subintervals (max)</option>\n                </optgroup>\n                <optgroup label=\"BANDA (CUBIC)\">\n                    <option value=\"100\">Failures</option>\n                    <option value=\"101\">Packet-retransmits</option>\n                    <option value=\"102\">Packet-retransmits-subintervals (average)</option>\n                    <option value=\"103\">Packet-retransmits-subintervals (min)</option>\n                    <option value=\"104\">Packet-retransmits-subintervals (max)</option>\n                    <option value=\"107\">Throughput (CUBIC)</option>\n                    <option value=\"108\">Throughput-subintervals (average)</option>\n                    <option value=\"109\">Throughput-subintervals (min)</option>\n                    <option value=\"110\">Throughput-subintervals (max)</option>\n                </optgroup>\n                <optgroup label=\"TraceRoute\">\n                    <option value=\"130\">Failures</option>\n                    <option value=\"131\">Packet-trace (average)</option>\n                    <option value=\"132\">Packet-trace (min)</option>\n                    <option value=\"133\">Packet-trace (max)</option>\n                </optgroup>\n            </select>\n        </div>\n        <div id=\"codfield-select-box\" class=\"codfield-select\">\n            <select name=\"codfield\" class=\"network-select\" (change)=\"this.onValueChange($event)\">\n                <option value=\"h_avg\">Average</option>\n                <option value=\"h_max\">Max</option>\n                <option value=\"h_min\">Min</option>\n            </select>        \n        </div>\n        <div id=\"chart-select-box\" class=\"chart-select\">\n            <select name=\"chart-selector\" class=\"network-select\" (change)=\"this.onChartChange($event)\">\n                <option value=\"heatmatrix\">Heatmatrix</option>\n                <option value=\"timeseries\" [disabled]=\"!this.isCapitalSelected()\">Time Series</option>\n            </select>       \n        </div>\n        <div *ngIf=\"this.isCapitalSelected()\" id=\"chart-select-box\" class=\"chart-select\">\n            <ng-multiselect-dropdown class=\"custom-font-size custom-radius custom-dropdown custom-dropdown-place custom-dropdown-rotation \"\n            [disabled]=\"this.isTimeseriesSelected()\"\n            [placeholder]=\"'Estados'\"\n            [settings]=\"this.dropdownSettings\"\n            [data]=\"this.dropdownList\"\n            (onSelect)=\"this.onCapitalSelect($event, true)\"\n            (onDeSelect)=\"this.onCapitalSelect($event, false)\">\n            </ng-multiselect-dropdown>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor() {}\n}\n","<app-top-bar></app-top-bar>\n<app-home></app-home>\n","import { Component, OnInit, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { GlobalService } from 'src/app/shared/global.service';\n\n@Component({\n  selector: 'app-time-bar',\n  templateUrl: './time-bar.component.html',\n  styleUrls: ['./time-bar.component.css']\n})\nexport class TimeBarComponent implements OnInit {\n    @Output() chartTimeChanged = new EventEmitter<number>();\n\n    constructor(public global: GlobalService) {}\n\n    ngOnInit(): void {\n    }\n\n    onClickTime(delta: number) {\n        this.chartTimeChanged.emit(delta);\n    }\n\n    refreshAvailable() {\n        const bnds = this.global.getGlobal(\"bounds_time\");\n    \n        const tsT0 = this.global.getGlobal(\"t0_vis\");\n        const tsT1 = this.global.getGlobal(\"t1_vis\");\n    \n        return bnds.value[0] !== tsT0.value || bnds.value[1] !== tsT1.value;\n      }\n}\n","<div class=\"row\">\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(-3)'>\n        <i class=\"fas fa-fast-backward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(-2)'>\n        <i class=\"fas fa-backward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(-1)'>\n        <i class=\"fas fa-step-backward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(1)'>\n        <i class=\"fas fa-step-forward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(2)'>\n        <i class=\"fas fa-forward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(3)'>\n        <i class=\"fas fa-fast-forward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(4)'>\n        <i class=\"fas fa-search-plus line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(-4)'>\n        <i class=\"fas fa-search-minus line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(5)'>\n        <i class=\"fas fa-sync-alt line-time-icon\"\n        [style.color]=\"this.refreshAvailable() ? '#F97432' : '#kkk'\"\n        ></i>\n    </button>\n</div>","// inclusão de bibliotecas do angular\nimport { AfterViewInit, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n\n// inclusão do leaflet\nimport * as L from 'leaflet';\n\n// inclusão do leaflet draw\nimport 'leaflet-draw';\n\n// inclusão do heatmap\nimport 'leaflet-heatmap';\ndeclare var HeatmapOverlay: any;\n\n// inclusão do leaflet easybutton\nimport 'leaflet-easybutton';\n\n// inclusões da aplicação\nimport { ApiService } from 'src/app/shared/api.service';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\nimport { createHostListener } from '@angular/compiler/src/core';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements AfterViewInit {\n  // referência para o div do mapa\n  @ViewChild(\"map\", { static: true }) private mapDiv?: ElementRef;\n\n  // eventos de desenho no mapa\n  @Output() polyCreatedEvent = new EventEmitter<any>();\n  @Output() polyRemovedEvent = new EventEmitter<any>();\n  @Output() polyEditedEvent = new EventEmitter<any>();\n  @Output() moveEndedEvent = new EventEmitter();\n\n  // eventos de seleção de markers\n  @Output() markerAddedEvent = new EventEmitter<any>();\n  @Output() markerRemovedEvent = new EventEmitter<any>();\n\n  // evento para reset da timeseries\n  @Output() resetTimeseries = new EventEmitter();\n\n  // objeto com o mapa do leaflet\n  private map!: L.Map;\n  // objeto com os clientes\n  private geojson!: L.GeoJSON<any>;\n  // pbjeto de desenho de polígonos\n  private drawControl!: L.Control.Draw;\n  // lista de layers ativos\n  private listLayer: any[] = [];\n  // lista dos bairros\n  private listClient: any[] = [];\n  // lista com os clients selecionados no filtro para adição no mapa\n  private clientLayers: any[] = [];\n\n\n  // heatmap layer\n  private current_heatmapLayer: any;\n  // heatmap configuration\n  private heatCfg = {\n    \"radius\": 10.0,\n    \"maxOpacity\": 1.0,\n    \"scaleRadius\": false,\n    \"useLocalExtrema\": true,\n    valueField: 'count',\n    gradient: {\n      '0.0': '#feedde', '.2': '#fdd0a2', '.4': '#fdae6b', '.6': '#fd8d3c', '.8': '#e6550d', '1.0': '#a63603'\n    }\n  };\n\n  constructor(public global: GlobalService, public api: ApiService, public util: UtilService) { }\n\n  ngAfterViewInit(): void {\n    this.setupMap();\n    this.updatePolygonDrawColors();\n  }\n\n  /**\n   * Configura o mapa.\n   */\n  //  -15.787129, -47.884329\n  async setupMap(lat = -15.787129, lng = -47.884329, zoom = 5) {\n    if (this.mapDiv === undefined) {\n      return;\n    }\n\n    // inicialização do mapa\n    this.map = L.map(this.mapDiv.nativeElement).setView([lat, lng], zoom);\n\n    // configuração do layer do mapa\n    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\n      maxZoom: 18,\n      attribution:\n        'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n        '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n        'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n      id: 'mapbox/light-v10',\n      tileSize: 512,\n      zoomOffset: -1\n    }).addTo(this.map);\n\n    // Inicialização do layer do outlier\n    let outlierMarker = new L.FeatureGroup();\n\n    // carregamento do dado dos clientes\n    const clientes = this.global.getGlobal('list_clientes').value.items.map((d: any) => {\n      // adciona um marcador extra\n      if(d.id === \"OTHERS\") {\n        const outColor = this.global.getGlobal('outlier_color').value;\n        outlierMarker.addLayer(L.circle([d.lat,d.lon], 250, { color: outColor, fillColor: outColor, opacity: 1, fillOpacity: 1}));\n      };\n      return {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"Point\",\n          \"coordinates\": [d.lon, d.lat]\n        },\n        \"properties\": d\n      }\n    });\n\n    // adição dos layers clicáveis\n    let capitalsMarkersLayers = new L.FeatureGroup().addTo(this.map);\n    const capitals = this.global.getGlobal('state_capitals').value.default;\n    for(let i = 0; i < capitals.length; i++) {\n      let capitalMarker = L.marker({lat: capitals[i].latitude, lng: capitals[i].longitude}, { icon: this.capitalMarkers(capitals[i].cod) }).on(\"mouseup\", this.capitalClick.bind(this), false);\n      capitalsMarkersLayers.addLayer(capitalMarker);\n    }\n\n    // Inicialização layers dos markers dos clientes\n    let clientMarkersLayers = new L.FeatureGroup();\n    this.geojson = L.geoJSON(clientes, { pointToLayer: this.clientMarker.bind(this), onEachFeature: this.onEachFeature.bind(this) });\n    clientMarkersLayers.addLayer(this.geojson);\n\n    // Inicialização dos layers editaveis\n    let editableLayers = new L.FeatureGroup();\n    this.map.addLayer(editableLayers);\n    // adição e remoção dos layers baseado no\n    this.map.on('zoomend', () => {\n      if(this.map.getZoom() < 9) {\n        this.map.addLayer(capitalsMarkersLayers);\n        this.map.removeLayer(clientMarkersLayers);\n        this.map.removeLayer(outlierMarker);\n      } else {\n        this.map.removeLayer(capitalsMarkersLayers);\n        this.map.addLayer(clientMarkersLayers);\n        this.map.addLayer(outlierMarker);\n      }\n    });\n\n    // Controles de desnho dos polígonos\n    this.drawControl = new L.Control.Draw({\n      position: 'topleft',\n      draw: {\n        polygon: {\n          allowIntersection: false, // Restricts shapes to simple polygons\n          drawError: {\n            color: '#e1e100', // Color the shape will turn when intersects\n            message: '<strong>Error!<strong> you can\\'t draw that!' // Message that will show when intersect\n          },\n        },\n        rectangle: {},\n        polyline: false,\n        circle: false,\n        circlemarker: false,\n        marker: false\n      },\n      edit: {\n        featureGroup: editableLayers,\n      }\n    });\n    this.map.addControl(this.drawControl);\n\n    // Eventos do mapa: criação do polígono\n    this.map.on(L.Draw.Event.CREATED, (e: any) => {\n      const usedColors = this.global.getGlobal(\"used_draw_colors\");\n      if(usedColors.value.length < 10) {\n        this.listLayer.push(e.layer);\n        this.updateUsedColors(true, e.layer.options.color);\n  \n        this.polyCreatedEvent.emit(e.layer);\n        editableLayers.addLayer(e.layer);\n      } else {\n        console.log(\"LIMITE DE SELEÇÃO\")\n      }\n    });\n\n    // Eventos do mapa: deleção do polígono\n    this.map.on(L.Draw.Event.DELETED, (e: any) => {\n      // remover dataset\n      e.layers.eachLayer((layer: any) => {\n        this.polyRemovedEvent.emit(layer)\n        this.removeLayer(layer);\n\n        this.updateUsedColors(false, layer.options.color);\n      });\n    });\n\n    // Eventos do mapa: edição do polígono\n    this.map.on(L.Draw.Event.EDITED, (e: any) => {\n      // update dataset\n      e.layers.eachLayer((layer: any) => {\n        this.removeLayer(layer);\n        this.listLayer.push(e.layer);\n\n        this.polyEditedEvent.emit(layer);\n      });\n    });\n\n    // Eventos do mapa: movimentação do mapa\n    this.map.on('moveend', () => {\n      this.moveEndedEvent.emit();\n    });\n    \n    const global = this.global;\n    const self = this;\n    L.easyButton('fa-redo fa-lg', function(btn,map){\n      const clicked_element = {\n        key: 'clicked_element',\n        value: -1\n      }\n\n      const network_param = {\n        key: 'network_param',\n        value: 1\n      }\n\n      global.setGlobal(clicked_element);\n      global.setGlobal(network_param);\n      self.resetTimeseries.emit();\n      map.setView([lat, lng], zoom);\n    }).addTo(this.map);\n  }\n\n  /**\n   * Retorna lista de poligonos.\n   */\n  getListLayer() {\n    return this.listLayer;\n  }\n\n  /**\n   * Retorna lista de clientes.\n   */\n  getListClient() {\n    return this.listClient;\n  }\n\n  /**\n   * Retorna o mapa.\n   */\n  getMap(): L.Map {\n    return this.map;\n  }\n\n  /**\n   * Monta o trecho da query que define uma região geográfica\n   * conforme a visualização no Mapa.\n   */\n  getLocation(): any[] {\n    let zoom = this.getZoom();\n    let bounds = this.map.getBounds();\n    let c0 = bounds.getNorthEast();\n    let c1 = bounds.getSouthWest();\n\n    let list = [];\n    list.push(\"location\");\n    list.push(\"zrect\");\n    list.push(zoom);\n    list.push(c0.lat);\n    list.push(c1.lng);\n    list.push(c1.lat);\n    list.push(c0.lng);\n\n    return list;\n  }\n\n  /**\n   * Monta o trecho da query que define o poligono.\n   */\n  getPoly(latlngs: any): any[] {\n    let poly = [];\n    for (let i = 0; i < latlngs.length; i++) {\n      poly.push([latlngs[i].lat, latlngs[i].lng]);\n    }\n    let list = [];\n    list.push(\"location\");\n    list.push(\"zpoly\");\n    list.push(this.getZoom());\n    for (let i = 0; i < poly.length; i++) {\n      list.push(poly[i][0]);\n      list.push(poly[i][1]);\n    }\n    return list;\n  }\n\n  /**\n   * Monta o trecho da query que define o cliente\n   */\n  getClient(clientFeature: any) {\n    let list = [];\n    list.push(\"cliente\");\n    list.push(\"eq\");\n    list.push(clientFeature)\n\n    return list;\n  }\n\n  /**\n   * Retorna um zoom mais adequado ao uso nas querys.\n   */\n  getZoom(): number {\n    let geoExtraZoom = this.global.getGlobal(\"geo_extra_zoom\");\n    return this.map.getZoom() - 1 + geoExtraZoom.value;\n  }\n\n  /**\n   * Escolhe uma cor a partir das que já\n   * foram usadas.\n   */\n  updateUsedColors(added: boolean, color: string) {\n    const drawColors = this.global.getGlobal(\"draw_colors\");\n    const usedColors = this.global.getGlobal(\"used_draw_colors\");\n\n    // atualiza as cores usadas\n    if (added) {\n      usedColors.value.push(color);\n    }\n    else {\n      usedColors.value = usedColors.value.filter( (d: string) => d !== color );\n    }\n    this.global.setGlobal(usedColors);\n\n    // atualiza o índice de cor\n    let drawColorIndex = this.global.getGlobal(\"draw_color_index\");\n    for(let id = 0; id< drawColors.value.length; id++) {\n      const current = drawColors.value[id];\n\n      if(!usedColors.value.includes(current)) {\n        drawColorIndex.value = id;\n        break;\n      }\n    }\n    this.global.setGlobal(drawColorIndex);\n    this.updatePolygonDrawColors();\n  }\n\n   /**\n   * Define a cor do retangulo e do poligono que serão desenhados no mapa.\n   */\n    updatePolygonDrawColors() {\n      if (this.drawControl === undefined) {\n        return;\n      }\n\n      let drawColors = this.global.getGlobal(\"draw_colors\");\n      let drawColorIndex = this.global.getGlobal(\"draw_color_index\");\n\n      this.drawControl.setDrawingOptions({\n        rectangle: {\n          shapeOptions: {\n            color: drawColors.value[drawColorIndex.value]\n          }\n        },\n        polygon: {\n          shapeOptions: {\n            color: drawColors.value[drawColorIndex.value]\n          }\n        }\n      });\n    }\n  /**\n   * Remove poligono da lista.\n   */\n  removeLayer(layer: any) {\n    for (let i = 0; i < this.listLayer.length; i++) {\n      if ((((layer instanceof L.Rectangle) &&\n        (this.listLayer[i] instanceof L.Rectangle)) ||\n        ((layer instanceof L.Polygon) &&\n          (this.listLayer[i] instanceof L.Polygon))) &&\n        (layer.options.color == (this.listLayer[i] as any).options.color)) {\n        this.listLayer.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Formata o poligono dos bairros ao clicar.\n   */\n  clientMarker(geoJsonPoint: any, latlng: any) {\n    // @ts-ignore\n    let color = this.global.getGlobal(\"unselected_color\").value;\n    return L.marker(latlng, { icon: this.clientIcon(color) });\n  }\n\n  /**\n   * Formata o poligono dos bairros.\n   */\n  clientIcon(color: any) {\n    return L.divIcon({\n      className: 'custom-div-icon',\n      html: `<div style='background-color:${color};' class='marker-pin'></div><i class='fa fa-circle awesome'>`,\n      iconSize: [30, 42],\n      iconAnchor: [15, 42],\n      popupAnchor: [0, -38]\n    });\n  }\n\n  /**\n   * Markers das capitais dos estados.\n   */\n  capitalMarkers(capitalCod: string){\n    return L.divIcon({\n      className: 'custom-div-icon',\n      html: `<div style='background-color:#000;' class='marker-pin' id='capital-marker' data-capital=` + capitalCod + `></div><i class='fa fa-circle awesome'>`,\n      iconSize: [30, 42],\n      iconAnchor: [15, 42]\n    });\n  }\n  /**\n   * Ação de click no marker da capital.\n   */\n\n  capitalClick(event: any) {\n    // pega o id da capital referente ao marker clicado\n    const clickedIcon = event.target.options.icon.options.html;\n    const html = new DOMParser().parseFromString(clickedIcon, \"text/html\");\n    const element = html.getElementById('capital-marker');\n    const capitalData = element?.getAttribute('data-capital');\n    let cod;\n    if (capitalData) cod = parseInt(capitalData);\n\n    const clicked_element = {\n      key: 'clicked_element',\n      value: cod\n    }\n    this.global.setGlobal(clicked_element);\n    event.sourceTarget._map.setView([event.latlng.lat, event.latlng.lng], 12);\n  }\n\n  /**\n   * Atribui eventos aos markers dos pops.\n   */\n  onEachFeature(feature: any, layer: any) {\n    // criação do popup\n    const cliente = feature.properties.caption;\n    let contentPopup = '';\n\n    if(layer.feature.properties.id == \"OTHERS\") {\n      const size = this.global.getGlobal('list_ips').value.length;\n\n      contentPopup = \"<div>\" +\n      \"<div style='display: block;'><b>\" + cliente + \" (\" + size + \" IPs)</b></div>\" +\n      \"</div>\";\n    }\n    else {\n      contentPopup = \"<div>\" +\n      \"<div style='display: block;'><b>\" + cliente + \"</b></div>\" +\n      \"</div>\";\n    }\n\n    layer.bindPopup(contentPopup);\n\n    // Evento de click no marker\n    layer.on('click', () => {\n      // default color\n      let color = this.global.getGlobal(\"unselected_color\").value;\n      // searches the client\n      const found = this.listClient.findIndex(d => {\n        return d.cod === feature.properties.cod;\n      });\n\n      const usedColors = this.global.getGlobal(\"used_draw_colors\");\n\n      if (found >= 0) {\n        layer.setIcon(this.clientIcon(color));\n        const client = this.listClient.splice(found, 1);\n        color = client[0].color;\n\n        this.markerRemovedEvent.emit(client[0]);\n        this.updateUsedColors(found<0, color);\n      } else {\n        // libera criação de layer se tiver cor disponível\n        if(usedColors.value.length < 10) {\n          let drawColors = this.global.getGlobal(\"draw_colors\");\n          let drawColorIndex = this.global.getGlobal(\"draw_color_index\");\n\n          color = drawColors.value[drawColorIndex.value];\n          layer.setIcon(this.clientIcon(color));\n\n          const client = {\n            cod: feature.properties.cod,\n            nome: feature.properties.id,\n            color: color,\n          };\n          this.listClient.push(client);\n\n          this.markerAddedEvent.emit(client);\n          this.updateUsedColors(found<0, color);\n        } else {\n          console.log(\"LIMITE DE SELEÇÃO\")\n        }\n      }\n    });\n\n    // Evento de mouseout no marker.\n    layer.on('mouseout', () => {\n\n      const found = this.listClient.findIndex(d => {\n        return d.cod === feature.properties.cod;\n      });\n\n      if (found >= 0) {\n        layer.setIcon(this.clientIcon(this.listClient[found].color));\n      }\n\n      layer.closePopup();\n    });\n\n    // Evento de mouseover no marker.\n    layer.on('mouseover', () => {\n      layer.openPopup();\n    });\n  }\n\n  /**\n   * Função que desenha um heatmap a partir dos dados passados como parâmetro.\n   */\n  drawHeatMap(json: any) {\n    if (json.tp == \"0\") {\n      console.log(json);\n      return;\n    }\n\n    let a = [];\n    let max_v = 0;\n    let min_v = Number.MAX_VALUE;\n    let zoom = this.map.getZoom() - 1;\n    let b = this.map.getBounds();\n    let geoExtraZoom = this.global.getGlobal(\"geo_extra_zoom\");\n    for (let i = 0; i < json.result.length; i++) {\n      let o = json.result[i];\n      let vlat = this.util.tile2latX(o.k[0], zoom + geoExtraZoom.value);\n      let vlon = this.util.tile2longX(o.k[1], zoom + geoExtraZoom.value);\n      let coords = [vlat, vlon];\n      vlat = coords[0];\n      vlon = coords[1];\n      if (!b.contains(L.latLng(vlat, vlon))) continue;\n      let v = Math.log(o.v[0] + 1);\n      o.v[0] = o.v[0] / 1000000000;\n      if (v > max_v) max_v = v;\n      if (v < min_v) min_v = v;\n      let o2 = { lat: vlat, lng: vlon, count: v };\n      a.push(o2);\n    }\n\n    let heatData: any = {};\n    heatData.min = min_v;\n    heatData.max = max_v;\n    heatData.data = a;\n\n    if (this.current_heatmapLayer != undefined) {\n      this.current_heatmapLayer.setData(heatData);\n    } else {\n      this.current_heatmapLayer = new HeatmapOverlay(this.heatCfg);\n      this.current_heatmapLayer.setData(heatData);\n      // desenha o heatmap apenas se o zoom for maior do que 8\n      let currentHeatmapLayer = this.current_heatmapLayer;\n      let map = this.map;\n      this.map.on('zoomend', function() {\n        if(map.getZoom() < 9) {\n          map.removeLayer(currentHeatmapLayer);\n        } else {\n          map.addLayer(currentHeatmapLayer);\n        }\n      });\n    }\n  }\n\n  /**\n   * Função que adiciona os markers do filtro ao mapa\n   */\n  drawFilterMarkers(clientData: any) {\n    const markerList = [];\n    for(let i = 0; i < clientData.length; i++) {\n      const lat = clientData[i].lat;\n      const lng = clientData[i].lon;\n      markerList.push(L.circle([lat,lng], 250, { color: this.global.getGlobal('filter_color').value, fillColor: this.global.getGlobal('filter_color').value, opacity: 1, fillOpacity: 1}));\n    };\n\n    if(this.clientLayers.length) {\n      for(let i = 0; i < this.clientLayers.length; i++){\n        this.map.removeLayer(this.clientLayers[i]);\n      };\n      this.clientLayers = [];\n      for(let i = 0; i < clientData.length; i++) {\n        markerList[i].addTo(this.map);\n        this.clientLayers.push(markerList[i]);\n      };\n    } else {\n      for(let i = 0; i < clientData.length; i++) {\n        markerList[i].addTo(this.map);\n        this.clientLayers.push(markerList[i]);\n      };\n    }\n  };\n\n  /**\n   * Função que deleta o marker\n   */\n  eraseFilterMarkers() {\n    for(let i = 0; i < this.clientLayers.length; i++){\n      this.map.removeLayer(this.clientLayers[i]);\n    };\n    this.clientLayers = [];\n  };\n}\n","<div #map class=\"fill\"></div>\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AngularDraggableModule } from 'angular2-draggable';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\nimport { AppComponent } from './app.component';\nimport { AppInitService } from './app-init.service';\n\nimport { TopBarComponent } from './bars/top-bar/top-bar.component';\nimport { ChartsBarComponent } from './bars/charts-bar/charts-bar.component';\n\nimport { HomeComponent } from './home/home.component';\nimport { MapComponent } from './widgets/map/map.component';\nimport { BarChartComponent } from './widgets/bar-chart/bar-chart.component';\nimport { LineChartComponent } from './widgets/line-chart/line-chart.component';\nimport { FiltersComponent } from './widgets/filters/filters.component';\nimport { AlertsComponent } from './widgets/alerts/alerts.component';\nimport { NetworkComponent } from './widgets/network/network.component';\nimport { TimeBarComponent } from './bars/time-bar/time-bar.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MapComponent,\n    BarChartComponent,\n    LineChartComponent,\n    TopBarComponent,\n    ChartsBarComponent,\n    FiltersComponent,\n    AlertsComponent,\n    NetworkComponent,\n    TimeBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularDraggableModule,\n    NgMultiSelectDropDownModule.forRoot(),\n  ],\n  providers: [\n    AppInitService,\n    {\n        provide: APP_INITIALIZER,\n        multi: true,\n        deps: [AppInitService],\n        useFactory: (appInit: AppInitService) => {\n            return () => {\n                return appInit.init();\n            };\n        }\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CategoryScale, Chart, Legend, LinearScale, LineController, LineElement, PointElement, Tooltip } from 'chart.js';\n\nexport class LineChart {\n\n  private chart: any;\n  private canvas: HTMLCanvasElement;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.init();\n  }\n\n  //Configuração do grafico\n  init() {\n    if (this.canvas === undefined) {\n      return;\n    }\n\n    //Registra os elementos utilizados pelo grafico\n    Chart.register(PointElement, LineElement, LineController, CategoryScale, LinearScale, Legend, Tooltip);\n    Chart.defaults.animation = false;\n\n    this.chart = new Chart(this.canvas, {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: []\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: true,\n            position: \"top\",\n          },\n          title: {\n            display: false,\n            text: 'Title'\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false,\n          },\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        responsive: true,\n        hover: {\n          mode: 'nearest',\n          intersect: true\n        },\n        scales: {\n          x: {\n            display: true,\n            time: {\n              parser: 'MM/DD/YYYY HH:mm',\n              tooltipFormat: 'll HH:mm'\n            },\n            title: {\n              display: false,\n              text: 'X'\n            }\n          },\n          y: {\n            display: true,\n            title: {\n              display: false,\n              text: 'Y'\n            }\n          }\n        }\n      }\n    });\n  }\n\n\n  //Modifica as configurações globais para os títulos\n  setTitle(title: string) {\n    this.chart.options.plugins.title.text = title;\n    this.chart.options.plugins.title.display = true;\n  }\n\n  //Modifica as configurações globais dos ticks comuns para eixos\n  setTicksX(ticks: any) {\n    this.chart.options.scales.x[0].ticks = ticks;\n  }\n\n  setTicksY(ticks: any) {\n    this.chart.options.scales.y[0].ticks = ticks;\n  }\n\n  //Modifica as configurações globais dos dos tipos\n  setTypeX(type: string) {\n    this.chart.options.scales.x[0].type = type;\n  }\n  setTypeY(type: string) {\n    this.chart.options.scales.y[0].type = type;\n  }\n\n  //Modifica as configurações globais dos labels\n  setLabelX(label: string) {\n    this.chart.options.scales.x.title.text = label;\n    this.chart.options.scales.x.title.display = true;\n  }\n  setLabelY(label: string) {\n    this.chart.options.scales.y.title.text = label;\n    this.chart.options.scales.y.title.display = true;\n  }\n\n  setLabels(labels: any) {\n    this.chart.config.data.labels = labels;\n  }\n\n  addDataset(label: any, data: any, color: string) {\n    let dataset = {\n      label: label,\n      backgroundColor: color,\n      borderColor: color,\n      data: data,\n      fill: false\n    };\n    this.chart.config.data.datasets.push(dataset);\n    this.chart.update();\n  }\n\n  updateDataset(dataId: string, color: string, data: any, name: any = undefined) {\n    const datasets = this.chart.config.data.datasets;\n    let label = \"\";\n    if(name) {\n      label = dataId + \" (\" + name + \")\" \n    } else {\n      label = dataId\n    };\n    const id = datasets.findIndex((d: any) => d.backgroundColor == color)\n    if (id >= 0) {\n      datasets[id].data = data;\n    }\n    else {\n      const newData = {\n        label: label,\n        backgroundColor: color,\n        borderColor: color,\n        data: data,\n        fill: false\n      };\n\n      datasets.push(newData);\n    }\n\n    this.chart.update();\n  }\n\n  removeDataset(dataId: string, color: string) {\n    const datasets = this.chart.config.data.datasets;\n\n    const id = datasets.findIndex((d: any) => d.backgroundColor == color)\n    if (id >= 0) {\n      datasets.splice(id, 1)\n      this.chart.update();\n    }\n  }\n\n  clear() {\n    this.chart.data.labels = [];\n    this.chart.data.datasets = [];\n    this.chart.update();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nimport { GlobalService } from './global.service';\nimport { UtilService } from './util.service';\n\nimport { BoundsRequest, QueryRequest, SchemaRequest, MatrixRequest } from 'src/app/shared/api.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // base server url\n  server_url: string = environment.backend;\n  // static files\n  files_url: string = `${environment.backend}/extra`\n  // xhttp urls\n  xhttp_url: string = `${environment.backend}/tc/query`;\n  // config path\n  config_url: string = '../assets/config.json'\n\n  constructor(public global: GlobalService, public utils: UtilService) {}\n\n  updateConfig() {\n    this.server_url = environment.backend;\n    // static files\n    this.files_url = `${environment.backend}/extra`\n    // xhttp urls\n    this.xhttp_url = `${environment.backend}/tc/query`;\n  }\n\n\n  getQueryId() {\n    const id = this.global.getGlobal('query_id').value;\n    const query_id = {\n      key: 'query_id',\n      value: id + 1\n    }\n    this.global.setGlobal(query_id);\n\n    return id;\n  }\n\n  async getIPs() {\n    // IPs address\n    const address = this.files_url + '/dynamic_ips.js'\n    this.utils.showTrace(\"getIPs\", {});\n\n    // Return a new promise.\n    const response = await fetch(address, {\n      method: 'GET',\n    });\n\n    return await response.json();\n  }\n\n  async getConfig() {\n    const response = await fetch(this.config_url, {\n      method: 'GET',\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Carrega o schema do tiny cubes\n   */\n  async getSchema(from: string = 'ttls'): Promise<any> {\n\n    let schema = new SchemaRequest();\n    schema['id'] = this.getQueryId();\n    schema['from'] = from;\n\n    this.utils.showTrace(\"initSchema\", schema);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(schema),\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Acessa o range de tempo\n   */\n  async getTimeBounds(): Promise<any> {\n    let data = new BoundsRequest(24);\n    data['bounds'] = \"time\";\n    data['id'] = this.getQueryId();\n\n    this.utils.showTrace(\"initTimeBounds\", data);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Acessa o range espacial\n   */\n  async getGeoBounds(): Promise<any> {\n    let data = new BoundsRequest(24);\n    data['id'] = this.getQueryId();\n\n    this.utils.showTrace(\"initGeoBounds\", data);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Solicita os dados que compõe o mapa de calor.\n   */\n  async requestHeatMap(location: any[], time: any[]) {\n    let query = new QueryRequest();\n\n    query['select'] = ['hsum'];\n    query['group-by']  = \"location\";\n    query['id'] = this.getQueryId();\n\n    query['where'] = [];\n    if (location !== undefined) {\n      query['where'].push(location);\n    }\n    if (time !== undefined) {\n      query['where'].push(time);\n    }\n\n    this.utils.showTrace(\"requestHeatMap\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n    return await response.json();\n  }\n\n  /**\n   * Solicita os dados do mapa para compor o gráfico de barras.\n   */\n  async requestBarChart(location: any[], time: any[], client: any[] | undefined, params: any) {\n    let query = new QueryRequest();\n\n    query['from'] = params.from;\n    query['select'] = params.select;\n    query['group-by'] = params.groupBy;\n    query['id'] = this.getQueryId();\n\n    query['where'] = [];\n    if (location !== undefined) {\n      query['where'].push(location);\n    }\n    if (time !== undefined) {\n      query['where'].push(time);\n    }\n    if (client !== undefined) {\n      query['where'].push(client);\n    }\n\n    this.utils.showTrace(\"requestBarChart\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n      'dataType': 'json'\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Solicita os dados do mapa para compor o gráfico de linhas.\n   */\n  async requestLineChart(location: any[], time: any[], client: any[] | undefined, params: any) {\n    let query = new QueryRequest();\n    const tsT0 = this.global.getGlobal(\"t0_vis\").value;\n    const tsT1 = this.global.getGlobal(\"t1_vis\").value;\n\n    query['from'] = params.from;\n    query['select'] = params.select;\n    query[\"group-by\"] = {\"field\":\"time\",\"min-k\":tsT0,\"max-k\":tsT1,\"n-points\":1024, \"v\":\"AMPNS\"};\n    query['id'] = this.getQueryId();\n\n    query.where = [];\n    query['where'] = [];\n    if (location !== undefined) {\n      query['where'].push(location);\n    }\n    if (time !== undefined) {\n      query['where'].push(time);\n    }\n    if (client !== undefined) {\n      query['where'].push(client);\n    }\n\n    this.utils.showTrace(\"requestLineChart\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n      'dataType': 'json'\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n    return await response.json();\n  }\n\n  /**\n   * Solicita os dados do mapa para compor a heatmatrix.\n   */\n  async requestHeatmatrix(metric: number, field: string, t0: number, t1: number, clicked: number) {\n    let query = new MatrixRequest();\n\n    if ( clicked >= 0 ) {\n      query['what'] = \"timecolumns\";\n      // @ts-ignore\n      query['idpop'] = clicked;\n      // @ts-ignore\n      // query['ncols'] = 25;\n    }\n    query['metric'] = metric;\n    query['field'] = field;\n    query['start'] = t0;\n    query['end'] = t1;\n    this.utils.showTrace(\"requestHeatMatrix\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n      'dataType': 'json'\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url + '2', {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n\n    return await response.json();\n\n  }\n}\n","import { CategoryScale, Chart, LinearScale, BarController, BarElement, PointElement, Legend, Tooltip } from 'chart.js';\nexport class BarChart {\n\n  private chart: any;\n  private canvas: HTMLCanvasElement;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.init();\n  }\n\n  //Configuração do grafico\n  init() {\n    if (this.canvas === undefined) {\n      return;\n    }\n\n    // Registra os elementos utilizados pelo grafico\n    Chart.register(PointElement, BarController, BarElement, CategoryScale, LinearScale, Legend, Tooltip);\n    Chart.defaults.animation = false;\n\n    // Configuração do gráfico\n    this.chart = new Chart(this.canvas, {\n      type: 'bar',\n      data: {\n        labels: [],\n        datasets: []\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: true,\n            position: \"top\"\n          },\n          title: {\n            display: false\n          }\n        },\n        responsive: true,\n        scales: {\n          x: {\n            stacked: true,\n            title: {\n              display: true,\n              text: 'TTL'\n            }\n          },\n          y: {\n            stacked: true,\n            title: {\n              display: true,\n              text: 'Relative Frequency'\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Modifica as configurações globais para os títulos\n  setTitle(title: string) {\n    this.chart.options.plugins.title.text = title;\n    this.chart.options.plugins.title.display = true;\n  }\n\n  // Modifica as configurações dos ticks\n  setTicksX(ticks: any) {\n    this.chart.options.scales.x[0].ticks = ticks;\n  }\n\n  // Modifica as configurações dos ticks\n  setTicksY(ticks: any) {\n    this.chart.options.scales.y[0].ticks = ticks;\n  }\n\n  // Modifica o tipo do eixo\n  setTypeX(type: string) {\n    this.chart.options.scales.x[0].type = type;\n  }\n\n  // Modifica o tipo do eixo\n  setTypeY(type: string) {\n    this.chart.options.scales.y[0].type = type;\n  }\n\n  // Modifica as configurações dos labels\n  setLabelX(label: string) {\n    this.chart.options.scales.x.title.text = label;\n    this.chart.options.scales.x.title.display = true;\n  }\n\n  // Modifica as configurações dos labels\n  setLabelY(label: string) {\n    this.chart.options.scales.y.title.text = label;\n    this.chart.options.scales.y.title.display = true;\n  }\n\n  // Modifica as configurações dos labels\n  setLabels(labels: any) {\n    this.chart.config.data.labels = labels;\n  }\n\n  updateDataset(dataId:string, color: string, data: any, name: any = undefined) {\n    const datasets = this.chart.config.data.datasets;\n    let label = \"\";\n    if(name) {\n      label = dataId + \" (\" + name + \")\" \n    } else {\n      label = dataId\n    };\n    const id = datasets.findIndex((d: any) => d.backgroundColor == color)\n    if (id >= 0) {\n      datasets[id].data = data;\n    }\n    else {\n      const newData = {\n        label: label,\n        backgroundColor: color,\n        borderColor: color,\n        data: data,\n        fill: false,\n        stack: dataId\n      };\n\n      datasets.push(newData);\n    }\n\n    this.chart.update();\n  }\n\n  removeDataset(dataId:string, color: string) {\n    const datasets = this.chart.config.data.datasets;\n\n    const id = datasets.findIndex((d: any) => d.backgroundColor == color)\n    if (id >= 0) {\n      datasets.splice(id, 1)\n      this.chart.update();\n    }\n  }\n\n  clear() {\n    this.chart.data.labels = [];\n    this.chart.data.datasets = [];\n    this.chart.update();\n  }\n}\n","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\n\nimport { BarChart } from './bar';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.css']\n})\nexport class BarChartComponent implements OnInit {\n\n  // referência para o div do grafico\n  @ViewChild(\"barChart\", { static: true }) private barDiv!: ElementRef;\n\n  @Output() barParamChanged = new EventEmitter<number>();\n\n  private barChart: any;\n\n  private labels: any = {};\n  private rawData: any = {};\n  private nrmData: any = {};\n\n  public ids: any = [];\n\n  constructor(public global: GlobalService, public util: UtilService) {\n    this.ids = this.global.getGlobal('bar_params').value;\n  }\n\n  ngOnInit(): void {\n    this.barChart = new BarChart(this.barDiv.nativeElement);\n  }\n\n  updateData(responseData: any, dataId: string, chartColor: string, lmap: any) {\n    // manages data for each from\n    for(let from of Object.keys(responseData)) {\n      // clear existing element\n      this.deleteData(from, dataId, chartColor);\n      this.rawData[from][dataId][chartColor] = [];\n\n      // adiciona os valores não normalizados\n      for (let i = 0; i < responseData[from].result.length; i++) {\n        const pointId = +responseData[from].result[i].k[0];\n        const pointVl = +responseData[from].result[i].v[0];\n\n        this.rawData[from][dataId][chartColor].push({ x: pointId, y: pointVl });\n      }\n\n      // atualiza os labels baseado no dado novo\n      this.updateLabels(from, lmap);\n\n      // normaliza os dados de dataId\n      this.normalizeData(from);\n\n      // completa os pontos que faltam\n      this.fillMissingPoints(from);\n    }\n  }\n\n  drawChart(from: string, name: any = undefined) {\n    // set x labal\n    if (from.includes('ttls')) {\n      this.barChart.setLabelX('TTLs');\n    }\n    else {\n      this.barChart.setLabelX('TCP Connection Services');\n    }\n\n    // atualiza os labels\n    this.barChart.setLabels(this.labels[from], name);\n\n    // atualiza os dados\n    for (const dataId of Object.keys(this.nrmData[from])) {\n      for (const color of Object.keys(this.nrmData[from][dataId])) {\n        // gets the data\n        const data = this.nrmData[from][dataId];\n        this.barChart.updateDataset(dataId, color, data[color], name);\n      }\n    }\n  }\n\n  deleteData(from: string, dataId: string, color: string) {\n    // new group\n    if (!this.rawData[from]) {\n      this.rawData[from] = {};\n    }\n    // new dataId\n    if (!this.rawData[from][dataId]) {\n      this.rawData[from][dataId] = {};\n    }\n\n    delete this.rawData[from][dataId][color];\n\n    // new group\n    if (!this.nrmData[from]) {\n      this.nrmData[from] = {};\n    }\n    // new dataId\n    if (!this.nrmData[from][dataId]) {\n      this.nrmData[from][dataId] = {};\n    }\n\n    delete this.nrmData[from][dataId][color]\n  }\n\n  clearChart(from: string, dataId: string, color: string, lmap: any) {\n    // removes from chart\n    this.barChart.removeDataset(dataId, color);\n\n    this.deleteData(from, dataId, color);\n\n    // atualiza os labels baseado no dado novo\n    this.updateLabels(from, lmap);\n\n    // normaliza os dados de dataId\n    this.normalizeData(from);\n\n    // completa os pontos que faltam\n    this.fillMissingPoints(from);\n  }\n\n  clearLabel(from: string) {\n    this.labels[from] = [];\n  }\n\n  normalizeData(from: string) {\n    // limpa os dados normalizados\n    this.nrmData[from] = {};\n\n    // repete para cada dataId\n    for (const dataId of Object.keys(this.rawData[from])) {\n      // pega os datasets de dataId\n      const data = this.rawData[from][dataId];\n\n      // calcula a soma dos da categoria\n      let total = 0;\n      for (let cor of Object.keys(data)) {\n        const partial = data[cor].reduce((a: any, b: any) => {\n          return a + b.y;\n        }, 0);\n\n        total += partial;\n      }\n\n      // normaliza os valores\n      const norm: any = {};\n      for (let cor of Object.keys(data)) {\n        norm[cor] = [];\n        for (let pId = 0; pId < data[cor].length; pId++) {\n          const nrmPnt = {x: data[cor][pId].x, y: data[cor][pId].y / total};\n          norm[cor].push( nrmPnt );\n        };\n      }\n\n      // substitui o dado normalizado anterior\n      this.nrmData[from][dataId] = norm;\n    }\n  }\n\n  fillMissingPoints(from: string) {\n    // lista de tipos de elementos\n    const dataIds = Object.keys(this.nrmData[from]);\n    for (let dataId of dataIds) {\n      // lista de cores no elemento\n      const colors = Object.keys(this.nrmData[from][dataId]);\n      for (let color of colors) {\n        // para cada label\n        this.labels[from].forEach((label: number) => {\n          // se não existe valor associado ao label, adiciona zero\n          if (!this.nrmData[from][dataId][color].some((d: any) => d.x === label)) {\n            this.nrmData[from][dataId][color].push({ x: label, y: 0 });\n          }\n        });\n\n        // ordena os pontos\n        this.nrmData[from][dataId][color].sort((a: any, b: any) => a.x - b.x)\n      }\n    }\n  }\n\n  updateLabels(from: string, lmap: any) {\n    // limpa os labels do gráfico\n    this.labels[from] = [];\n\n    // percorre os tipos de elementos\n    for (const dataId of Object.keys(this.rawData[from])) {\n      // percorre os elementos\n      for (const color of Object.keys(this.rawData[from][dataId])) {\n        this.rawData[from][dataId][color].forEach((d: any) => {\n          const x = Object.keys(lmap[from]).length > 0 ? lmap[from][d['x']] : d['x'];\n          if (!this.labels[from].includes(x)) {\n            this.labels[from].push(x);\n          }\n        });\n      }\n    }\n\n    // ordena os labels\n    this.labels[from].sort((a: number, b: number) => a - b);\n  }\n\n  onParamChange(event: any) {\n    const bar_params_value = {\n      key: \"bar_params_value\",\n      value: event.target.value\n    };\n\n    this.global.setGlobal(bar_params_value)\n    this.barParamChanged.emit();\n  }\n}\n","<div class=\"fill\">\n  <canvas class=\"fill\"  style=\"padding-bottom: 10px; border-bottom: 1px solid #eee;\" #barChart></canvas>\n    <select name=\"select\" class=\"param-selector\" (change)=\"this.onParamChange($event)\">\n      <option *ngFor=\"let param of this.ids; let idx = index\" [value]=\"param.id\">{{param.id}}</option>\n    </select>   \n</div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}