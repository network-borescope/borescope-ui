{"version":3,"sources":["./src/app/widgets/functions-chart/functions-chart.component.ts","./src/app/widgets/functions-chart/functions-chart.component.html","./src/app/widgets/line-chart/line-chart.component.ts","./src/app/widgets/line-chart/line-chart.component.html","./src/app/bars/top-bar/top-bar.component.ts","./src/app/bars/top-bar/top-bar.component.html","./src/app/shared/api.models.ts","./src/app/app-init.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/shared/util.service.ts","./src/app/shared/global.service.ts","./src/app/bars/charts-bar/charts-bar.component.ts","./src/app/bars/charts-bar/charts-bar.component.html","./src/app/widgets/filters/filters.component.ts","./src/app/widgets/filters/filters.component.html","./src/app/widgets/alerts/alerts.component.html","./src/app/widgets/alerts/alerts.component.ts","./src/app/widgets/network/network.ts","./src/app/widgets/network/network.component.ts","./src/app/widgets/network/network.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/bars/time-bar/time-bar.component.ts","./src/app/bars/time-bar/time-bar.component.html","./src/app/widgets/functions-chart/functions-chart.ts","./src/app/widgets/map/map.component.ts","./src/app/widgets/map/map.component.html","./src/app/app.module.ts","./src/app/widgets/line-chart/line.ts","./src/app/shared/api.service.ts","./src/app/widgets/scattergl/scattergl.component.ts","./src/app/widgets/scattergl/scattergl.component.html","./src/app/widgets/bar-chart/bar.ts","./src/app/widgets/bar-chart/bar-chart.component.ts","./src/app/widgets/bar-chart/bar-chart.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AAM5C;;;;;;;;;;ICQvC,6EAAmM;IAAtC,oVAAqC;IAC9L,6EAAwB;IAAA,oEAAS;IAAA,4DAAS;IAC1C,6EAA4B;IAAA,8EAAc;IAAA,4DAAS;IACvD,4DAAS;;;;IACT,6EAA+L;IAAtC,oVAAqC;IAC1L,6EAA6B;IAAA,iGAAiC;IAAA,4DAAS;IACvE,6EAAwB;IAAA,uFAAuB;IAAA,4DAAS;IACxD,6EAAoB;IAAA,mFAAmB;IAAA,4DAAS;IACpD,4DAAS;;;;IACT,6EAAoN;IAAtC,oVAAqC;IAC/M,6EAAqC;IAAA,uFAAuB;IAAA,4DAAS;IACrE,6EAAuB;IAAA,6EAAa;IAAA,4DAAS;IACjD,4DAAS;;;;IAEb,0EAAkK;IAC9J,6EAA2I;IAAnC,wUAAkC;IACtI,+EAAiC;IAC7B,6EAAmB;IAAA,mEAAQ;IAAA,4DAAS;IACpC,6EAAmB;IAAA,gGAAqC;IAAA,4DAAS;IACjE,6EAAmB;IAAA,4FAAiC;IAAA,4DAAS;IAC7D,6EAAmB;IAAA,6FAAiC;IAAA,4DAAS;IAC7D,8EAAmB;IAAA,2FAA+B;IAAA,4DAAS;IAC3D,8EAAmB;IAAA,uFAA2B;IAAA,4DAAS;IACvD,8EAAmB;IAAA,uFAA2B;IAAA,4DAAS;IACvD,8EAAmB;IAAA,mFAAuB;IAAA,4DAAS;IACnD,8EAAmB;IAAA,6EAAiB;IAAA,4DAAS;IAC7C,8EAAmB;IAAA,mFAAuB;IAAA,4DAAS;IACnD,8EAAmB;IAAA,kFAAsB;IAAA,4DAAS;IAClD,8EAAmB;IAAA,iFAAqB;IAAA,4DAAS;IACrD,4DAAW;IACX,gFAAuC;IACnC,8EAAmB;IAAA,oEAAQ;IAAA,4DAAS;IACpC,8EAAmB;IAAA,oGAAwC;IAAA,4DAAS;IACpE,8EAAmB;IAAA,gGAAoC;IAAA,4DAAS;IAChE,8EAAmB;IAAA,gGAAoC;IAAA,4DAAS;IAChE,8EAAmB;IAAA,mFAAuB;IAAA,4DAAS;IACnD,8EAAmB;IAAA,+EAAmB;IAAA,4DAAS;IAC/C,8EAAmB;IAAA,+EAAmB;IAAA,4DAAS;IAC/C,8EAAmB;IAAA,6EAAiB;IAAA,4DAAS;IAC7C,8EAAmB;IAAA,6EAAiB;IAAA,4DAAS;IAC7C,8EAAmB;IAAA,6EAAiB;IAAA,4DAAS;IAC7C,8EAAmB;IAAA,4EAAgB;IAAA,4DAAS;IAC5C,8EAAmB;IAAA,2EAAe;IAAA,4DAAS;IAC/C,4DAAW;IACX,gFAA8B;IACzB,8EAAmB;IAAA,oEAAQ;IAAA,4DAAS;IACrC,8EAAmB;IAAA,8EAAkB;IAAA,4DAAS;IAC9C,8EAAmB;IAAA,qGAAyC;IAAA,4DAAS;IACrE,8EAAmB;IAAA,iGAAqC;IAAA,4DAAS;IACjE,8EAAmB;IAAA,iGAAqC;IAAA,4DAAS;IACjE,8EAAmB;IAAA,4EAAgB;IAAA,4DAAS;IAC5C,8EAAmB;IAAA,6FAAiC;IAAA,4DAAS;IAC7D,8EAAmB;IAAA,yFAA6B;IAAA,4DAAS;IACzD,8EAAmB;IAAA,yFAA6B;IAAA,4DAAS;IAC7D,4DAAW;IACX,gFAAgC;IAC5B,8EAAoB;IAAA,oEAAQ;IAAA,4DAAS;IACrC,8EAAoB;IAAA,8EAAkB;IAAA,4DAAS;IAC/C,8EAAoB;IAAA,qGAAyC;IAAA,4DAAS;IACtE,8EAAoB;IAAA,iGAAqC;IAAA,4DAAS;IAClE,8EAAoB;IAAA,iGAAqC;IAAA,4DAAS;IAClE,8EAAoB;IAAA,8EAAkB;IAAA,4DAAS;IAC/C,8EAAoB;IAAA,6FAAiC;IAAA,4DAAS;IAC9D,8EAAoB;IAAA,yFAA6B;IAAA,4DAAS;IAC1D,8EAAoB;IAAA,yFAA6B;IAAA,4DAAS;IAC9D,4DAAW;IACX,gFAA6B;IACzB,8EAAoB;IAAA,oEAAQ;IAAA,4DAAS;IACrC,8EAAoB;IAAA,kFAAsB;IAAA,4DAAS;IACnD,8EAAoB;IAAA,8EAAkB;IAAA,4DAAS;IAC/C,8EAAoB;IAAA,8EAAkB;IAAA,4DAAS;IACnD,4DAAW;IACf,4DAAS;IACb,4DAAM;;;IA3DoG,6GAAuD;;;;IA4DjK,0EAAuS;IACnS,8FAOgD;IAFhD,qXAAsC,0SACA,IAAI,KADJ,8SAEE,KAAK,KAFP;IAGtC,4DAA0B;IAC9B,4DAAM;;;IAVyJ,kJAA4F;IAEvP,0DAAkB;IAAlB,2EAAkB;;;;IAStB,0EAA0I;IACtI,8FAOgD;IAFhD,qXAAsC,0SACA,IAAI,KADJ,8SAEE,KAAK,KAFP;IAGtC,4DAA0B;IAC9B,4DAAM;;;IARF,0DAAkB;IAAlB,2EAAkB;;;;IAStB,0EAAmL;IAC/K,8FAO2D;IAF3D,qXAAsC,8SACI,KAAK,EAAE,IAAI,KADf,kTAEM,KAAK,EAAE,KAAK,KAFlB;IAGtC,4DAA0B;IAC9B,4DAAM;;;IAVoE,kHAA4D;IAElI,0DAAkB;IAAlB,2EAAkB;;;;IAStB,0EAA0G;IACtG,8FAOoE;IAFpE,8XAA+C,8SACL,cAAc,EAAE,IAAI,KADf,kTAEH,cAAc,EAAE,KAAK,KAFlB;IAG/C,4DAA0B;IAC9B,4DAAM;;;IARF,0DAAkB;IAAlB,2EAAkB;;;;IAStB,0EAAqL;IACjL,8FAM+D;IAD/D,sWAA0C,SAAS,EAAE,IAAI,KAAE,kTACf,SAAS,EAAE,KAAK,KADD;IAE3D,4DAA0B;IAC9B,4DAAM;;;IAPF,0DAAkB;IAAlB,2EAAkB;;;;IAQtB,0EAAwG;IACpG,8FAKsC;IAAtC,sXAAqC;IACrC,4DAA0B;IAC9B,4DAAM;;;IANF,0DAAkB;IAAlB,2EAAkB;;;;IAOtB,0EAAqI;IACjI,6EAAkF;IAArC,yUAAoC;IAC7E,sEACiC;IACrC,4DAAS;IACT,6EAAqF;IAAxC,4UAAuC;IAChF,sEACiC;IACrC,4DAAS;IACb,4DAAM;;IANE,0DAAyB;IAAzB,6EAAyB;IAIzB,0DAAyB;IAAzB,6EAAyB;;ADjJlC,MAAM,uBAAuB;IASlC,YAAmB,MAAqB,EAAS,IAAiB;QAA/C,WAAM,GAAN,MAAM,CAAe;QAAS,SAAI,GAAJ,IAAI,CAAa;QALxD,0BAAqB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAChD,0BAAqB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAChD,mBAAc,GAAG,IAAI,0DAAY,EAAO,CAAC;QACzC,qBAAgB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAI7C,qBAAgB,GAAU,EAAE,CAAC;QAGrC,sBAAsB;QACd,kBAAa,GAAQ,EAAE,CAAC;QACzB,sBAAiB,GAAQ,EAAE,CAAC;QAC5B,+BAA0B,GAAQ,EAAE,CAAC;QACpC,sBAAiB,GAAQ;YAC/B,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;SACb;QACO,mBAAc,GAAW,EAAE,CAAC;QACpC,gBAAgB;QACR,eAAU,GAAQ;YACxB,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;YACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;SACtD,CAAC;QACF,0BAA0B;QAClB,eAAU,GAAQ,EAAE,CAAC;QAC7B,aAAa;QACb,8CAA8C;QACvC,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,6BAAwB,GAAQ,EAAE,CAAC;QACnC,mCAA8B,GAAG,SAAS,CAAC;QAClD,0CAA0C;QACnC,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,8BAAyB,GAAQ,EAAE,CAAC;QACpC,kCAA6B,GAAQ,EAAE,CAAC;QACxC,+BAA0B,GAAG,SAAS,CAAC;QAC9C,2FAA2F;QACpF,yBAAoB,GAAQ,EAAE,CAAC;QAC/B,6BAAwB,GAAQ,EAAE,CAAC;QACnC,mCAA8B,GAAG,QAAQ,CAAC;QAC1C,YAAO,GAAG,KAAK,CAAC;QACf,iBAAY,GAAQ,EAAE,CAAC;QACxB,uBAAkB,GAAQ,EAAE,CAAC;IAtCkC,CAAC;IAyCvE,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,+DAAc,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAC1E,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvF,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACnF,CAAC;IAED,wBAAwB,CAAC,IAAS,EAAE,OAAe;QACjD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SACjD;QACD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED,+BAA+B,CAAC,IAAS;QACvC,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACrE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,eAAe,GAAG;YACtB,GAAG,EAAE,iBAAiB;YACtB,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1B,CAAC;QACF,CAAC,aAAa,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QACnF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACvC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAClF,IAAG,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE;YAC5D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;SAC7C;aAAM,IAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE;YACpF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC/C;aAAM,IAAG,IAAI,CAAC,oBAAoB,EAAE,EAAE;YACrC,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,8BAA8B,EAAE,CAAC;YACtC,IAAI,CAAC,sCAAsC,EAAE,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;SACnC;IACH,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,MAAM,eAAe,GAAG;YACtB,GAAG,EAAE,iBAAiB;YACtB,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1B,CAAC;QACF,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACvC,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACtF,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,sCAAsC,EAAE,CAAC;QAC9C,IAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE;YACjE,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;SACnC;IACH,CAAC;IAED,YAAY,CAAC,KAAU,EAAE,KAAc;QACrC,IAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACzC,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3E,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACpC;QAAA,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/C,CAAC;IAED,gBAAgB,CAAC,KAAU,EAAE,IAAY,EAAE,KAAc;QACvD,IAAG,IAAI,IAAI,KAAK,EAAE;YAChB,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC7C;iBAAM;gBACL,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC7D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC9C;SACF;aAAM;YACL,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACjD;iBAAM;gBACL,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAClD;SACF;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAG,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/D,IAAG,IAAI,CAAC,aAAa,EAAE,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,iBAAiB;YAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/H,CAAC;IAED,mBAAmB;QACjB,0DAA0D;QAC1D,IAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvF,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;YACjE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;YACvE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE;gBAC/B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC9D,MAAM,GAAG,GAAG,EAAC,KAAK,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY;4BAC7H,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;4BACtC,SAAS,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,gBAAgB;4BAClJ,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;wBAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC7B;iBACF;aACF;iBAAM;gBACL,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1D,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC9D,MAAM,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;4BACvE,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;4BACtC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;4BAClH,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;wBAC7D,IAAG,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,SAAS;4BAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC7D;iBACF;aACF;YACD,IAAI,CAAC,sCAAsC,EAAE,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC/C;IACH,CAAC;IAED,sBAAsB;QACpB,IAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtD,KAAI,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACjD,IAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE;wBAC/I,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;qBAChC;iBACF;aACF;YACD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAG,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;gBAChC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC/C;YACD,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC7B,IAAI,CAAC,sCAAsC,EAAE,CAAC;SAC/C;IACH,CAAC;IAED,kBAAkB;QAChB,IAAG,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE;YAC5D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;SAC7C;aAAM,IAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;YACpD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC/C;aAAM;YACL,IAAG,IAAI,CAAC,iBAAiB,EAAE,EAAE;gBAC3B,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;aAClH;iBAAO;gBACN,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;aACjH;SACF;IACH,CAAC;IAED,8BAA8B;QAC5B,aAAa;QACb,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,6BAA6B,GAAG,EAAE,CAAC;QACxC,oDAAoD;QACpD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QACjE,IAAI,CAAC,8BAA8B,GAAG,UAAU,CAAC;QACjD,IAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,gBAAgB,EAAE,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC;QAClG,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAC1B,IAAI,GAAG,GAAO,EAAE,CAAC;YACjB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;YACnB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrC;QAAA,CAAC;QACF,IAAI,CAAC,wBAAwB,GAAG;YAC9B,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,QAAQ;YACnB,cAAc,EAAE,KAAK;YACrB,WAAW,EAAE,KAAK;YAClB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,KAAK;SACzB,CAAC;QACF,gDAAgD;QAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QACvE,IAAI,CAAC,0BAA0B,GAAG,SAAS,CAAC;QAC5C,IAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,YAAY,EAAE,GAAG,EAAC,CAAC,CAAC,EAAC,CAAC;QAC1F,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAC1B,IAAI,GAAG,GAAO,EAAE,CAAC;YACjB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;YACnB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACjC;QAAA,CAAC;QACF,IAAI,CAAC,oBAAoB,GAAG;YAC1B,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,QAAQ;YACnB,cAAc,EAAE,KAAK;YACrB,WAAW,EAAE,KAAK;YAClB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,KAAK;SACzB,CAAC;IACJ,CAAC;IAED,sCAAsC;QACpC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,wBAAwB,GAAI,EAAE,CAAC;QACpC,IAAI,CAAC,8BAA8B,GAAG,QAAQ,CAAC;QAC/C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,KAAK,GAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;YAC1G,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YACzE,IAAI,GAAG,GAAO,EAAE,CAAC;YACjB,GAAG,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;YACvB,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,wBAAwB,GAAG;YAC9B,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,MAAM;YACf,SAAS,EAAE,YAAY;YACvB,cAAc,EAAE,IAAI;YACpB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,KAAK;SACzB,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;IAC7D,CAAC;IAED,oBAAoB;QAClB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC;IAC1E,CAAC;IAED,aAAa;QACX,MAAM,QAAQ,GAAI,QAAQ,CAAC,cAAc,CAAC,sCAAsC,CAAsB,CAAC,KAAK,CAAC;QAC7G,OAAO,QAAQ,IAAI,SAAS,CAAC;IAC/B,CAAC;IAED,iBAAiB;QACf,MAAM,QAAQ,GAAI,QAAQ,CAAC,cAAc,CAAC,sCAAsC,CAAsB,CAAC,KAAK,CAAC;QAC7G,OAAO,QAAQ,IAAI,aAAa,CAAC;IACnC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,0BAA0B,GAAG,EAAE,CAAC;QACrC,8BAA8B;QAC9B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,iBAAiB,GAAG;YACvB,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;SACb;QACD,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAED;;KAEC;IACD,gBAAgB,CAAC,KAAc,EAAE,KAAa;QAC5C,IAAI,KAAK,EAAE;YACT,IAAG,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClE;aACI;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAE,CAAC;SACxE;IACH,CAAC;IAED,kBAAkB;QAChB,IAAG,IAAI,CAAC,oBAAoB,EAAE,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAAE,OAAO,IAAI,CAAC;QAC/F,IAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE;YAC/B,MAAM,QAAQ,GAAI,QAAQ,CAAC,cAAc,CAAC,sCAAsC,CAAsB,CAAC,KAAK,CAAC;YAC7G,IAAG,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS;gBAAE,OAAO,IAAI,CAAC;;gBACzD,OAAO,KAAK,CAAC;SACnB;;YAAM,OAAO,KAAK,CAAC;IACtB,CAAC;IAED,wBAAwB;QACtB,IAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE;YAC/B,MAAM,QAAQ,GAAI,QAAQ,CAAC,cAAc,CAAC,sCAAsC,CAAsB,CAAC,KAAK,CAAC;YAC/G,IAAG,QAAQ,IAAI,KAAK;gBAAE,OAAO,IAAI,CAAC;;gBAC7B,OAAO,KAAK,CAAC;SACjB;;YAAM,OAAO,IAAI,CAAC;IACrB,CAAC;;8FAtWU,uBAAuB;uGAAvB,uBAAuB;;;;;;QCbpC,sEAAK;QACD,yEAAkC;QAC9B,0EAAqG;QACzG,4DAAM;QACN,yEAAkI;QAC9H,yEAA0B;QACtB,4EAAgH;QAAnE,uJAAU,yBAA0B,IAAC;QAC9E,4EAA6B;QAAA,8DAAG;QAAA,4DAAS;QACzC,4EAAoB;QAAA,+DAAG;QAAA,4DAAS;QAChC,6EAAqB;QAAA,gEAAI;QAAA,4DAAS;QAClC,6EAA2B;QAAA,uEAAW;QAAA,4DAAS;QACnD,4DAAS;QACb,4DAAM;QACN,2EAA2F;QACvF,4HAGS;QACT,4HAIS;QACT,4HAGS;QACb,4DAAM;QACN,uHA2DM;QACN,sHAUM;QACN,sHAUM;QACN,sHAUM;QACN,sHAUM;QACN,sHASM;QACN,sHAQM;QACN,sHASM;QACV,4DAAM;QACV,4DAAM;;QArJ2B,2DAAiE;QAAjE,oHAAiE;QAC7E,0DAAiC;QAAjC,4FAAiC;QAIjC,0DAA+D;QAA/D,yHAA+D;QAK/D,0DAA+D;QAA/D,wHAA+D;QAKtE,0DAAyD;QAAzD,mHAAyD;QA4DzD,0DAAuJ;QAAvJ,0MAAuJ;QAWvJ,0DAAuF;QAAvF,8IAAuF;QAWvF,0DAAkE;QAAlE,4HAAkE;QAWlE,0DAAuD;QAAvD,iHAAuD;QAWvD,0DAAkI;QAAlI,sLAAkI;QAUlI,0DAAqD;QAArD,+GAAqD;QASrD,0DAAoG;QAApG,4JAAoG;;;;;;;;;;;;;;ACvJlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AAI5D;;;;;;;;ICG7B,6EAA2E;IAAA,uDAAiB;IAAA,4DAAS;;;IAA7C,8EAAkB;IAAC,0DAAiB;IAAjB,iFAAiB;;;;IAFhG,yEAA2F;IACzF,4EAAmF;IAAtC,wUAAqC;IAChF,0HAAqG;IACvG,4DAAS;IACT,4EAAmF;IAAtC,wUAAqC;IAChF,4EAAiC;IAAA,kEAAO;IAAA,4DAAS;IACjD,4EAAoB;IAAA,8DAAG;IAAA,4DAAS;IAChC,4EAAoB;IAAA,8DAAG;IAAA,4DAAS;IAClC,4DAAS;IACX,4DAAM;;;IAPwB,0DAAa;IAAb,+EAAa;;;;IAQ3C,yEAA0F;IACxF,4EAAmF;IAAtC,yUAAqC;IAChF,6EAAgC;IAAA,qEAAU;IAAA,4DAAS;IACnD,6EAAwB;IAAA,sEAAW;IAAA,4DAAS;IAC5C,6EAAuB;IAAA,iEAAM;IAAA,4DAAS;IACtC,6EAAwB;IAAA,kEAAO;IAAA,4DAAS;IAMxC,8EAAoB;IAAA,+DAAG;IAAA,4DAAS;IAChC,8EAAwB;IAAA,uEAAW;IAAA,4DAAS;IAC5C,8EAAwB;IAAA,mEAAO;IAAA,4DAAS;IAC1C,4DAAS;IACX,4DAAM;;ADpBD,MAAM,kBAAkB;IAiC7B,YAAmB,MAAqB,EAAS,IAAiB;QAA/C,WAAM,GAAN,MAAM,CAAe;QAAS,SAAI,GAAJ,IAAI,CAAa;QA5BxD,qBAAgB,GAAG,IAAI,0DAAY,EAAU,CAAC;QAC9C,qBAAgB,GAAG,IAAI,0DAAY,EAAU,CAAC;QAIhD,WAAM,GAAQ,EAAE,CAAC;QAClB,YAAO,GAAQ,EAAE,CAAC;QACjB,YAAO,GAAQ,EAAE,CAAC;QAElB,UAAK,GAAQ,EAAE,CAAC;QAEhB,OAAE,GAAW,CAAC,CAAC;QACf,OAAE,GAAU,CAAC,CAAC;QAEf,QAAG,GAAQ,EAAE,CAAC;QACb,gBAAW,GAAG;YACpB,MAAM,EAAE,YAAY;YACpB,OAAO,EAAE,aAAa;YACtB,MAAM,EAAE,QAAQ;YAChB,OAAO,EAAE,SAAS;YAClB,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,UAAU;YACpB,GAAG,EAAE,KAAK;YACV,OAAO,EAAE,aAAa;YACtB,OAAO,EAAE,SAAS;SACnB,CAAC;QAGA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;IACxD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,+CAAS,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IAC7D,CAAC;IAED,UAAU,CAAC,YAAiB,EAAE,MAAW,EAAE,UAAe;QACxD,6BAA6B;QAC7B,KAAK,IAAI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YAC7C,yBAAyB;YACzB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;YAC7C,oCAAoC;YACpC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;YAC/C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;YAE/C,uCAAuC;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC5D,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;oBACrB,cAAc;oBACd,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvD,uBAAuB;oBACvB,MAAM,iBAAiB,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/D,gBAAgB;oBAChB,MAAM,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3D,gBAAgB;oBAChB,MAAM,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3D,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,iBAAiB,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,aAAa,EAAC,CAAC,CAAC;iBAClJ;qBAAM;oBACL,cAAc;oBACd,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvD,YAAY;oBACZ,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,UAAU,EAAC,CAAC,CAAC;iBACzG;aACF;YACD,4BAA4B;YAC5B,IAAG,IAAI,CAAC,QAAQ,EAAE,EAAE;gBAClB,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9D;iBAAM;gBACL,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClE,qBAAqB;gBACrB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aAE5B;YACD,0CAA0C;YAC1C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAC3B,+BAA+B;YAC/B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,SAAS,CAAC,IAAY,EAAE,aAAqB,EAAE,OAAY,SAAS;QAClE,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnB,4CAA4C;YAC5C,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gBACxB,eAAe;gBACf,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;aAC9C;iBACI;gBACH,eAAe;gBACf,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,SAAS,GAAG,GAAG,CAAC,CAAC;aAC7F;SACF;aAAM;YACL,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC;YAChF,YAAY;YACZ,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;SAC3D;QACD,qBAAqB;QACrB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QAClD,uBAAuB;QACvB,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;YACpD,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;gBAC3D,gBAAgB;gBAChB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;gBACxC,MAAM,SAAS,GAAG,EAAE,CAAC;gBACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,IAAG,IAAI,CAAC,QAAQ,EAAE,EAAE;wBAClB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;qBAClD;yBAAM;wBACL,IAAG,aAAa,IAAI,SAAS,EAAE;4BAC7B,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;yBAClD;6BAAM,IAAG,aAAa,IAAI,KAAK,EAAE;4BAChC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;yBAClD;6BAAM;4BACL,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC;yBAClD;qBACF;iBAEF;gBACD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;aAC9D;SACF;IACH,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,MAAc,EAAE,KAAa;QACpD,YAAY;QACZ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SACzB;QACD,aAAa;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;QACzC,YAAY;QACZ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SACzB;QACD,aAAa;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,MAAc,EAAE,KAAa;QACpD,qBAAqB;QACrB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAE5C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAErC,0CAA0C;QAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAExB,+BAA+B;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;QAEb,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAChD,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;YAC1B,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACvD,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;gBACxB,8BAA8B;gBAC9B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9E,2BAA2B;gBAC3B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;aACzB;SACF;QAED,0BAA0B;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1D,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,iBAAiB;QACjB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEhC,8BAA8B;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QACxB,IAAG,IAAI,CAAC,QAAQ,EAAE,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACzC;aAAM;YACL,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;gBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzC,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;oBACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;oBACvC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;wBACzD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG;4BACpD,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG;4BACpD,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC;qBACjG;oBAAA,CAAC;iBACH;aACF;SACF;IACH,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,eAAe;QACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAEvB,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;QAErB,MAAM,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;QAE7B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEhC,KAAK,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACpC,KAAK,IAAI,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;gBAChD,mBAAmB;gBACnB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;gBAE9D,gDAAgD;gBAChD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,EAAE;oBAChC,SAAS;iBACV;gBAED,gDAAgD;gBAChD,IAAI,OAAO,KAAK,CAAC,EAAE;oBACjB,SAAS;iBACV;gBAED,2BAA2B;gBAC3B,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;gBAExC,eAAe;gBACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAEvB,IAAI,OAAO,GAAG,IAAI,CAAC;gBACnB,OAAO,OAAO,IAAI,IAAI,EAAE;oBACtB,IAAI,KAAK,GAAG,EAAE,CAAC;oBACf,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;oBACpC,IAAI,QAAQ,GAAG,IAAI,EAAE,EAAE,SAAS;wBAC9B,YAAY;wBACZ,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;qBACjK;yBAAM,IAAI,QAAQ,GAAG,KAAK,EAAE,EAAE,QAAQ;wBACrC,YAAY;wBACZ,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;qBACjK;yBAAM,IAAI,QAAQ,GAAG,OAAO,EAAE,EAAE,UAAU;wBACzC,YAAY;wBACZ,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;qBACjK;yBAAM;wBACL,YAAY;wBACZ,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;qBAClJ;oBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC9B,OAAO,IAAI,MAAM;iBAClB;aACF;SACF;IACH,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,MAAM,iBAAiB,GAAG;YACxB,GAAG,EAAE,mBAAmB;YACxB,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1B,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,MAAM,0BAA0B,GAAG;YACjC,GAAG,EAAE,4BAA4B;YACjC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1B,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;QAClD,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC;IAClE,CAAC;;oFApSU,kBAAkB;kGAAlB,kBAAkB;;;;;;QCV/B,yEAAkB;QAChB,0EAGoB;QACpB,+GASM;QACN,+GAeM;QACR,4DAAM;;QA7BJ,0DAAuE;QAAvE,wHAAuE;QAGjE,0DAAsB;QAAtB,iFAAsB;QAUtB,0DAAqB;QAArB,gFAAqB;;;;;;;;;;;;;;;;;;;;ACPtB,MAAM,eAAe;IAE1B,YAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE7C,QAAQ,KAAU,CAAC;;8EAJR,eAAe;+FAAf,eAAe;QCR5B,yEAAsB;QAEpB,yEAAiB;QAEf,kEAAwB;QAExB,yEAA4B;QAC1B,wEAA0B;QAAA,4EAAiB;QAAA,4DAAK;QAChD,oEAAsD;QACtD,oEAAoD;QACtD,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;ACZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;GAEG;AACK,MAAM,aAAa;IAKzB;QACE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;IACrB,CAAC;CACF;AAED;;GAEG;AACI,MAAM,aAAa;IAOxB,YAAY,IAAY;QACtB,IAAI,QAAQ,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,GAAG,MAAM;IACpB,CAAC;CACF;AAED;;GAEG;AACI,MAAM,YAAY;IAQvB;QACE,IAAI,QAAQ,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,iBAAiB,EAAE,CAAC,iBAAiB,EAAE,CAAC,kBAAkB,EAAE,CAAC,kBAAkB,CAAC,CAAC;QAC3H,IAAI,IAAI,GAAG,CAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACxD,IAAI,MAAM,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,CAAC,GAAE,IAAI,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;IACxB,CAAC;CACF;AAED;;GAEG;AACI,MAAM,aAAa;IAOxB;QACE,IAAI,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,GAAE,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;IAC3B,CAAC;CACF;AAED;;GAEG;AACI,MAAM,iBAAiB;IAO5B,mGAAmG;IAEnG,uHAAuH;IAEvH;QACE,IAAI,CAAC,MAAM,CAAC,GAAG,aAAa,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,GAAE,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACrB,CAAC;CACF;AAED;;GAEG;AACK,MAAM,gBAAgB;IAU5B;QACE,IAAI,CAAC,MAAM,CAAC,GAAG,cAAc,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;IACxB,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtH0D;;;;;AAEpD,MAAM,cAAc;IAEzB,YAAmB,MAAqB,EAAS,GAAe,EAAS,KAAkB;QAAxE,WAAM,GAAN,MAAM,CAAe;QAAS,QAAG,GAAH,GAAG,CAAY;QAAS,UAAK,GAAL,KAAK,CAAa;IAAI,CAAC;IAE1F,UAAU;;YACd,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAEzB,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAEzB,MAAM,UAAU,GAAI,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAExB,MAAM,IAAI,GAAG;gBACX,GAAG,EAAE,aAAa;gBAClB,KAAK,EAAE;oBACL,MAAM,EAAE,WAAW,CAAC,MAAM;oBAC1B,MAAM,EAAE,WAAW,CAAC,MAAM;oBAC1B,KAAK,EAAG,UAAU,CAAC,MAAM;iBAC1B;aACF;YAED,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;KAAA;IAEK,cAAc;;YAClB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpB,IAAI,WAAW,GAAG;gBAChB,GAAG,EAAE,aAAa;gBAClB,KAAK,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAEnC,IAAI,SAAS,GAAG;gBACd,GAAG,EAAE,WAAW;gBAChB,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aAC5B,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAEjC,IAAI,SAAS,GAAG;gBACd,GAAG,EAAE,WAAW;gBAChB,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aAC5B,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAGjC,IAAI,MAAM,GAAG;gBACX,GAAG,EAAE,QAAQ;gBACb,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aAC5B,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAE9B,IAAI,MAAM,GAAG;gBACX,GAAG,EAAE,QAAQ;gBACb,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aAC5B,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC;KAAA;IAEK,aAAa;;YACjB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpB,MAAM,IAAI,GAAG;gBACX,GAAG,EAAE,YAAY;gBACjB,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE;aACxB;YAED,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;KAAA;IAEK,OAAO;;YACX,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YAErC,MAAM,QAAQ,GAAG;gBACf,GAAG,EAAE,UAAU;gBACf,KAAK,EAAE,IAAI;aACZ,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC;KAAA;IAEK,SAAS;;YACb,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;YAC1C,wEAAW,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YACrC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC1B,CAAC;KAAA;IAED,WAAW;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAE1D,MAAM,IAAI,GAAG;YACX,GAAG,EAAE,eAAe;YACpB,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW;SAClC,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,aAAa;QACX,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAE1D,MAAM,IAAI,GAAG;YACX,GAAG,EAAE,YAAY;YACjB,KAAK,EAAE;gBACL,MAAM,EAAE,EAAE;gBACV,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ;aACpC;SACF,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAGD,IAAI;QACF,OAAO,IAAI,OAAO,CAAO,CAAO,OAAO,EAAE,EAAE,CAAC;YAC1C,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,wEAAW,CAAC;YAExB,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YACxB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YAC5B,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;YAC3B,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YAErB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC;YAEzD,OAAO,EAAE,CAAC;QACZ,CAAC,EAAC,CAAC;IACL,CAAC;;4EAlIU,cAAc;iGAAd,cAAc,WAAd,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBpB,MAAM,aAAa;IA0BxB,YAAmB,MAAqB,EAAS,GAAe,EAAS,IAAiB,EAAU,OAA0B;QAA3G,WAAM,GAAN,MAAM,CAAe;QAAS,QAAG,GAAH,GAAG,CAAY;QAAS,SAAI,GAAJ,IAAI,CAAa;QAAU,YAAO,GAAP,OAAO,CAAmB;QAPvH,SAAI,GAAW,MAAM,CAAC;QACtB,WAAM,GAAW,MAAM,CAAC;QACxB,OAAE,GAAW,MAAM,CAAC;QACpB,OAAE,GAAW,MAAM,CAAC;QACnB,yBAAoB,GAAQ,SAAS,CAAC;QACtC,mBAAc,GAAQ,EAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;QAGxE,IAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC,GAAS,EAAE,CAAC;YAClD,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC/B,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC9B,CAAC,GAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IAChB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,QAAQ;QACN,MAAM,0BAA0B,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC;QACvF,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAC1E,IAAG,oBAAoB,IAAI,QAAQ,EAAE;YACnC,0BAA0B,CAAC,KAAK,GAAG,QAAQ,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,0BAA0B,CAAC;SAClD;IACH,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,aAAa,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;SAC1C;IACH,CAAC;IAED;;OAEG;IACH,UAAU;QACR,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,+BAA+B;QAC/B,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAEtC,4BAA4B;QAC5B,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAE/C,cAAc;QACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,iBAAiB;QACjB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACrE,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACrE,YAAY;QACZ,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACzI,YAAY;QACZ,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC3I,CAAC;IAAA,CAAC;IAEF;;OAEG;IACH,eAAe;QACb,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAC1E,IAAG,oBAAoB,KAAK,QAAQ,EAAE;YACpC,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YAC/D,KAAK,MAAM,KAAK,IAAI,WAAW,EAAE;gBAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC7B;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YAC7D,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;gBAC9B,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC5B;YAED,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC;YACtE,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;gBAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBACjE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACjE;SACF;aAAM;YACL,4BAA4B;YAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YAEtC,iCAAiC;YACjC,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;gBAC7D,wBAAwB;gBACxB,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;oBACpE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;iBACpB;aACF;YACD,4BAA4B;YAC5B,WAAW;YACX,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;YACvC,cAAc;YACd,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;gBACtD,IAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;iBAC7E;aACF;YACD,eAAe;YACf,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClD,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aACvH;SACF;QAGD,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC;IACtC,CAAC;IAED;;OAEG;IACG,iBAAiB;;YACrB,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC;YAEtD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAE9C,IAAI,WAAW,GAAG;gBAChB,GAAG,EAAE,aAAa;gBAClB,KAAK,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAEnC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC;QACxD,CAAC;KAAA;IAEK,cAAc;;YAClB,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC;YACtD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YAEpC,MAAM,QAAQ,GAAG;gBACf,GAAG,EAAE,UAAU;gBACf,KAAK,EAAE,GAAG;aACX,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAEhC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC;QAC1D,CAAC;KAAA;IAGC;;OAEG;IACH,WAAW,CAAC,OAAe;QACzB,IAAI,OAAO,IAAI,IAAI,CAAC,MAAM,EAAE;YAC1B,OAAO,GAAG,CAAC;SACZ;QACD,IAAI,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE;YACxB,OAAO,GAAG,CAAC;SACZ;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,OAAe;QAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACpD,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,eAAe,CAAC,QAAgB;QAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACpD,OAAO,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED;;OAEG;IACH,uBAAuB,CAAC,MAAc,EAAE,UAAkB,EAAE,UAAe,SAAS;QAClF,oBAAoB;QACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;QAEhE,qBAAqB;QACrB,MAAM,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAO,EAAE,EAAE;YAC9C,OAAO,EAAE,CAAC,MAAM,KAAK,MAAM,IAAI,EAAE,CAAC,UAAU,KAAK,UAAU;QAC7D,CAAC,CAAC,CAAC;QAEH,mBAAmB;QACnB,IAAI,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SAC9B;QAED,2BAA2B;QAC3B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC;QAErD,oBAAoB;QACpB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,4BAA4B,CAAC,MAAc,EAAE,UAAkB,EAAE,UAAe,SAAS;QACvF,gDAAgD;QAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;QAEhE,qBAAqB;QACrB,MAAM,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAO,EAAE,EAAE;YAC9C,OAAO,EAAE,CAAC,MAAM,KAAK,MAAM,IAAI,EAAE,CAAC,UAAU,KAAK,UAAU;QAC7D,CAAC,CAAC,CAAC;QAEH,mBAAmB;QACnB,IAAI,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SAC9B;QAED,oBAAoB;QACpB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,WAAW;QACT,qBAAqB;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,wCAAwC;QACxC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAEtC,iDAAiD;QACjD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,KAAU;QACtB,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;QAClC,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAE/B,6CAA6C;QAC7C,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAE7C,4BAA4B;QAC5B,IAAI,CAAC,uBAAuB,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,KAAU;QACtB,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;QAElC,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC/D,KAAK,MAAM,KAAK,IAAI,WAAW,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;SACnD;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAEvD,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;YAC9B,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;SAC5E;QAED,0BAA0B;QAC1B,IAAI,CAAC,4BAA4B,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,KAAU;QACtB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACtB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC3C,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAC1E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,iCAAiC;QACjC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACjD,IAAG,oBAAoB,IAAI,QAAQ,EAAE;YACnC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SACjD;QACD,4BAA4B;QAC5B,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACH,eAAe,CAAC,KAAU;QACxB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;QACtB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC3C,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAE1E,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;QACvF,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;QACjF,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;QAEpF,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAEvD,IAAG,oBAAoB,KAAK,QAAQ,EAAE;YACpC,KAAK,MAAM,KAAK,IAAI,WAAW,EAAE;gBAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;aACjD;YAED,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;gBAC9B,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;aAC1E;SACF;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;YAChD,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;SACzC;QAED,0BAA0B;QAC1B,IAAI,CAAC,4BAA4B,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACH,gBAAgB,CAAC,UAAe;QAC9B,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAEvC,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAC1E,IAAG,oBAAoB,IAAI,QAAQ,EAAE;YACnC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;aAC5F;SACF;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;SAC5E;QACD,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5E,4BAA4B;QAC5B,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IAClG,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QAC9B,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAE1E,IAAG,oBAAoB,IAAI,QAAQ,EAAE;YACnC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;YACtF,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;SAC1B;aAAM;YACL,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YAC/D,KAAK,MAAM,KAAK,IAAI,WAAW,EAAE;gBAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;aACvF;YAED,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YAC7D,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YAEvD,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;gBAC9B,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;aAChH;SACF;QAED,0BAA0B;QAC1B,IAAI,CAAC,4BAA4B,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;IAC3F,CAAC;IAED;;OAEG;IACH,oBAAoB;QAClB,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAC1E,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;QAC9D,IAAG,oBAAoB,IAAI,QAAQ,EAAE;YACnC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC1B,KAAK,IAAI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;gBAC3D,IAAG,OAAO,IAAI,KAAK;oBAAE,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;qBACxD;oBACH,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACvD,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACxC,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC1C,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;qBAChD;iBACF;aACF;SACF;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;SAC1D;IACH,CAAC;IAAA,CAAC;IAEF;;OAEG;IACF,qBAAqB;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC;QAC/D,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC;QAChF,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAE1E,IAAG,oBAAoB,IAAI,QAAQ,EAAE;YACnC,KAAK,IAAI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE;gBAC5D,IAAG,OAAO,IAAI,KAAK,EAAE;oBACnB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;iBAC1C;qBAAM;oBACL,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACvD,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACxC,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC1C,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;qBAChE;iBACF;aACF;SACF;IACH,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,QAAQ,CAAC,cAAc,CAAC,yBAAyB,CAAsB,CAAC,KAAK,GAAG,KAAK,CAAC;QACtF,QAAQ,CAAC,cAAc,CAAC,sCAAsC,CAAsB,CAAC,KAAK,GAAG,KAAK;QACnG,MAAM,eAAe,GAAG;YACtB,GAAG,EAAE,iBAAiB;YACtB,KAAK,EAAE,KAAK;SACb,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACvC,MAAM,eAAe,GAAG;YACtB,GAAG,EAAE,iBAAiB;YACtB,KAAK,EAAE,KAAK;SACb,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,CAAC;QAC3C,IAAI,CAAC,IAAI,CAAC,sCAAsC,EAAE,CAAC;QACnD,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IACD;;OAEG;IACG,kBAAkB,CAAC,KAAa;;YACpC,iBAAiB;YACjB,IAAI,KAAK,KAAK,CAAC,EAAE;gBACf,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBAEpD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAC3C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAE5B,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAC3C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7B;YAED,0CAA0C;YAC1C,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;YACjC,8BAA8B;YAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;KAAA;IAED;;OAEG;IACH,OAAO,CAAC,SAAiB,KAAK;QAC5B,MAAM,KAAK,GAAG,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC3D,MAAM,KAAK,GAAG,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC;QAE3D,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAErB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtB,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,qBAAqB,CAAC,EAAU;QAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAE3C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QAElC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,IAAI,EAAE,IAAI,CAAC,EAAE;YACX,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SACf;aAAM,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;YACnB,CAAC,GAAG,CAAE,CAAC,GAAG,KAAK,CAAC;SACjB;aAAM,IAAI,EAAE,IAAI,CAAC,EAAE;YAClB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SACd;aAAM,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;YACnB,CAAC,GAAG,CAAE,CAAC,GAAG,IAAI,CAAC;SAChB;aAAM,IAAI,EAAE,IAAI,CAAC,EAAE;YAClB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SACf;aAAM,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;YACnB,CAAC,GAAG,CAAE,CAAC,GAAG,KAAK,CAAC;SACjB;aACI,IAAI,EAAE,IAAI,CAAC,EAAE;YAChB,CAAC,KAAK,CAAC,CAAC;YACR,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC1B,CAAC,KAAK,CAAC,CAAC;YACR,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;YAClB,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;YAClB,IAAI,EAAE,IAAI,EAAE;gBAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,CAAC,GAAG,CAAC,CAAC;SACP;aACI,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;YACjB,CAAC,KAAK,CAAC,CAAC;YACR,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAC1B,CAAC,KAAK,CAAC,CAAC;YACR,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;YAClB,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;YAClB,IAAI,EAAE,IAAI,EAAE;gBAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,CAAC,GAAG,CAAC,CAAC;SACP;aACI,IAAI,EAAE,IAAI,CAAC,EAAE;YAChB,CAAC,GAAG,CAAC,CAAC;SACP;QAED,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAE1C,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;QAC7B,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;QAE7B,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC;QAC/D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAEtD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED;;OAEG;IACG,aAAa;;YACjB,IAAI,CAAC,GAAG,CAAC,yBAAyB,EAAE,CAAC;YAErC,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE;gBAC1B,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;gBACxC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAC1D,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;aACrB;QACH,CAAC;KAAA;IAEK,cAAc,CAAC,MAAc,EAAE,UAAkB,EAAE,OAAY,SAAS,EAAE,OAAY,SAAS;;YACnG,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YAElD,IAAI,MAAM,GAAG,SAAS,CAAC;YACvB,IAAI,MAAM,KAAK,QAAQ,EAAE;gBACvB,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;aACpC;YACD,IAAI,MAAM,KAAK,QAAQ,EAAE;gBACvB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACnC;YAED,MAAM,IAAI,GAAQ,EAAE,CAAC;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YAC7D,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;YAC1E,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;YACtE,IAAI,IAAI,CAAC;YACT,IAAI,IAAI,CAAC;YACT,IAAI,KAAK,CAAC;YACV,IAAI,GAAG,CAAC;YACR,IAAG,oBAAoB,IAAI,OAAO,EAAE;gBAClC,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;oBAC9B,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,oBAAoB,CAAC,CAAC;oBAC1F,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;oBACrB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;iBAClD;gBACD,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;aACzD;iBAAM;gBACL,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;gBAC1B,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,oBAAoB,EAAE,IAAI,CAAC,CAAC;gBACxG,KAAK,GAAG,oBAAoB,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;gBACrB,IAAI,GAAG,EAAC,QAAQ,EAAE,EAAE,EAAC,CAAC;aACvB;YACD,IAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;gBACjC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC1D,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;aACvC;QACH,CAAC;KAAA;IAEK,eAAe,CAAC,MAAc,EAAE,UAAkB,EAAE,OAAY,SAAS,EAAE,OAAY,SAAS,EAAE,OAAY,SAAS;;YAC3H,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YAElD,IAAI,MAAM,GAAG,SAAS,CAAC;YACvB,IAAI,MAAM,KAAK,QAAQ,EAAE;gBACvB,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;aACpC;YACD,IAAI,MAAM,KAAK,QAAQ,EAAE;gBACvB,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACnC;YAED,MAAM,IAAI,GAAQ,EAAE,CAAC;YACrB,IAAI,GAAG,CAAC;YACR,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YAC/D,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC;YAChF,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;YAC1E,IAAI,KAAK,CAAC;YACV,IAAG,oBAAoB,IAAI,OAAO,EAAE;gBAClC,KAAK,MAAM,KAAK,IAAI,WAAW,EAAE;oBAC/B,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,oBAAoB,CAAC,CAAC;oBAC3F,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;iBACtB;gBACD,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC;aAC1D;iBAAM;gBACL,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,oBAAoB,CAAC,CAAC;gBACnG,KAAK,GAAG,QAAQ;gBAChB,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;aACtB;YAED,IAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;gBACjC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC/C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;aACjD;QACH,CAAC;KAAA;IAEK,gBAAgB;;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACjD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAEjD,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC;YAChF,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;YACtE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;YACvE,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YAE/D,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;YAC1D,IAAG,QAAQ,IAAI,SAAS,EAAE;gBACxB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBAChG,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;gBAEpC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa,IAAI,EAAE,EAAE,QAAQ,CAAC,CAAC;aAC5E;iBAAM;gBACL,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;gBACjE,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBAC1F,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;gBAEpC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa,IAAI,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;aACtF;QACH,CAAC;KAAA;IAED,sCAAsC;IAChC,oBAAoB;;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACjD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACjD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YACrE,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YAC/D,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,EAAE,aAAa,EAAG,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YACpF,IAAI,IAAI,CAAC;YACT,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACpF,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;YACtD,MAAM,YAAY,GAAO,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;KAAA;IAED,wDAAwD;IAClD,2BAA2B,CAAC,KAAU;;YAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACjD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACjD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YACrE,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YAC/D,MAAM,YAAY,GAAO,EAAE,CAAC;YAC5B,IAAG,aAAa,KAAK,YAAY,EAAE;gBACjC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,aAAa,EAAG,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;oBAC3F,IAAI,IAAI,CAAC;oBACT,IAAI,EAAE,CAAC;oBACP,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;oBAC5F,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;oBACtD,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBAC5C;aACF;iBAAM;gBACL,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,IAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;wBAC5B,MAAM,aAAa,GAAI,QAAQ,CAAC,cAAc,CAAC,yDAAyD,CAAsB,CAAC,KAAK,CAAC;wBACrI,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;wBAC1F,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;wBACpC,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC5C;yBAAM;wBACL,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;wBAC9F,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;wBACpC,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,WAAW,CAAC,CAAC,CAAC;qBAC5C;iBACF;aACF;YACD,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;KAAA;IAED,iEAAiE;IAC3D,2BAA2B,CAAC,KAAU;;YAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACnD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACnD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YAErE,MAAM,YAAY,GAAO,EAAE,CAAC;YAC5B,KAAI,IAAI,CAAC,GAAI,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBAC1B,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBAClC,IAAI,IAAI,CAAC;gBACT,IAAI,GAAG,CAAC;gBACR,IAAG,aAAa,KAAK,YAAY,EAAE;oBACjC,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,EAAG,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;oBAChF,IAAG,GAAG,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,EAAE;wBAC3B,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC;qBAC3C;yBAAM,IAAG,GAAG,IAAI,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,EAAE;wBACnC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC;qBACtC;yBAAM,IAAG,GAAG,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,EAAE;wBACnC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;qBAClC;yBAAM;wBACL,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;qBAC7B;oBACD,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;oBACtD,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBAC5C;qBACI;oBACH,IAAI,aAAa,CAAC;oBAClB,IAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;wBAC5B,aAAa,GAAI,QAAQ,CAAC,cAAc,CAAC,yDAAyD,CAAsB,CAAC,KAAK,CAAC;wBAC/H,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;wBAC/E,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM;qBAC9B;yBAAM;wBACL,aAAa,GAAG,EAAE,CAAC;wBACnB,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,cAAc,CAAC;wBAC9F,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM;qBAC9B;oBACD,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;oBAChE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,WAAW,CAAC,CAAC,CAAC;iBAC5C;aACF;YACD,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,YAAY,CAAC,CAAC;YACxD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;KAAA;IAED,SAAS,CAAC,IAAS,EAAE,IAAY,EAAE,cAAsB,CAAC;QACxD,MAAM,aAAa,GAAU,EAAE,CAAC;QAChC,IAAG,IAAI,IAAI,WAAW,EAAE;YACtB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,aAAa,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;aACnD;SACF;aAAM;YACL,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;gBACvC,YAAY;gBACZ,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChI,IAAG,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC5B,aAAa,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;iBAC/C;aACF;SACF;QACD,MAAM,SAAS,GAAG,CAAC,aAAa,CAAC,CAAC;QAClC,OAAO,SAAS,CAAC;IACnB,CAAC;IAEK,eAAe,CAAC,KAAU;;YAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC;YAChC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YAC1B,MAAM,SAAS,GAAG,EAAE,CAAC;YACrB,MAAM,SAAS,GAAG,EAAE,CAAC;YACrB,MAAM,aAAa,GAAG,CAAC,OAAO,EAAC,OAAO,EAAE,OAAO,CAAC;YAChD,oCAAoC;YACpC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACjD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACjD,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YAC/D,IAAG,KAAK,CAAC,KAAK,EAAE;gBACd,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC5C,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;oBACnG,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;oBACpC,IAAI,QAAQ,GAAG,EAAE;oBACjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACnC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC1B;oBACD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC1B;aACF;iBAAM;gBACL,wCAAwC;gBACxC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;aACxC;YACD,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,aAAa,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;YACpE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;KAAA;IAED,cAAc,CAAC,OAAiB;QAC9B,IAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,yBAAyB,EAAE,CAAC;SACtC;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,GAAG,CAAC,yBAAyB,EAAE,CAAC;IACvC,CAAC;IAED,YAAY,CAAC,KAAU;QACrB,IAAG,KAAK,IAAI,KAAK,EAAE;YACjB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YAC/D,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;YACvE,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACrE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;SAC9B;IACH,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;IAC1D,CAAC;;0EAz2BU,aAAa;6FAAb,aAAa;;;;;;;;;;;;;;;;;;;;QCxB1B,yEAAyC;QAEvC,iFAAyE;QAAA,uEAAyB;QAAC,uEAAW;QAAA,4DAAI;QAAA,4DAAc;QAEhI,yEAA8B;QAC5B,yEAA2F;QACzF,gFASC;QARD,wJAAoB,iBAAkB,IAAC,0GACjB,yBAA0B,IADT,wGAElB,yBAA0B,IAFR,0GAGjB,yBAA0B,IAHT,0GAIjB,yBAA0B,IAJT,8GAKf,2BAA4B,IALb,0GAMd,2BAA4B,IANd,8FAOvB,wBAAyB,IAPF;QAQtC,4DAAU;QACb,4DAAM;QACR,4DAAM;QAEN,+EAAqD;QAErD,yEAEwG;QAAxG,4IAAyB,KAAK,oBAAc,MAAM,IAAC,oFAA0B,MAAM,oBAAc,KAAK,IAAnD;QACjD,wFAEC;QADD,iKAAqB,0BAA2B,IAAC;QAChD,4DAAgB;QACnB,4DAAM;QAEN,2EAE0G;QAA1G,6IAAyB,MAAM,oBAAc,MAAM,IAAC,qFAA0B,MAAM,oBAAc,MAAM,IAApD;QAClD,0FAGC;QAFD,oKAAsB,2BAA4B,IAAC,4GAC7B,2BAA4B,IADC;QAElD,4DAAiB;QACpB,4DAAM;QAEN,2EAGwG;QAAxG,6IAAyB,KAAK,oBAAc,MAAM,IAAC,qFAA0B,MAAM,oBAAc,KAAK,IAAnD;QACjD,uFAGC;QAFD,6KAA4B,sBAAuB,IAAE,qHACzB,sBAAuB,IADE;QAEpD,4DAAc;QAEjB,4DAAM;QACN,2EAE0G;QAAxG,6IAAyB,KAAK,oBAAc,MAAM,IAAC,qFAA0B,MAAM,oBAAc,KAAK,IAAnD;QACnD,+FAKC;QAJC,mLAA2B,0BAA2B,IAAE,2HAC7B,0BAA2B,IADE,mHAEpC,uCAAwC,IAFJ,uHAGlC,uCAAwC,IAHN;QAIzD,4DAAsB;QACzB,4DAAM;QACN,2EAEoH;QAApH,6IAAyB,WAAW,oBAAc,MAAM,IAAC,qFAA0B,MAAM,oBAAc,WAAW,IAAzD;QACvD,yFAKC;QAJD,iKAAkB,0BAA2B,IAAC,iHACrB,wBAAyB,IADJ,+GAEzB,2BAA4B,IAFH,uHAGrB,2BAA4B,IAHP;QAI7C,4DAAgB;QACnB,4DAAM;QAEN,2EAE8G;QAA9G,6IAAyB,QAAQ,oBAAc,MAAM,IAAC,qFAA0B,MAAM,oBAAc,QAAQ,IAAtD;QACpD,mFAAoC;QACtC,4DAAM;QAEN,2EAC0F;QACxF,uFAE6C;QAD7C,mKAAoB,4BAA6B,IAAC,qGAC9B,sBAAuB,IADO;QACL,4DAAc;QAC7D,4DAAM;QAEN,2EAAmB;QACjB,2EAAqG;QACnG,wDACF;QAAA,4DAAM;QACN,2EAAkB;QAChB,wDACF;QAAA,4DAAM;QACR,4DAAM;QACN,oFACyD;QAAvD,wKAAsB,8BAA+B,IAAC;QACxD,4DAAe;QACjB,4DAAM;;QA3F+C,0DAAqB;QAArB,4EAAqB;QAoBxE,0DAAiF;QAAjF,gIAAiF;QAQjF,0DAAmF;QAAnF,kIAAmF;QASnF,0DAAiG;QAAjG,gJAAiG;QACjG,gIAAiF;QAS/E,0DAAiF;QAAjF,gIAAiF;QAUnF,0DAA6F;QAA7F,4IAA6F;QAW7F,0DAAuF;QAAvF,sIAAuF;QAMvF,0DAAyF;QAAzF,yIAAyF;QAQrF,0DACF;QADE,kFACF;QAEE,0DACF;QADE,kFACF;;;;;;;;;;;;;;ACxFJ;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,EAAE;CACZ,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACV5D,MAAM,WAAW;IAEtB,YAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE7C;;OAEG;IACH,SAAS,CAAC,CAAS,EAAE,CAAS;QAC5B,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,CAAS,EAAE,CAAS;QAC3B,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,CAAS,EAAE,CAAS;QAC7B,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,CAAS,EAAE,CAAS;QAC5B,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,EAAU,EAAE,EAAU;QAC9B,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,2DAA2D;QAClF,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAC3B,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACtB,EAAE,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;QACtB,EAAE,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;QACtB,EAAE,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACpB,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QACnB,EAAE,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACpB,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QAEvB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,2DAA2D;QAClF,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAC3B,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACtB,EAAE,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;QACtB,EAAE,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;QACtB,EAAE,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACpB,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QACnB,EAAE,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACpB,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QAEvB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QAChB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,GAAG,GAAG,EAAE;YACX,IAAI,EAAE,GAAG,CAAC,EAAE;gBAAE,EAAE,IAAI,EAAE,CAAC;gBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,OAAO,GAAG,CAAC,CAAC;aAAE;YAC9C,IAAI,EAAE,GAAG,CAAC,EAAE;gBAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;gBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,OAAO,GAAG,CAAC,CAAC;aAAE;SACpD;aAAM,IAAI,CAAC,GAAG,GAAG,EAAE;YAClB,IAAI,EAAE,GAAG,CAAC,EAAE;gBAAE,EAAE,IAAI,EAAE,CAAC;gBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,OAAO,GAAG,CAAC,CAAC;aAAE;YAC9C,IAAI,EAAE,GAAG,CAAC,EAAE;gBAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;gBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,OAAO,GAAG,CAAC,CAAC;aAAE;YACnD,IAAI,CAAC,CAAC;YACN,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,IAAI,CAAC,EAAE;gBAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;gBAAC,EAAE,IAAI,CAAC,CAAC;gBAAC,OAAO,GAAG,CAAC,CAAC;aAAE;YACnD,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,IAAI,CAAC,EAAE;gBAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;gBAAC,EAAE,IAAI,CAAC,CAAC;gBAAC,OAAO,GAAG,CAAC,CAAC;aAAE;SACpD;QAED,IAAI,OAAO,EAAE;YACX,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAClB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAClB,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAChB,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACf,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAChB,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YAEnB,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAClB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAClB,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAChB,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACf,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAChB,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACpB;QACD,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC5B,CAAC;IAIH;;OAEG;IACF,kBAAkB,CAAC,EAAO,EAAE,EAAO;QAClC,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,EAAE,GAAC,GAAG,GAAG,GAAG,EAAE;gBAChB,MAAM;aACP;YACD,QAAQ,EAAG,CAAC;YACZ,GAAG,IAAI,EAAE,CAAC;SACX;QACD,QAAQ,IAAI,QAAQ,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,CAAC,CAAC;QAAC,KAAK,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,QAAQ,EAAC,CAAC,EAAE;YAAE,GAAG,IAAI,EAAE,CAAC;QAEhD,IAAI,QAAQ,GAAG,CAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC;QACtE,IAAI,OAAO,GAAG,QAAQ,CAAC,QAAQ,GAAC,CAAC,CAAC,CAAC;QAEnC,IAAI,GAAG,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QAEjD,qBAAqB;QACrB,IAAI,EAAE,IAAI,EAAE,GAAC,CAAC,EAAE,GAAC,CAAC,CAAC,GAAG,IAAI,EAAE;YAC1B,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SACb;aAAM;YACL,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SACb;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAEC;;OAEG;IACH,aAAa,CAAC,OAAe;QAC3B,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,UAAU;QACR,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC7B,OAAO,MAAM,CAAC,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,KAAa,EAAE,IAAS;QAChC,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACrD,IAAI,UAAU,CAAC,KAAK,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACnC;IACH,CAAC;;sEA3JU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACS;AACT;;AAKhD,MAAM,aAAa;IAExB;QACE,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,IAAI;QACF;;WAEG;QACH,MAAM,WAAW,GAAG;YAClB,GAAG,EAAE,aAAa;YAClB,KAAK,EAAE,EAAE;SACV,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAE5B;;WAEG;QACH,MAAM,QAAQ,GAAG;YACf,GAAG,EAAE,UAAU;YACf,KAAK,EAAE,CAAC;SACT,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAEzB;;WAEG;QACH,MAAM,qBAAqB,GAAG;YAC5B,GAAG,EAAE,uBAAuB;YAC5B,KAAK,EAAE,EAAE;SACV,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;QAEtC;;WAEG;QACH,MAAM,WAAW,GAAG;YAClB,GAAG,EAAE,aAAa;YAClB,KAAK,EAAE,KAAK;SACb,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAE5B;;WAEG;QACH,MAAM,UAAU,GAAG;YACjB,GAAG,EAAE,YAAY;YACjB,KAAK,EAAE,KAAK;SACb,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAE3B;;WAEG;QACH,MAAM,cAAc,GAAG;YACrB,GAAG,EAAE,gBAAgB;YACrB,KAAK,EAAE,CAAC;SACT,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC/B;;WAEG;QACH,MAAM,aAAa,GAAG;YACpB,GAAG,EAAE,eAAe;YACpB,KAAK,EAAE,QAAQ;SAChB,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC9B;;WAEG;QACH,MAAM,MAAM,GAAG;YACb,GAAG,EAAE,QAAQ;YACb,KAAK,EAAE,SAAS;SACjB,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAEvB;;WAEG;QACH,MAAM,MAAM,GAAG;YACb,GAAG,EAAE,QAAQ;YACb,KAAK,EAAE,SAAS;SACjB,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAEvB;;WAEG;QACH,MAAM,SAAS,GAAG;YAChB,GAAG,EAAE,WAAW;YAChB,KAAK,EAAE,SAAS;SACjB,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAE1B;;WAEG;QACH,MAAM,SAAS,GAAG;YAChB,GAAG,EAAE,WAAW;YAChB,KAAK,EAAE,SAAS;SACjB,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAE1B;;WAEG;QACH,MAAM,UAAU,GAAG;YACjB,GAAG,EAAE,YAAY;YACjB,KAAK,EAAE;gBACL,MAAM,EAAE,EAAE;gBACV,UAAU,EAAE,EAAE;aACf;SACF,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAE3B;;WAEG;QACF,MAAM,aAAa,GAAG;YACrB,GAAG,EAAE,eAAe;YACpB,KAAK,EAAE,CAAC;SACT,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC9B;;WAEG;QACH,MAAM,UAAU,GAAG;YACjB,GAAG,EAAE,YAAY;YACjB,KAAK,EAAE;gBACL,EAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAG,MAAM,EAAE,CAAC,MAAM,CAAC,EAAC;gBAC7D,EAAC,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAC;aAClE;SACF,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAE3B;;WAEG;QACH,MAAM,gBAAgB,GAAG;YACvB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,QAAQ;SAChB,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEjC;;WAEG;QACH,MAAM,WAAW,GAAG;YAClB,GAAG,EAAE,aAAa;YAClB,KAAK,EAAE;gBACL,EAAC,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,aAAa,EAAC;gBAC5F,EAAC,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAE,KAAK,EAAG,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC,EAAE,OAAO,EAAE,kCAAkC,EAAC;gBACrI,EAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAG,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAC;aAClI;SACF,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAE5B;;WAEG;QACH,MAAM,iBAAiB,GAAG;YACxB,GAAG,EAAE,mBAAmB;YACxB,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;SAC/B,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAElC;;WAEG;QACH,MAAM,0BAA0B,GAAG;YACjC,GAAG,EAAE,4BAA4B;YACjC,KAAK,EAAE,SAAS;SACjB,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;QAC3C;;WAEG;QACF,MAAM,eAAe,GAAG;YACvB,GAAG,EAAE,iBAAiB;YACtB,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,KAAK;SACb,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAEhC;;WAEG;QACH,MAAM,eAAe,GAAG;YACtB,GAAG,EAAE,iBAAiB;YACtB,KAAK,EAAE,KAAK;SACb,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAChC;;WAEG;QACD,MAAM,gBAAgB,GAAG;YACzB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,IAAI;SACZ,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEjC;;WAEG;QACH,MAAM,gBAAgB,GAAG;YACvB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,OAAO;SACf,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACjC;;UAEE;QACF,MAAM,iBAAiB,GAAG;YACxB,GAAG,EAAE,mBAAmB;YACxB,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,IAAI;SACb,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAClC;;WAEG;QACF,MAAM,WAAW,GAAG;YACnB,GAAG,EAAE,aAAa;YAClB,KAAK,EAAE;gBACL,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;aACtD;SACF,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAE5B;;WAEG;QACF,MAAM,gBAAgB,GAAG;YACxB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,EAAE;SACV,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEjC;;WAEG;QACH,MAAM,gBAAgB,GAAG;YACvB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,CAAC;SACT,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEjC;;WAEG;QACF,MAAM,gBAAgB,GAAG;YACxB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,OAAO;SACf;QACD,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEjC;;WAEG;QACF,MAAM,cAAc,GAAI;YACtB,GAAG,EAAE,gBAAgB;YACrB,KAAK,EAAE,4DAAQ;SAChB;QACD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAChC;;WAEG;QACH,MAAM,kBAAkB,GAAI;YAC1B,GAAG,EAAE,UAAU;YACf,KAAK,EAAE,4DAAQ;SAChB;QACD,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACnC;;WAEG;QACH,MAAM,SAAS,GAAI;YACjB,GAAG,EAAE,WAAW;YAChB,KAAK,EAAE,SAAS;SACjB;QACD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACzB;;WAEG;QACH,MAAM,gBAAgB,GAAI;YACzB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,8DAAe;SACvB;QACD,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACjC;;WAEG;QAEH,MAAM,eAAe,GAAG;YACtB,GAAG,EAAE,iBAAiB;YACtB,KAAK,EAAE,CAAC,CAAC;SACV;QACD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QAChC;;WAEG;QACF,MAAM,YAAY,GAAG;YACpB,GAAG,EAAE,cAAc;YACnB,KAAK,EAAE,SAAS;SACjB;QACD,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAE7B;;WAEG;QACF,MAAM,aAAa,GAAG;YACrB,GAAG,EAAE,eAAe;YACpB,KAAK,EAAE,SAAS;SACjB;QACD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAE9B;;WAEG;QACH,MAAM,aAAa,GAAG;YACpB,GAAG,EAAE,eAAe;YACpB,KAAK,EAAE,EAAE;SACV;QACD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAE9B;;WAEG;QACF,MAAM,QAAQ,GAAG;YAChB,GAAG,EAAE,UAAU;YACf,KAAK,EAAE,EAAE;SACV;QACD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAEzB;;WAEG;QACH,MAAM,cAAc,GAAG;YACrB,GAAG,EAAE,gBAAgB;YACrB,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;SACzF;QACD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAE/B;;WAEG;QACH,MAAM,cAAc,GAAG;YACrB,GAAG,EAAE,gBAAgB;YACrB,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE;SAC5B;QACD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAE/B;;WAEG;QACH,MAAM,UAAU,GAAG;YACjB,GAAG,EAAE,YAAY;YACjB,KAAK,EAAE,IAAI;SACZ,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC7B,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,GAAW;QACnB,cAAc;QACd,IAAI,GAAG,KAAK,IAAI,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,6BAA6B,GAAG,EAAE,CAAC,CAAC;YAChD,OAAO,SAAS,CAAC;SAClB;QAED,iBAAiB;QACjB,MAAM,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,KAAK,KAAK,IAAI,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,EAAE,CAAC,CAAC;YACnD,OAAO,SAAS,CAAC;SAClB;QAED,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,MAAW;QACnB,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC;;0EArYU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;ACEb,MAAM,kBAAkB;IAE7B,YAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;IAAG,CAAC;IAE5C,QAAQ,KAAU,CAAC;IAEnB,qBAAqB,CAAC,OAAe;QACnC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEpD,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,cAAc,CAAC,OAAe;QAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACpD,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,iBAAiB;QACf,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;QAC1D,MAAM,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAc,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,MAAM,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAc,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;QAChF,MAAM,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAc,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,aAAa;QACX,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACpD,IAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;YACxB,OAAO,SAAS,CAAC;SAClB;aACI;YACH,IAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAAE,OAAO,SAAS,CAAC;;gBACpC,OAAO,MAAM,CAAC;SACpB;IACH,CAAC;IAED,sBAAsB,CAAC,QAAgB;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEpD,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,QAAgB;QAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACpD,OAAO,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC7B,CAAC;IAED,YAAY;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAG,OAAO,GAAG,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC;;YACxB,OAAO,KAAK,CAAC;IACpB,CAAC;;oFApDU,kBAAkB;kGAAlB,kBAAkB;QCR/B,yEAAoD;QAAnC,uIAAS,uBAAwB,IAAC;QACjD,4EAA4F;QAA/C,0IAAS,0BAA2B,QAAQ,CAAC,IAAC;QACzF,qEAC4C;QAC9C,4DAAS;QACT,4EAAgI;QAAjD,0IAAS,2BAA4B,SAAS,CAAC,IAAC;QAC7H,qEAC6E;QAC/E,4DAAS;QACT,4EAAyF;QAA5C,0IAAS,0BAA2B,KAAK,CAAC,IAAC;QACtF,qEACwE;QAC1E,4DAAS;QACT,4EAA0F;QAA7C,0IAAS,0BAA2B,MAAM,CAAC,IAAC;QACvF,qEACyE;QAC3E,4DAAS;QACT,4EAAyF;QAA5C,0IAAS,0BAA2B,KAAK,CAAC,IAAC;QACtF,sEACwE;QAC1E,4DAAS;QACT,6EAA+F;QAAlD,2IAAS,0BAA2B,WAAW,CAAC,IAAC;QAC5F,sEAC8E;QAChF,4DAAS;QACX,4DAAM;;QAtBF,0DAAoC;QAApC,uFAAoC;QAEO,0DAAiC;QAAjC,yFAAiC;QAE5E,0DAAqE;QAArE,uHAAqE;QAIrE,0DAAgE;QAAhE,kHAAgE;QAIhE,0DAAiE;QAAjE,mHAAiE;QAIjE,0DAAgE;QAAhE,kHAAgE;QAIhE,0DAAsE;QAAtE,wHAAsE;;;;;;;;;;;;;;ACvB1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AAK/F,iCAAiC;AACsC;;;;;;;;;ICQ/D,wEAAmE;;;IAArB,gFAAoB;;;;IAd1E,yEAAuD;IAErD,yEAA0B;IACxB,wEAAmC;IAAA,kEAAO;IAAA,4DAAK;IACjD,4DAAM;IAEN,yEAAwB;IAEtB,yEAAiB;IAAA,kEAAO;IAAA,4DAAM;IAE9B,yEAAiB;IACf,8EACoC;IAD6B,2UAA4C;IAA7G,4DACoC;IACpC,+EAAwB;IACtB,0HAAmE;IACrE,4DAAW;IACb,4DAAM;IAEN,sEAA4C;IAC5C,0EAAiB;IAAA,sEAAU;IAAA,4DAAM;IAEjC,0EAAiB;IACf,2EAAyC;IACvC,6EAAiH;IAA3C,sTAAyB,OAAO,aAAU;IAAhH,4DAAiH;IACjH,2EAA+B;IAAA,8DAAE;IAAA,4DAAM;IACvC,6EAA6G;IAAzC,sTAAyB,KAAK,aAAU;IAA5G,4DAA6G;IAC7G,2EAAmD;IACjD,8EAA+D;IAAhC,0TAA+B;IAC5D,oEAAqG;IACvG,4DAAS;IACX,4DAAM;IACR,4DAAM;IAEN,sEAA6C;IAC/C,4DAAM;IAER,2EAAoD;IAClD,8EAAiF;IAA7B,uTAA4B;IAAC,gEAAI;IAAA,4DAAS;IAC9F,8EAA8F;IAA3C,wYAA0C;IAAC,kEAAM;IAAA,4DAAS;IAC7G,8EAA+F;IAAzC,qUAAwC;IAAC,kEAAM;IAAA,4DAAS;IAChH,4DAAM;IACR,4DAAM;IAzCN,4DAAuD;;;IAcxB,2DAAqB;IAArB,yFAAqB;IASJ,0DAA6B;IAA7B,wFAA6B;IAE7B,0DAA2B;IAA3B,sFAA2B;IAG9B,0DAA+D;IAA/D,qHAA+D;;ADfrG,MAAM,gBAAgB;IAY3B,YAAmB,MAAqB,EAAS,GAAe,EAAS,IAAiB;QAAvE,WAAM,GAAN,MAAM,CAAe;QAAS,QAAG,GAAH,GAAG,CAAY;QAAS,SAAI,GAAJ,IAAI,CAAa;QAVhF,mBAAc,GAAG,IAAI,0DAAY,EAAO,CAAC;QACzC,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QAIvC,YAAO,GAAQ,EAAE,CAAC;QAClB,qBAAgB,GAAG,EAAE,CAAC;QAEtB,cAAS,GAAQ,EAAC,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAC,CAAC;IAE4C,CAAC;IAE9F,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC3B,CAAC;IAED,uBAAuB;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEpD,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,YAAY;QACZ,IAAI,CAAC,OAAO,GAAG,EAAC,OAAO,EAAE,mBAAmB,MAAM,CAAC,WAAW,EAAE,EAAE,EAAE,KAAK,EAAE,iEAAsB,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC;IAC1H,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEhB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,MAAW,EAAE,EAAE;YAC5C,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC;YACtE,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,qBAAqB,CAAC,KAAU;QAC9B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;IAC9F,CAAC;IAED,YAAY;QACV,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAE9C,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACxC,OAAQ,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC9D,CAAC;IAED,UAAU;QACR,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAE9C,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACtC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,UAAU,CAAC,MAAc,EAAE,KAAU;QACnC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IAC9C,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAE9C,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAEnD,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;YAErE,IAAG,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE;gBACrB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC;gBAChD,OAAM;aACP;YAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC7B;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;YAEnE,IAAG,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE;gBACnB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC;gBAChD,OAAM;aACP;YAED,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,WAAW;QACT,IAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC;YAClD,OAAO;SACR;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACvC,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE9C,MAAM,WAAW,GAAG,EAAE,CAAC;QACvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,IAAI,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5E,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;SACzB;QAAA,CAAC;QAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC;IAED,aAAa,CAAC,YAAiB;QAC7B,YAAY,CAAC,KAAK,GAAE,EAAE,CAAC;QACvB,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAE9E,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAE1E,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAE3B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC7B,CAAC;IAED,cAAc;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAElD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAChD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAEhD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAE3B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,gBAAgB;QACd,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAElD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAChD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAEhD,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC;IACtE,CAAC;IAED,YAAY;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAG,OAAO,GAAG,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC;;YACxB,OAAO,KAAK,CAAC;IACpB,CAAC;;gFAvKU,gBAAgB;gGAAhB,gBAAgB;;;;;;QCb7B,6GAAuD;;QAAjD,oFAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ICerB,wEAAyD;IACvD,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC5B,4DAAK;;;IADC,0DAAiB;IAAjB,0FAAiB;;ACJ1B,MAAM,eAAe;IAI1B,YAAmB,MAAqB,EAAS,GAAe,EAAS,IAAiB;QAAvE,WAAM,GAAN,MAAM,CAAe;QAAS,QAAG,GAAH,GAAG,CAAY;QAAS,SAAI,GAAJ,IAAI,CAAa;QAFnF,YAAO,GAAa,EAAE,CAAC;IAEgE,CAAC;IAE/F,QAAQ;QACN,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC9C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;QAC5D,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;QAC5D,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YAChD,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YAChD,yEAAyE;YACzE,IAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1D;QAAA,CAAC;QACF,IAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACtB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;YAEpD,8CAA8C;YAC9C,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,uBAAuB;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEpD,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;;8EA9BU,eAAe;+FAAf,eAAe;QDZ5B,yEAA4B;QAE1B,yEAA0B;QACxB,wEAAmC;QAAA,iEAAM;QAAA,4DAAK;QAChD,4DAAM;QAEN,yEAAyB;QACvB,yEAAiB;QACf,2EAAyE;QACvE,wEAAO;QACL,wEAAyB;QACvB,qEAAI;QAAA,uEAAW;QAAA,4DAAK;QACtB,4DAAK;QACP,4DAAQ;QACR,yEAAO;QACL,2GAEK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QAEN,qEAEM;QAER,4DAAM;QAIR,4DAAM;;QAfuB,2DAAe;QAAf,gFAAe;;;;;;;;;;;;;;AEf5C;AAAA;AAAA;AAAA;AAAyB;AACE;AAIpB,MAAM,OAAO;IAiDlB,YAAY,QAAqB;QAhDjC,aAAa;QACH,UAAK,GAAQ,IAAI,CAAC;QAE5B,WAAW;QACD,cAAS,GAAQ,IAAI,CAAC;QAEhC,WAAW;QACD,cAAS,GAAQ,IAAI,CAAC;QAEhC,SAAS;QACC,YAAO,GAAY,KAAK,CAAC;QACzB,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAIjC,cAAc;QACJ,eAAU,GAAQ,IAAI,CAAC;QACjC,gBAAgB;QACN,cAAS,GAAQ,IAAI,CAAC;QAEhC,gBAAgB;QACN,YAAO,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;QAElE,YAAY;QACF,WAAM,GAAW,GAAG,CAAC;QAC/B,gBAAgB;QACN,YAAO,GAAW,GAAG,CAAC;QAEhC,SAAS;QACC,aAAQ,GAAQ,IAAI,CAAC;QACrB,cAAS,GAAQ,IAAI,CAAC;QACtB,YAAO,GAAQ,IAAI,CAAC;QAE9B,OAAO;QACG,WAAM,GAAQ,IAAI,CAAC;QACnB,WAAM,GAAQ,IAAI,CAAC;QAE7B,cAAc;QACJ,gBAAW,GAAQ,IAAI,CAAC;QACxB,gBAAW,GAAQ,IAAI,CAAC;QAElC,QAAQ;QACE,WAAM,GAAQ,IAAI,CAAC;QAE7B,8BAA8B;QACpB,iBAAY,GAAa,EAAE,CAAC;QAGpC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAE1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,OAAO,CAAC,IAAS,EAAE,QAAa,EAAE,SAAkB,KAAK,EAAE,SAAkB,KAAK,EAAE,SAAiB,EAAE,QAAa;QAClH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,MAAM,IAAI,GAAG,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAElD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACjB,GAAG,CAAC,MAAM,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,EAAE;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,gBAAgB;QACd,sCAAsC;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAClF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACpF,iCAAiC;QACjC,IAAI,CAAC,UAAU,GAAG,yCAAS,CAAC,IAAI,CAAC,SAAS,CAAC;aACtC,MAAM,CAAC,KAAK,CAAC;aACb,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;aACzC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;QAEtD,aAAa;QACb,IAAI,CAAC,UAAU;aACd,MAAM,CAAC,MAAM,CAAC;aACd,IAAI,CAAC,OAAO,EAAE,mBAAmB,CAAC;aAClC,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAI,EAAE,CAAC,GAAG,GAAG,CAAC;aAC3F,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC;aAC9B,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC;aACxB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAE5B,oBAAoB;QACpB,IAAI,CAAC,UAAU;aACd,MAAM,CAAC,MAAM,CAAC;aACd,IAAI,CAAC,OAAO,EAAE,qBAAqB,CAAC;aACpC,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;aAC5G,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC;aAC9B,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC;aACxB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAE5B,IAAI,CAAC,UAAU;aACd,MAAM,CAAC,MAAM,CAAC;aACd,IAAI,CAAC,OAAO,EAAE,qBAAqB,CAAC;aACpC,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC;aAChC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;aACb,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;aACnC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;aACjB,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC;aAC9B,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC;aACxB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAE5B,oBAAoB;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU;aAC3B,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;aACzB,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QAExF,cAAc;QACd,IAAI,CAAC,SAAS;aACT,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC;aAC7B,IAAI,CAAC,WAAW,EAAE,cAAc,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;QAE9D,IAAI,CAAC,SAAS;aACT,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IACrC,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,QAAQ,GAAG,4CAAY,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC5F,IAAI,CAAC,SAAS,GAAG,4CAAY,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC5F,IAAI,CAAC,OAAO,GAAG,kDAAkB,CAAC,kDAAkB,CAAC,CAAC;QAEtD,aAAa;QACb,IAAI,CAAC,MAAM,GAAG,6CAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5C,aAAa;QACb,IAAI,CAAC,MAAM,GAAG,2CAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAEA,YAAY;QACX,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAE,CAAC,CAAC;QAC/I,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAEzC,IAAI,QAAQ,CAAC;QACb,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACzB,QAAQ,GAAG,SAAS,CAAC;SACtB;aAAM;YACL,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAE,CAAC,CAAC;YAC7E,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC1C;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAE,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC;YAC9D,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;SACrC;QAED,aAAa;QACb,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC/B,aAAa;QACb,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACjC,aAAa;QACb,MAAM,GAAG,GAAG,yCAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC;QAE5E,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,OAAO,EAAE,CAAE,CAAC;SACtC;aACI;YACH,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;SAC5B;QACD,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC;IACjC,CAAC;IAED,UAAU;QAER,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aAC9C,SAAS,CAAC,MAAM,CAAC;aACjB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC;aAC1B,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC;aAC3B,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC;aAC/B,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC;aACpB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;aACpB,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;aACpB,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAEtC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAClD,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;iBAC9C,SAAS,CAAC,MAAM,CAAC;iBACjB,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC;iBAC1B,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;iBACpC,SAAS,CAAC,MAAM,CAAC;iBACjB,MAAM,EAAE,CAAC;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;iBAC5C,SAAS,CAAC,OAAO,CAAC;iBAClB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;iBACpB,MAAM,CAAC,WAAW,CAAC;iBACnB,IAAI,CAAC,YAAY,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;iBAC9C,IAAI,CAAC,OAAO,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;iBAC7C,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;iBAC9C,IAAI,CAAC,GAAG,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,GAAG,EAAE,CAAC;iBAC/C,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;SACrB;IACH,CAAC;IAGD,gBAAgB;QACd,aAAa;QACb,MAAM,GAAG,GAAG,sDAAK,EAAE;aAClB,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE;YACvC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAChC,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE1B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACzG,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YACzB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;iBACjB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;iBAChB,IAAI,CAAC,MAAM,CAAC;iBACZ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;iBACvG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE;iBAC/D,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;iBACzC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;iBACzC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC5C,IAAI,CAAC,IAAI,EAAE,CAAC,CAAM,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,CAAE;iBACrC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;iBAC1D,EAAE,CAAC,UAAU,EAAG,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SAClE;aAAM;YACL,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;iBACjB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;iBAChB,IAAI,CAAC,MAAM,CAAC;iBACZ,IAAI,CAAC,GAAG,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;iBACrG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;iBACjH,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;iBACzC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;iBACzC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC5C,IAAI,CAAC,IAAI,EAAE,CAAC,CAAM,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,CAAE;iBACrC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;iBAC1D,EAAE,CAAC,UAAU,EAAG,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SAClE;IACH,CAAC;IAED,kBAAkB,CAAC,OAAiB;QAClC,IAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;qBAC3D,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aACzB;SACF;QAED,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;iBACnC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;iBACtB,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC;SACvC;QAED,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;IAC9B,CAAC;IAED,wBAAwB;QACtB,IAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;qBAC3D,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aACzB;SACF;QACD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,OAAO;YAC1B,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;gBACzB,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;gBACpC,IAAI,CAAC,MAAM,GAAG,iBAAiB,GAAI,KAAK,GAAG,wCAAwC;aACpF;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;gBAC7B,IAAI,CAAC,MAAM,GAAG,iBAAiB,GAAI,KAAK,GAAG,4CAA4C;aACxF;SACF;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAG,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;gBACzB,IAAI,CAAC,WAAW,GAAG,gBAAgB;gBACnC,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;gBAClC,IAAI,CAAC,MAAM,GAAG,oBAAoB;aACnC;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,KAAK;gBACxB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;gBAC7B,IAAI,CAAC,MAAM,GAAG,4BAA4B;aAC3C;SACF;QAED,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC;aACpC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;QAE3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC;aACpC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;QAE3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC;aACjC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IACxB,CAAC;IAED,YAAY;QACV,+BAA+B;QAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC;QACpD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;QAE3C,MAAM,IAAI,GAAI,IAAI,CAAC,UAAU;aACd,MAAM,CAAC,MAAM,CAAC;QAE7B,MAAM,cAAc,GAAI,IAAI;aACH,MAAM,CAAC,gBAAgB,CAAC;aACxB,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC;QAEtD,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC;aAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,GAAG,GAAC,CAAC,GAAC,CAAC,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACtH,KAAK,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;aACtB,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;aACpC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,UAAU;aACd,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;aACpB,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;aAC7G,MAAM,CAAC,MAAM,CAAC;aACd,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,GAAI,CAAC,GAAG,GAAG,CAAC;aACrE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;aACnE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;aAClB,KAAK,CAAC,MAAM,EAAE,uBAAuB,CAAC;QAEvC,MAAM,WAAW,GAAG,8CAAc,EAAE;aACf,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aAC7B,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEjF,IAAI,CAAC,UAAU;aACd,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC;aAC7B,IAAI,CAAC,WAAW,EAAE,YAAY,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;aAC7G,IAAI,CAAC,6CAAa,CAAC,WAAW,CAAC;aAC/B,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;aACxB,QAAQ,CAAC,EAAE,CAAC,CAAC;QAEd,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,oBAAoB,CAAC;aAC9C,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,oBAAoB,CAAC;aAC3C,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,EAAU,EAAE,IAAY;QAC5B,IAAG,IAAI,IAAI,KAAK,EAAE;YAChB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;SAC5E;aAAM;YACL,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;SAC5E;IACH,CAAC;IAED,UAAU,CAAC,CAAM;QACf,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;YACd,OAAO,MAAM,CAAC;SACf;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,SAAS,CAAC,CAAM;QACd,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC/B,YAAY;QACZ,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IAC/E,CAAC;CACF;;;;;;;;;;;;;AC7YD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AAK3D;;;;;;;;;ICI5B,yEAA2E;IACvE,4EAAiH;IAAtE,uUAAqC;IAC5E,+EAAiC;IAC7B,6EAAmB;IAAA,gGAAqC;IAAA,4DAAS;IACjE,6EAAmB;IAAA,4FAAiC;IAAA,4DAAS;IAC7D,6EAAmB;IAAA,4FAAiC;IAAA,4DAAS;IAC7D,6EAAmB;IAAA,2FAA+B;IAAA,4DAAS;IAC3D,8EAAmB;IAAA,uFAA2B;IAAA,4DAAS;IACvD,8EAAmB;IAAA,uFAA2B;IAAA,4DAAS;IACvD,8EAAmB;IAAA,kFAAsB;IAAA,4DAAS;IACtD,4DAAW;IACX,gFAAuC;IACnC,8EAAmB;IAAA,oGAAwC;IAAA,4DAAS;IACpE,8EAAmB;IAAA,gGAAoC;IAAA,4DAAS;IAChE,8EAAmB;IAAA,gGAAoC;IAAA,4DAAS;IAChE,8EAAmB;IAAA,mFAAuB;IAAA,4DAAS;IACnD,8EAAmB;IAAA,+EAAmB;IAAA,4DAAS;IAC/C,8EAAmB;IAAA,+EAAmB;IAAA,4DAAS;IAC/C,8EAAmB;IAAA,4EAAgB;IAAA,4DAAS;IAChD,4DAAW;IACX,gFAA8B;IAC1B,8EAAmB;IAAA,4EAAgB;IAAA,4DAAS;IAChD,4DAAW;IACX,gFAAgC;IAC5B,8EAAoB;IAAA,8EAAkB;IAAA,4DAAS;IACnD,4DAAW;IACX,gFAA6B;IACzB,8EAAoB;IAAA,kFAAsB;IAAA,4DAAS;IACnD,8EAAoB;IAAA,8EAAkB;IAAA,4DAAS;IAC/C,8EAAoB;IAAA,8EAAkB;IAAA,4DAAS;IACnD,4DAAW;IACf,4DAAS;IACb,4DAAM;;;IA/B+E,0DAA+B;IAA/B,0FAA+B;;;;IAgCpH,0EAAmF;IAC/E,6EAAqF;IAAtC,uUAAqC;IAChF,6EAAsB;IAAA,kEAAO;IAAA,4DAAS;IACtC,6EAAsB;IAAA,8DAAG;IAAA,4DAAS;IAClC,6EAAsB;IAAA,8DAAG;IAAA,4DAAS;IACtC,4DAAS;IACb,4DAAM;;ADpCP,MAAM,gBAAgB;IA0B3B,YAAmB,MAAqB,EAAS,IAAiB;QAA/C,WAAM,GAAN,MAAM,CAAe;QAAS,SAAI,GAAJ,IAAI,CAAa;QArBxD,2BAAsB,GAAG,IAAI,0DAAY,EAAU,CAAC;QACpD,2BAAsB,GAAG,IAAI,0DAAY,EAAU,CAAC;QAG9D,sBAAsB;QACd,kBAAa,GAAQ,EAAE,CAAC;QACzB,sBAAiB,GAAQ,EAAE,CAAC;QACnC,gBAAgB;QACR,eAAU,GAAQ;YACxB,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;YACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;SACtD,CAAC;QACF,sDAAsD;QAC/C,kBAAa,GAAY,KAAK,CAAC;QACtC,0BAA0B;QAClB,eAAU,GAAQ,EAAE,CAAC;QAC7B,aAAa;QACN,iBAAY,GAAQ,EAAE,CAAC;QACvB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,2BAAsB,GAAG,SAAS,CAAC;IAE4B,CAAC;IAEvE,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,gDAAO,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACvD,IAAI,CAAC,8BAA8B,CAAC,SAAS,CAAC,CAAC;IACjD,CAAC;IAED,SAAS,CAAC,IAAS,EAAE,QAAa,EAAE,UAAkB,CAAC,CAAC,EAAE,SAAkB,KAAK,EAAE,QAAgB,EAAE,WAAgB,IAAI;QACvH,MAAM,SAAS,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QACjF,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,MAAM,gBAAgB,GAAG;YACvB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1B,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACxC,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,MAAM,gBAAgB,GAAG;YACvB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1B,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QACxC,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,qBAAqB,CAAC,KAAU;QAC9B,MAAM,SAAS,GAAG;YAChB,GAAG,EAAE,WAAW;YAChB,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1B,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACjC,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,8BAA8B,CAAC,IAAY;QACzC,aAAa;QACb,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,yCAAyC;QACzC,IAAG,IAAI,IAAI,SAAS,EAAE;YACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;YACvE,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;YACxC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;gBACtC,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC1B,IAAI,GAAG,GAAO,EAAE,CAAC;gBACjB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;gBACnB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC7B;YAAA,CAAC;YACF,IAAI,CAAC,gBAAgB,GAAG;gBACtB,eAAe,EAAE,KAAK;gBACtB,cAAc,EAAE,EAAE;gBAClB,OAAO,EAAE,KAAK;gBACd,SAAS,EAAE,QAAQ;gBACnB,cAAc,EAAE,KAAK;gBACrB,WAAW,EAAE,KAAK;gBAClB,cAAc,EAAE,CAAC;gBACjB,iBAAiB,EAAE,KAAK;aACzB,CAAC;SACH;aAAM;YACL,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;YACjE,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC;YACzC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;gBACtC,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC1B,IAAI,GAAG,GAAO,EAAE,CAAC;gBACjB,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;gBACnB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC7B;YAAA,CAAC;YACF,IAAI,CAAC,gBAAgB,GAAG;gBACtB,eAAe,EAAE,KAAK;gBACtB,cAAc,EAAE,EAAE;gBAClB,OAAO,EAAE,KAAK;gBACd,SAAS,EAAE,QAAQ;gBACnB,cAAc,EAAE,KAAK;gBACrB,WAAW,EAAE,KAAK;gBAClB,cAAc,EAAE,CAAC;gBACjB,iBAAiB,EAAE,KAAK;aACzB,CAAC;SACH;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;IAC3C,CAAC;IAED,iBAAiB;QACf,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;IAC7D,CAAC;IAED,aAAa;QACX,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,KAAK,IAAI,SAAS,CAAC;IAChE,CAAC;IAED;;KAEC;IACD,gBAAgB,CAAC,KAAc,EAAE,KAAa;QAC5C,IAAI,KAAK,EAAE;YACT,IAAG,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClE;aACI;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAE,CAAC;SACxE;IACH,CAAC;IAED,mBAAmB,CAAC,OAAiB;QACnC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,yBAAyB;QACvB,IAAI,CAAC,QAAQ,CAAC,wBAAwB,EAAE,CAAC;IAC3C,CAAC;;gFAvJU,gBAAgB;gGAAhB,gBAAgB;;;;;;QCZ7B,sEAAK;QACD,uEAAyG;QACzG,yEAAoJ;QAChJ,yEAA8C;QAC1C,4EAAyF;QAA9C,gJAAU,iCAAkC,IAAC;QACpF,4EAAwB;QAAA,oEAAS;QAAA,4DAAS;QAC1C,4EAA4B;QAAA,8EAAc;QAAA,4DAAS;QACvD,4DAAS;QACb,4DAAM;QACN,+GAgCM;QACN,8GAMM;QACV,4DAAM;QACV,4DAAM;;QAzCQ,2DAA0B;QAA1B,qFAA0B;QAiC1B,0DAA0B;QAA1B,qFAA0B;;;;;;;;;;;;;;;;;;;;;;AClCjC,MAAM,YAAY;IACvB,gBAAe,CAAC;;wEADL,YAAY;4FAAZ,YAAY;QCRzB,yEAA2B;QAC3B,sEAAqB;;;;;;;;;;;;;;ACDrB;AAAA;AAAA;AAAA;AAAmF;;;AAQ5E,MAAM,gBAAgB;IAGzB,YAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAF9B,qBAAgB,GAAG,IAAI,0DAAY,EAAU,CAAC;IAEb,CAAC;IAE5C,QAAQ;IACR,CAAC;IAED,WAAW,CAAC,KAAa;QACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,gBAAgB;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAElD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAE7C,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC;IACtE,CAAC;;gFAnBM,gBAAgB;gGAAhB,gBAAgB;QCR7B,yEAAiB;QACb,4EAA8D;QAA/B,wIAAS,iBAAkB,CAAC,CAAC,IAAC;QACzD,kEAAmD;QACvD,4DAAS;QACT,4EAA8D;QAA/B,wIAAS,iBAAkB,CAAC,CAAC,IAAC;QACzD,kEAA8C;QAClD,4DAAS;QACT,4EAA8D;QAA/B,wIAAS,iBAAkB,CAAC,CAAC,IAAC;QACzD,kEAAmD;QACvD,4DAAS;QACT,4EAA6D;QAA9B,wIAAS,gBAAiB,CAAC,CAAC,IAAC;QACxD,kEAAkD;QACtD,4DAAS;QACT,4EAA6D;QAA9B,wIAAS,gBAAiB,CAAC,CAAC,IAAC;QACxD,mEAA6C;QACjD,4DAAS;QACT,6EAA6D;QAA9B,yIAAS,gBAAiB,CAAC,CAAC,IAAC;QACxD,mEAAkD;QACtD,4DAAS;QACT,6EAA6D;QAA9B,yIAAS,gBAAiB,CAAC,CAAC,IAAC;QACxD,mEAAiD;QACrD,4DAAS;QACT,6EAA8D;QAA/B,yIAAS,iBAAkB,CAAC,CAAC,IAAC;QACzD,mEAAkD;QACtD,4DAAS;QACT,6EAA6D;QAA9B,yIAAS,gBAAiB,CAAC,CAAC,IAAC;QACxD,oEAEK;QACT,4DAAS;QACb,4DAAM;;QAHE,2DAA4D;QAA5D,+GAA4D;;;;;;;;;;;;;;AC3BpE;AAAA;AAAA;AAAyH;AAGlH,MAAM,cAAc;IAavB,YAAY,MAAyB;QATrC,WAAW;QACH,aAAQ,GAAQ,IAAI,CAAC;QAC7B,WAAW;QACH,aAAQ,GAAQ,IAAI,CAAC;QAC7B,UAAU;QACF,WAAM,GAAQ,IAAI,CAAC;QACnB,SAAI,GAAQ,IAAI,CAAC;QAClB,iBAAY,GAAY,KAAK,CAAC;QAGnC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,yBAAyB;IACzB,IAAI;QACF,MAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;YAC7B,OAAO;SACR;QAED,+CAA+C;QAC/C,8CAAK,CAAC,QAAQ,CAAC,qDAAY,EAAE,oDAAW,EAAE,uDAAc,EAAE,sDAAa,EAAE,oDAAW,EAAE,+CAAM,EAAE,gDAAO,CAAC,CAAC;QACvG,8CAAK,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;QAEjC,IAAI,CAAC,KAAK,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,MAAM,EAAE;YAClC,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE;gBACP,OAAO,EAAE;oBACP,MAAM,EAAE;wBACN,KAAK,EAAE;4BACL,OAAO,EAAE,IAAI;4BACb,IAAI,EAAE,EAAE;4BACR,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;wBACD,OAAO,EAAE,IAAI;wBACb,QAAQ,EAAE,KAAK;wBACf,MAAM,EAAE;4BACN,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;qBACF;oBACD,KAAK,EAAE;wBACL,OAAO,EAAE,IAAI;wBACb,IAAI,EAAE,KAAK;qBACZ;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,KAAK;qBACjB;iBACF;gBACD,QAAQ,EAAE;oBACR,KAAK,EAAE;wBACL,MAAM,EAAE,CAAC;qBACV;iBACF;gBACD,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE;oBACL,IAAI,EAAE,SAAS;oBACf,SAAS,EAAE,IAAI;iBAChB;gBACD,MAAM,EAAE;oBACN,CAAC,EAAE;wBACD,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,IAAI;wBACb,KAAK,EAAE;4BACL,OAAO,EAAE,IAAI;4BACb,IAAI,EAAE,YAAY;4BAClB,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;4BACD,QAAQ,EAAE,UAAS,KAAK,EAAE,KAAK,EAAE,KAAK;gCAClC,IAAG,IAAI,CAAC,YAAY,EAAE;oCACpB,YAAY;oCACZ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iCAC3D;;oCAAM,OAAO,KAAK,CAAC;4BACtB,CAAC;yBACF;qBACF;oBACD,CAAC,EAAE;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;wBACD,OAAO,EAAE,IAAI;wBACb,KAAK,EAAE;4BACL,OAAO,EAAE,IAAI;4BACb,IAAI,EAAE,MAAM;4BACZ,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;qBACF;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAGD,mDAAmD;IACnD,QAAQ,CAAC,KAAa,EAAE,EAAU;QAChC,IAAG,EAAE,IAAI,CAAC;YAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC;;YACzG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;IAC/E,CAAC;IAED,WAAW,CAAC,QAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,WAAW,CAAC,QAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,IAAS,EAAE,SAAc,EAAE,KAAa;QACjD,MAAM,aAAa,GAAI,QAAQ,CAAC,cAAc,CAAC,sCAAsC,CAAsB,CAAC,KAAK,CAAC;QAClH,IAAI,YAAY,CAAC;QACjB,CAAC,aAAa,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,YAAY,GAAG,SAAS;QAC9E,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACjD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,OAAO,GAAG;gBACd,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE;gBACrF,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtB,eAAe,EAAE,SAAS,CAAC,CAAC,CAAC;gBAC7B,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC;gBACzB,IAAI,EAAE,KAAK;aACZ,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,kBAAkB,CAAC,IAAS,EAAE,aAAqB;QACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEjD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YACpC,MAAM,OAAO,GAAG;gBACd,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;gBACtD,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtB,eAAe,EAAE,KAAK;gBACtB,WAAW,EAAE,KAAK;gBAClB,IAAI,EAAE,KAAK;aACZ,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAExB;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,cAAc;QACZ,OAAO,GAAG,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,KAAK,CAAC,EAAU,EAAE,IAAY;QAC5B,IAAG,IAAI,IAAI,KAAK,EAAE;YAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;SAC3E;aAAM;YACL,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;SAC3E;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,SAAS,CAAC,aAAqB;QAC7B,IAAG,aAAa,IAAI,YAAY,EAAE;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,UAAU,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC;YAC7D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC;SACpD;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACrC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,SAAS,CAAC,CAAM;QACd,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC/B,YAAY;QACZ,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IAC/E,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1NH,qCAAqC;AACyE;AAC9G,iCAAiC;AACsC;AACvE,sBAAsB;AACO;AAE7B,2BAA2B;AACL;AAEtB,sBAAsB;AACG;AAGzB,iCAAiC;AACL;;;;;;AAYrB,MAAM,YAAY;IAoDvB,YAAmB,MAAqB,EAAS,GAAe,EAAS,IAAiB;QAAvE,WAAM,GAAN,MAAM,CAAe;QAAS,QAAG,GAAH,GAAG,CAAY;QAAS,SAAI,GAAJ,IAAI,CAAa;QAhD1F,6BAA6B;QACnB,qBAAgB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAC3C,qBAAgB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAC3C,oBAAe,GAAG,IAAI,0DAAY,EAAO,CAAC;QAC1C,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QAE9C,gCAAgC;QACtB,qBAAgB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAC3C,uBAAkB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAE7C,wBAAmB,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEzC,eAAU,GAAG,IAAI,0DAAY,EAAO,CAAC;QAO/C,yBAAyB;QACjB,cAAS,GAAU,EAAE,CAAC;QAC9B,oBAAoB;QACZ,eAAU,GAAU,EAAE,CAAC;QAC/B,kEAAkE;QAC1D,iBAAY,GAAU,EAAE,CAAC;QAKjC,wBAAwB;QAChB,YAAO,GAAG;YAChB,QAAQ,EAAE,IAAI;YACd,YAAY,EAAE,GAAG;YACjB,aAAa,EAAE,KAAK;YACpB,iBAAiB,EAAE,IAAI;YACvB,UAAU,EAAE,OAAO;YACnB,QAAQ,EAAE;gBACR,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS;aACvG;SACF,CAAC;QAEF,6CAA6C;QACrC,YAAO,GAAQ,EAAE,CAAC;QAC1B,oCAAoC;QAC5B,kBAAa,GAAG,IAAI,oDAAc,EAAE,CAAC;QAC7C,sCAAsC;QAC9B,mBAAc,GAAG,IAAI,oDAAc,EAAE,CAAC;IAEgD,CAAC;IAE/F,eAAe;QACb,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,0BAA0B;IACpB,QAAQ,CAAC,GAAG,GAAG,CAAC,SAAS,EAAE,GAAG,GAAG,CAAC,SAAS,EAAE,IAAI,GAAG,CAAC;;YACzD,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC7B,OAAO;aACR;YAED,wBAAwB;YACxB,IAAI,CAAC,GAAG,GAAG,2CAAK,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YAEtE,gCAAgC;YAChC,iDAAW,CAAC,+JAA+J,EAAE;gBAC3K,OAAO,EAAE,EAAE;gBACX,WAAW,EACT,2FAA2F;oBAC3F,0EAA0E;oBAC1E,wDAAwD;gBAC1D,EAAE,EAAE,kBAAkB;gBACtB,QAAQ,EAAE,GAAG;gBACb,UAAU,EAAE,CAAC,CAAC;aACf,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEnB,8BAA8B;YAC9B,IAAI,qBAAqB,GAAG,IAAI,oDAAc,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;YAEvE,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,aAAa,GAAG,8CAAQ,CAAC,EAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;gBACzL,qBAAqB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAC/C;YAED,qCAAqC;YACrC,IAAI,cAAc,GAAG,IAAI,oDAAc,EAAE,CAAC;YAC1C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAElC,oCAAoC;YACpC,IAAI,CAAC,WAAW,GAAG,IAAI,+CAAS,CAAC,IAAI,CAAC;gBACpC,QAAQ,EAAE,SAAS;gBACnB,IAAI,EAAE;oBACJ,OAAO,EAAE;wBACP,iBAAiB,EAAE,KAAK;wBACxB,SAAS,EAAE;4BACT,KAAK,EAAE,SAAS;4BAChB,OAAO,EAAE,8CAA8C,CAAC,wCAAwC;yBACjG;qBACF;oBACD,SAAS,EAAE,EAAE;oBACb,QAAQ,EAAE,KAAK;oBACf,MAAM,EAAE,KAAK;oBACb,YAAY,EAAE,KAAK;oBACnB,MAAM,EAAE,KAAK;iBACd;gBACD,IAAI,EAAE;oBACJ,YAAY,EAAE,cAAc;iBAC7B;aACF,CAAC,CAAC;YACH,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEtC,uCAAuC;YACvC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,4CAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAM,EAAE,EAAE;gBAC3C,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;gBAC7D,IAAG,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,EAAE;oBAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBAEnD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBACpC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;iBAClC;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;iBACjC;YACH,CAAC,CAAC,CAAC;YAEH,uCAAuC;YACvC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,4CAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAM,EAAE,EAAE;gBAC3C,kBAAkB;gBAClB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAU,EAAE,EAAE;oBAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;oBACjC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAExB,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,sCAAsC;YACtC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,4CAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAM,EAAE,EAAE;gBAC1C,iBAAiB;gBACjB,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAU,EAAE,EAAE;oBAChC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAE7B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,wCAAwC;YACxC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;gBAC1B,8CAA8C;gBAC9C,IAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;oBACzB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;oBACzC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC1C,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC1C;qBAAM;oBACL,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC1C,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;oBAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,oDAAc,EAAE,CAAC;oBAC3C,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;gBACD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;YAEH,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,kDAAY,CAAC,eAAe,EAAE,UAAS,GAAG,EAAC,GAAG;gBAC5C,MAAM,eAAe,GAAG;oBACtB,GAAG,EAAE,iBAAiB;oBACtB,KAAK,EAAE,CAAC,CAAC;iBACV;gBAED,MAAM,aAAa,GAAG;oBACpB,GAAG,EAAE,eAAe;oBACpB,KAAK,EAAE,CAAC;iBACT;gBAED,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;gBAClC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBAChC,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;gBAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC9B,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;KAAA;IAED;;OAEG;IACH,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED;;OAEG;IACH,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,MAAM;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED;;;OAGG;IACH,WAAW;QACT,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QAClC,IAAI,EAAE,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QAC/B,IAAI,EAAE,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QAE/B,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAElB,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,OAAY;QAClB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7C;QACD,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,aAAkB;QAC1B,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAExB,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,OAAO;QACL,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC;IACrD,CAAC;IAED;;;OAGG;IACH,gBAAgB,CAAC,KAAc,EAAE,KAAa;QAC5C,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACxD,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QAE7D,2BAA2B;QAC3B,IAAI,KAAK,EAAE;YACT,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B;aACI;YACH,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAE,CAAC;SAC1E;QACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAElC,2BAA2B;QAC3B,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QAC/D,KAAI,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAE,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;YACjD,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAErC,IAAG,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACtC,cAAc,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC1B,MAAM;aACP;SACF;QACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QACtC,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjC,CAAC;IAEA;;MAEE;IACD,uBAAuB;QACrB,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,OAAO;SACR;QAED,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACtD,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QAE/D,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC;YACjC,SAAS,EAAE;gBACT,YAAY,EAAE;oBACZ,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC;iBAC9C;aACF;YACD,OAAO,EAAE;gBACP,YAAY,EAAE;oBACZ,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC;iBAC9C;aACF;SACF,CAAC,CAAC;IACL,CAAC;IACH;;OAEG;IACH,WAAW,CAAC,KAAU;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,IAAI,CAAC,CAAC,CAAC,KAAK,YAAY,iDAAW,CAAC;gBAClC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,iDAAW,CAAC,CAAC;gBAC3C,CAAC,CAAC,KAAK,YAAY,+CAAS,CAAC;oBAC3B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,+CAAS,CAAC,CAAC,CAAC;gBAC5C,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,IAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAS,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACnE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5B,MAAM;aACP;SACF;IACH,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,YAAiB,EAAE,MAAW;QACzC,aAAa;QACb,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;QAC5D,OAAO,8CAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,KAAU;QACnB,OAAO,+CAAS,CAAC;YACf,SAAS,EAAE,iBAAiB;YAC5B,IAAI,EAAE,gCAAgC,KAAK,8DAA8D;YACzG,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAClB,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACpB,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;SACtB,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,UAAkB;QAC/B,OAAO,+CAAS,CAAC;YACf,SAAS,EAAE,iBAAiB;YAC5B,IAAI,EAAE,0FAA0F,GAAG,UAAU,GAAG,yCAAyC;YACzJ,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAClB,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SACrB,CAAC,CAAC;IACL,CAAC;IACD;;OAEG;IAEH,YAAY,CAAC,KAAU;QACrB,mDAAmD;QACnD,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC3D,MAAM,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACvE,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QACtD,MAAM,WAAW,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC,cAAc,CAAC,CAAC;QAC1D,IAAI,GAAG,CAAC;QACR,IAAI,WAAW;YAAE,GAAG,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;QAE7C,MAAM,eAAe,GAAG;YACtB,GAAG,EAAE,iBAAiB;YACtB,KAAK,EAAE,GAAG;SACX;QACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACvC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,mEAAc,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,OAAY,EAAE,KAAU;QACpC,mBAAmB;QACnB,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;QAE3C,IAAI,YAAY,GAAG,EAAE,CAAC;QAEtB,IAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,IAAI,QAAQ,EAAE;YAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;YAE5D,YAAY,GAAG,OAAO;gBACtB,kCAAkC,GAAG,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,iBAAiB;gBAC9E,QAAQ,CAAC;SACV;aACI;YACH,YAAY,GAAG,OAAO;gBACtB,kCAAkC,GAAG,OAAO,GAAG,YAAY;gBAC3D,QAAQ,CAAC;SACV;QAED,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAE9B,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YAC1C,OAAO,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;SAC9D;QAED,4BAA4B;QAC5B,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;YACrB,gBAAgB;YAChB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;YAC5D,sBAAsB;YACtB,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC1C,OAAO,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;YAE7D,IAAI,KAAK,IAAI,CAAC,EAAE;gBACd,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;gBACtC,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAChD,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAExB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC;aACvC;iBAAM;gBACL,kDAAkD;gBAClD,IAAG,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,EAAE;oBAC/B,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;oBACtD,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;oBAE/D,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBAC/C,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;oBAEtC,MAAM,MAAM,GAAG;wBACb,GAAG,EAAE,OAAO,CAAC,UAAU,CAAC,GAAG;wBAC3B,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,EAAE;wBAC3B,KAAK,EAAE,KAAK;qBACb,CAAC;oBACF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAE7B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACnC,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC;iBACvC;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;iBACjC;aACF;QACH,CAAC,CAAC,CAAC;QAEH,gCAAgC;QAChC,KAAK,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;YAExB,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC1C,OAAO,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,IAAI,KAAK,IAAI,CAAC,EAAE;gBACd,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAC9D;YAED,KAAK,CAAC,UAAU,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,iCAAiC;QACjC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE;YACzB,KAAK,CAAC,SAAS,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,IAAS;QACnB,IAAI,IAAI,CAAC,EAAE,IAAI,GAAG,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO;SACR;QAED,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC;QAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QAC7B,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;YAClE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC1B,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,8CAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAAE,SAAS;YAChD,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,GAAG,KAAK;gBAAE,KAAK,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,KAAK;gBAAE,KAAK,GAAG,CAAC,CAAC;YACzB,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;YAC5C,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACZ;QAED,IAAI,QAAQ,GAAQ,EAAE,CAAC;QACvB,QAAQ,CAAC,GAAG,GAAG,KAAK,CAAC;QACrB,QAAQ,CAAC,GAAG,GAAG,KAAK,CAAC;QACrB,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7D,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC/C,CAAC;IAED,yBAAyB;QACvB,IAAG,IAAI,CAAC,oBAAoB,IAAI,SAAS;YAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAC7F,CAAC;IAED;;OAEG;IACH,iBAAiB,CAAC,UAAe;QAC/B,MAAM,UAAU,GAAG,EAAE,CAAC;QACtB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAC9B,MAAM,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAC9B,UAAU,CAAC,IAAI,CAAC,8CAAQ,CAAC,CAAC,GAAG,EAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;SACtL;QAAA,CAAC;QAEF,IAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC3B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC/C,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5C;YAAA,CAAC;YACF,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC;YAAA,CAAC;SACH;aAAM;YACL,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC;YAAA,CAAC;SACH;IACH,CAAC;IAAA,CAAC;IAEF;;OAEG;IACH,kBAAkB;QAChB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC/C,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5C;QAAA,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAAA,CAAC;IAEF;;OAEG;IACH,aAAa;QACX,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;QAC1E,uCAAuC;QACvC,IAAG,oBAAoB,IAAI,QAAQ,EAAE;YACnC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACzC,IAAI,CAAC,OAAO,GAAG,iEAAmB;YAClC,kDAAkD;YAClD,MAAM,qBAAqB,GAAQ,EAAE,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,GAAO,EAAE,EAAE;gBAC5C,YAAY;gBACZ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAW,EAAE,EAAE;oBAC7C,IAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC,8CAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;wBACpE,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACpC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE;gBAClD,OAAO;oBACL,MAAM,EAAE,SAAS;oBACjB,UAAU,EAAE;wBACV,MAAM,EAAE,OAAO;wBACf,aAAa,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;qBAC9B;oBACD,YAAY,EAAE,CAAC;iBAChB;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,oCAAoC;YACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE;gBAC/E,4BAA4B;gBAC5B,IAAG,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;oBACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;oBAC9D,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,8CAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;iBAChI;gBAAA,CAAC;gBACF,OAAO;oBACL,MAAM,EAAE,SAAS;oBACjB,UAAU,EAAE;wBACV,MAAM,EAAE,OAAO;wBACf,aAAa,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC;qBAC9B;oBACD,YAAY,EAAE,CAAC;iBAChB;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,OAAO,GAAG,+CAAS,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACzC,CAAC;;wEA1nBU,YAAY;4FAAZ,YAAY;;;;;;QC3BzB,uEAA6B;;;;;;;;;;;;;;ACA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACA;AACqB;AAClC;AAEe;AACU;AACvB;AAEA;AACK;AAEe;AACS;AAEtB;AACK;AACiB;AACG;AACR;AACH;AACG;AACD;AACO;AACiB;;;AA2CvF,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FAbb;QACT,gEAAc;QACd;YACI,OAAO,EAAE,6DAAe;YACxB,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,CAAC,gEAAc,CAAC;YACtB,UAAU,EAAE,CAAC,OAAuB,EAAE,EAAE;gBACpC,OAAO,GAAG,EAAE;oBACR,OAAO,OAAO,CAAC,IAAI,EAAE,CAAC;gBAC1B,CAAC,CAAC;YACN,CAAC;SACJ;KACF,YApBQ;YACP,uEAAa;YACb,0DAAW;YACX,yEAAsB;YACtB,4FAAuB;YACvB,4DAAgB;YAChB,mFAA2B,CAAC,OAAO,EAAE;SACtC;mIAgBU,SAAS,mBArClB,2DAAY;QACZ,mEAAa;QACb,wEAAY;QACZ,yFAAiB;QACjB,4FAAkB;QAClB,+EAAe;QACf,yFAAkB;QAClB,oFAAgB;QAChB,iFAAe;QACf,oFAAgB;QAChB,mFAAgB;QAChB,0FAAkB;QAClB,2GAAuB,aAGvB,uEAAa;QACb,0DAAW;QACX,yEAAsB;QACtB,4FAAuB;QACvB,4DAAgB;;;;;;;;;;;;;ACjDpB;AAAA;AAAA;AAAyH;AAElH,MAAM,SAAS;IAMpB,YAAY,MAAyB;QACnC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,yBAAyB;IACzB,IAAI;QACF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;YAC7B,OAAO;SACR;QAED,MAAM,IAAI,GAAG,IAAI,CAAC;QAElB,+CAA+C;QAC/C,8CAAK,CAAC,QAAQ,CAAC,qDAAY,EAAE,oDAAW,EAAE,uDAAc,EAAE,sDAAa,EAAE,oDAAW,EAAE,+CAAM,EAAE,gDAAO,CAAC,CAAC;QACvG,8CAAK,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;QAEjC,IAAI,CAAC,KAAK,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,MAAM,EAAE;YAClC,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE;gBACP,OAAO,EAAE;oBACP,MAAM,EAAE;wBACN,OAAO,EAAE,IAAI;wBACb,QAAQ,EAAE,KAAK;wBACf,MAAM,EAAE;4BACN,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;qBACF;oBACD,KAAK,EAAE;wBACL,OAAO,EAAE,KAAK;wBACd,IAAI,EAAE,OAAO;qBACd;oBACD,OAAO,EAAE;wBACP,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,KAAK;qBACjB;iBACF;gBACD,QAAQ,EAAE;oBACR,KAAK,EAAE;wBACL,MAAM,EAAE,CAAC;qBACV;iBACF;gBACD,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE;oBACL,IAAI,EAAE,SAAS;oBACf,SAAS,EAAE,IAAI;iBAChB;gBACD,MAAM,EAAE;oBACN,CAAC,EAAE;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;4BACD,qCAAqC;4BACrC,QAAQ,EAAE,UAAS,KAAK,EAAE,KAAK,EAAE,KAAK;gCAClC,IAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS;oCAAE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;4BAClH,CAAC;yBACF;qBACF;oBACD,CAAC,EAAE;wBACD,OAAO,EAAE,IAAI;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;wBACD,KAAK,EAAE;4BACL,OAAO,EAAE,KAAK;4BACd,IAAI,EAAE,GAAG;4BACT,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;qBACF;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,mDAAmD;IACnD,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;IAClD,CAAC;IAED,+DAA+D;IAC/D,SAAS,CAAC,KAAU;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/C,CAAC;IAED,SAAS,CAAC,KAAU;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/C,CAAC;IAED,iDAAiD;IACjD,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IAC7C,CAAC;IACD,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IAC7C,CAAC;IAED,8CAA8C;IAC9C,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;IACnD,CAAC;IACD,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;IACnD,CAAC;IAED,SAAS,CAAC,MAAW;QACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzC,CAAC;IAGD,aAAa,CAAC,MAAc,EAAE,KAAa,EAAE,IAAS,EAAE,OAAY,SAAS;QAC3E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACjD,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAG,IAAI,EAAE;YACP,KAAK,GAAG,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG;SACnC;aAAM;YACL,KAAK,GAAG,MAAM;SACf;QAAA,CAAC;QACF,MAAM,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC;QACrE,IAAI,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;SAC1B;aACI;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,MAAM,OAAO,GAAG;gBACd,KAAK,EAAE,KAAK;gBACZ,eAAe,EAAE,KAAK;gBACtB,WAAW,EAAE,KAAK;gBAClB,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,KAAK;aACZ,CAAC;YAEF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,aAAa,CAAC,MAAc,EAAE,KAAa;QACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEjD,MAAM,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC;QACrE,IAAI,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SACrB;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9K4D;AAK8E;;;;AAKpI,MAAM,UAAU;IAWrB,YAAmB,MAAqB,EAAS,KAAkB;QAAhD,WAAM,GAAN,MAAM,CAAe;QAAS,UAAK,GAAL,KAAK,CAAa;QATnE,kBAAkB;QAClB,eAAU,GAAW,qEAAW,CAAC,OAAO,CAAC;QACzC,eAAe;QACf,cAAS,GAAW,GAAG,qEAAW,CAAC,OAAO,QAAQ;QAClD,aAAa;QACb,cAAS,GAAW,GAAG,qEAAW,CAAC,OAAO,WAAW,CAAC;QACtD,cAAc;QACd,eAAU,GAAW,uBAAuB;IAE0B,CAAC;IAEvE,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,qEAAW,CAAC,OAAO,CAAC;QACtC,eAAe;QACf,IAAI,CAAC,SAAS,GAAG,GAAG,qEAAW,CAAC,OAAO,QAAQ;QAC/C,aAAa;QACb,IAAI,CAAC,SAAS,GAAG,GAAG,qEAAW,CAAC,OAAO,WAAW,CAAC;IACrD,CAAC;IAGD,UAAU;QACR,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACnD,MAAM,QAAQ,GAAG;YACf,GAAG,EAAE,UAAU;YACf,KAAK,EAAE,EAAE,GAAG,CAAC;SACd;QACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAEhC,OAAO,EAAE,CAAC;IACZ,CAAC;IAEK,MAAM;;YACV,cAAc;YACd,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,iBAAiB;YAClD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAEnC,IAAI;gBACF,wBAAwB;gBACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,OAAO,EAAE;oBACpC,MAAM,EAAE,KAAK;iBACd,CAAC,CAAC;gBACH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;aAC9B;YAAC,OAAO,CAAC,EAAE;gBACT,OAAO,EAAE,CAAC;aACZ;QACH,CAAC;KAAA;IAEK,SAAS;;YACb,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;gBAC5C,MAAM,EAAE,KAAK;aACd,CAAC,CAAC;YAEH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;KAAA;IAED;;OAEG;IACG,SAAS,CAAC,OAAe,MAAM;;YAEnC,IAAI,MAAM,GAAG,IAAI,uEAAa,EAAE,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;YAEtB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;YAE3C,cAAc;YACd,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,kBAAkB;aACnC,CAAC;YAEF,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC3C,MAAM,EAAE,MAAM;gBACd,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;aAC7B,CAAC,CAAC;YAEH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;KAAA;IAED;;OAEG;IACG,aAAa;;YACjB,IAAI,IAAI,GAAG,IAAI,uEAAa,CAAC,EAAE,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAE/B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YAE7C,cAAc;YACd,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,kBAAkB;aACnC,CAAC;YAEF,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC3C,MAAM,EAAE,MAAM;gBACd,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC3B,CAAC,CAAC;YAEH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;KAAA;IAED;;OAEG;IACG,YAAY;;YAChB,IAAI,IAAI,GAAG,IAAI,uEAAa,CAAC,EAAE,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAE/B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YAE5C,cAAc;YACd,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,kBAAkB;aACnC,CAAC;YAEF,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC3C,MAAM,EAAE,MAAM;gBACd,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC3B,CAAC,CAAC;YAEH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;KAAA;IAED;;OAEG;IACG,cAAc,CAAC,QAAe,EAAE,IAAW;;YAC/C,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;YAE1E,IAAI,KAAK,GAAG,IAAI,sEAAY,EAAE,CAAC;YAE/B,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC3B,KAAK,CAAC,UAAU,CAAC,GAAI,UAAU,CAAC;YAChC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAEhC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACpB,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC/B;YACD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;YAED,mCAAmC;YACnC,IAAG,oBAAoB,IAAI,QAAQ,EAAG;gBACpC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC7B,KAAK,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;aAC1B;YAED,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YAE9C,cAAc;YACd,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,kBAAkB;aACnC,CAAC;YACF,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC3C,MAAM,EAAE,MAAM;gBACd,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;aAC5B,CAAC,CAAC;YACH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;KAAA;IAED;;OAEG;IACG,eAAe,CAAC,QAAe,EAAE,IAAW,EAAE,MAAyB,EAAE,MAAW,EAAE,MAAc,EAAE,OAAY,SAAS;;YAC/H,IAAI,KAAK,GAAG,IAAI,sEAAY,EAAE,CAAC;YAC/B,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACpB,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC/B;YACD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;YAED,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAChC,IAAG,MAAM,IAAI,OAAO,EAAE;gBACpB,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC5B,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;gBAChC,KAAK,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;aACpC;iBAAM;gBACL,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC3B,KAAK,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;gBACzB,IAAI,IAAI,GAAG,EAAE,EAAE;oBACb,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAC,SAAS,CAAC,CAAC;iBACvC;qBAAM;oBACL,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBAC7B;aACF;YAED,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;YAE/C,cAAc;YACd,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,kBAAkB;gBAClC,UAAU,EAAE,MAAM;aACnB,CAAC;YACF,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC3C,MAAM,EAAE,MAAM;gBACd,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;aAC5B,CAAC,CAAC;YAEH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;KAAA;IAED;;OAEG;IACG,gBAAgB,CAAC,QAAe,EAAE,IAAW,EAAE,MAAyB,EAAE,SAAc,SAAS,EAAE,MAAc;;YACrH,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YAC/D,IAAI,KAAK,GAAG,IAAI,sEAAY,EAAE,CAAC;YAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACnD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAEnD,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAEhC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACpB,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC/B;YACD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;YACD,mCAAmC;YACnC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAEhC,IAAG,MAAM,IAAI,OAAO,EAAE;gBACpB,KAAK,CAAC,UAAU,CAAC,GAAG,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,UAAU,EAAC,IAAI,EAAE,GAAG,EAAC,OAAO,EAAC,CAAC;gBAC5F,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC;gBAC5B,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;aACjC;iBAAM;gBACL,KAAK,CAAC,UAAU,CAAC,GAAG,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,UAAU,EAAC,IAAI,EAAC,CAAC;gBAC/E,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAC3B,KAAK,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;gBACzB,IAAG,OAAO,GAAG,CAAC,IAAI,MAAM,KAAK,SAAS,EAAE;oBACtC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;oBAC5C,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC7B;aACF;YAED,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;YAEhD,cAAc;YACd,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,kBAAkB;gBAClC,UAAU,EAAE,MAAM;aACnB,CAAC;YACF,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE;gBAC3C,MAAM,EAAE,MAAM;gBACd,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;aAC5B,CAAC,CAAC;YACH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;KAAA;IAED;;OAEG;IACG,iBAAiB,CAAC,MAAW,EAAE,KAAa,EAAE,EAAU,EAAE,EAAU,EAAE,OAAe;;YACzF,IAAI,KAAK,GAAG,IAAI,uEAAa,EAAE,CAAC;YAEhC,IAAK,OAAO,IAAI,CAAC,EAAG;gBAClB,KAAK,CAAC,MAAM,CAAC,GAAG,aAAa,CAAC;gBAC9B,aAAa;gBACb,KAAK,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;gBACzB,aAAa;gBACb,uBAAuB;aACxB;YAED,IAAG,MAAM,KAAK,cAAc,EAAE;gBAC5B,aAAa;gBACb,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;aACxB;iBAAM;gBACL,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;aAC1B;YAED,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;YACvB,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACpB,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;YAEjD,cAAc;YACd,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,kBAAkB;gBAClC,UAAU,EAAE,MAAM;aACnB,CAAC;YAEF,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE;gBACjD,MAAM,EAAE,MAAM;gBACd,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;aAC5B,CAAC,CAAC;YAEH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAE/B,CAAC;KAAA;IAED;;MAEE;IACI,iBAAiB,CAAC,MAAW,EAAE,KAAa,EAAE,EAAU,EAAE,EAAU,EAAE,KAAa,EAAE,OAAe,EAAE;;YAC1G,IAAI,KAAK,GAAG,IAAI,2EAAiB,EAAE,CAAC;YACpC,mGAAmG;YACnG,uHAAuH;YACvH,KAAK,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;YACzB,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;YACvB,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACpB,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAClB,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;YACvB,IAAG,IAAI,IAAI,cAAc,EAAE;gBACzB,aAAa;gBACb,KAAK,CAAC,MAAM,CAAC,GAAG,cAAc;aAC/B;YACD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;YAEjD,cAAc;YACd,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,kBAAkB;gBAClC,UAAU,EAAE,MAAM;aACnB,CAAC;YAEF,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE;gBACjD,MAAM,EAAE,MAAM;gBACd,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;aAC5B,CAAC,CAAC;YAEH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;KAAA;IACD;;OAEG;IACI,gBAAgB,CAAC,OAAY,EAAE,KAAa,EAAE,EAAU,EAAE,EAAU,EAAE,OAAe;;YAC1F,IAAI,KAAK,GAAG,IAAI,0EAAgB,EAAE,CAAC;YAEnC,IAAK,OAAO,IAAI,CAAC,EAAG;gBAClB,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;aACxB;YAED,IAAK,OAAO,GAAG,CAAC,EAAE;gBAChB,KAAK,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;aAC5B;YACD,KAAK,CAAC,MAAM,CAAC,GAAG,cAAc,CAAC;YAC/B,KAAK,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC;YAC7B,KAAK,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC;YACxB,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;YACvB,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YACpB,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;YAEhD,cAAc;YACd,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,kBAAkB;gBAClC,UAAU,EAAE,MAAM;aACnB,CAAC;YAEF,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE;gBACjD,MAAM,EAAE,MAAM;gBACd,OAAO;gBACP,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;aAC5B,CAAC,CAAC;YAEH,OAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;KAAA;;oEA5XU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT2E;AAMvD;AACT;AACP;;;;;;;;ICQR,6EAC0B;IACtB,uDACJ;IAAA,4DAAS;;;IAFL,iFAAqB;IACrB,0DACJ;IADI,0FACJ;;ADJT,MAAM,kBAAkB;IAiC7B,YAAmB,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QA7B9B,4BAAuB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAClD,oBAAe,GAAG,IAAI,0DAAY,EAAO,CAAC;QAC1C,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;QACvC,wBAAmB,GAAG,IAAI,0DAAY,EAAO,CAAC;QAC9C,wBAAmB,GAAG,IAAI,0DAAY,EAAE,CAAC;QACnD,kCAAkC;QAC1B,aAAQ,GAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAGtE,kBAAa,GAAQ,EAAE,CAAC;QAExB,eAAU,GAAQ,kDAAkB,CAAC,kDAAkB,CAAC,CAAC;QACzD,kBAAa,GAAU,EAAE,CAAC;QAElC,8BAA8B;QACvB,mBAAc,GAAW,UAAU,CAAC;QACpC,iBAAY,GAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAC5E,qBAAgB,GAAQ;YAC7B,eAAe,EAAE,KAAK;YACtB,cAAc,EAAE,EAAE;YAClB,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,OAAO;YAClB,cAAc,EAAE,KAAK;YACrB,WAAW,EAAE,KAAK;YAClB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,KAAK;SACzB,CAAC;QACK,mBAAc,GAAU,EAAE,CAAC;IAEU,CAAC;IAE7C,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,oBAAoB;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,oDAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE;YACxE,QAAQ,EAAE,CAAC,MAAgB,EAAE,EAAE;gBAC7B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;oBACvB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBAC5B;qBAAM;oBACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAChC;YACH,CAAC;YACD,UAAU,qBAA4B;YACtC,aAAa,EAAE;gBACb,SAAS,EAAE,KAAK;aACjB;SACF,CAAC,CAAC;QACH,kDAAkD;QAClD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,EAAE;YACrC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,mBAAmB,CAAC,EAAU,EAAE,KAAc,EAAE,YAAiB;;YACrE,IAAG,KAAK,EAAE;gBACR,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,YAAY,EAAC,CAAC,CAAC;aAC3D;iBAAM;gBACL,MAAM,gBAAgB,GAAG,EAAE,CAAC;gBAC5B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACjD,IAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;wBAClC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC9C;iBACF;gBACD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,EAAE;oBAClC,OAAO,wBAAwB,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC;aACvC;YACD,IAAG,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;gBACjC,mDAAmD;gBACnD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAE,CAAC;gBACrE,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC;gBAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM;gBACL,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAEhD,oCAAoC;gBACpC,MAAM,IAAI,GAAG,IAAI,4CAAI,EAAE,CAAC;gBACxB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACjC,MAAM,UAAU,GAAwB,EAAE,CAAC;gBAC3C,MAAM,QAAQ,GAA8B,EAAE,CAAC;gBAE/C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;oBAChC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBAClC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnD,QAAQ,CAAC,IAAI,CAAC;wBACZ,UAAU;wBACV,KAAK;qBACN,CAAC,CAAC;iBAEJ;gBAED,IAAI,CAAC,OAAO,GAAG,IAAI,kDAAiB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;gBAE3D,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAE3C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;aACzB;QACH,CAAC;KAAA;IAED,kDAAkD;IAClD,YAAY,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5E,CAAC;IAED,WAAW,CAAC,gBAAqB;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC;QAC9C,aAAa;QACb,MAAM,GAAG,GAAG,yCAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC;QAEnE,IAAI,gBAAgB,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,GAAG,CAAC,OAAO,EAAE,CAAE,CAAC;SACzC;aACI;YACH,IAAI,CAAC,UAAU,CAAC,MAAM,CAAE,GAAG,CAAE,CAAC;SAC/B;QAED,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAM,EAAE,eAAoB,EAAE,UAAe,EAAE,EAAE;YAC/E,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,QAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAW,CAAC;YACrE,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/C,IAAI,UAAU,KAAK,CAAC;gBAAE,OAAO,KAAK,CAAC;iBAC9B,IAAG,UAAU;gBAAE,OAAO,wBAAwB,CAAC;;gBAC/C,OAAO,KAAK,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,CAAM;QACf,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,OAAO,MAAM,CAAC;SACf;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,KAAU;QACvB,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC;QACpE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAE9B,IAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,EAAE;YAC9B,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC;SACzC;aAAM;YACL,iBAAiB,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC;SACzC;QAED,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IACtC,CAAC;IAED,aAAa,CAAC,KAAU,EAAE,KAAc;QACtC,IAAG,KAAK,EAAE;YACR,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;SAChC;aAAM;YACL,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClD,IAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE;oBAC9C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAClC;aACF;YACD,IAAG,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;aAC1B;iBAAM;gBACJ,QAAQ,CAAC,cAAc,CAAC,0BAA0B,CAAsB,CAAC,KAAK,GAAG,IAAI,CAAC;gBACvF,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;aAClC;SACF;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;IACpE,CAAC;IAED,kBAAkB;QAChB,KAAI,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;SAC9E;IACH,CAAC;IAED,qBAAqB,CAAC,KAAU;QAC9B,IAAG,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,EAAE;YAC9B,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;SAChC;IACH,CAAC;IAED,UAAU,CAAC,OAAY;QACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjD,IAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,KAAK;gBAAE,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAChG;IACH,CAAC;IAED,SAAS,CAAC,IAAS;QACjB,MAAM,cAAc,GAAU,EAAE,CAAC;QACjC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE;YAAE,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxE,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC7C,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3C;SACF;QACD,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,kBAAkB;QAChB,0CAA0C;QAC1C,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC1B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC1B,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACvB;SACF;QAED,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzG;IACH,CAAC;;oFAnOU,kBAAkB;kGAAlB,kBAAkB;;;;;;QCf/B,yEAAyE;QAAvC,qJAAa,wBAAwB,IAAC;QACpE,uEAA4D;QAC5D,yEAAoJ;QAChJ,yEAAoD;QAChD,6FAMiD;QADjD,uKAAY,0BAA2B,IAAI,CAAC,IAAC,mHAC/B,0BAA2B,KAAK,CAAC,IADF;QAE7C,4DAA0B;QAC9B,4DAAM;QACN,yEAAoD;QAChD,4EAA0K;QAAvC,kJAAU,0BAA2B,IAAC;QACrK,4EAA4C;QAAA,mEAAQ;QAAA,4DAAS;QAC7D,sHAGS;QACb,4DAAS;QACb,4DAAM;QACN,0EAAsD;QAClD,8EAAwF;QAAvC,mJAAU,0BAA2B,IAAC;QACnF,8EAAkB;QAAA,mEAAO;QAAA,4DAAS;QAClC,8EAAkB;QAAA,+DAAG;QAAA,4DAAS;QAC9B,8EAAkB;QAAA,+DAAG;QAAA,4DAAS;QAClC,4DAAS;QACb,4DAAM;QACN,0EAAsD;QAClD,8EAA+F;QAA9C,mJAAU,iCAAkC,IAAC;QAC1F,8EAAoB;QAAA,+DAAG;QAAA,4DAAS;QAChC,8EAAyB;QAAA,gEAAI;QAAA,4DAAS;QAC1C,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA/BM,0DAAkB;QAAlB,2EAAkB;QASV,0DAAgC;QAAhC,wFAAgC;QAEV,0DAAiB;QAAjB,uFAAiB;;;;;;;;;;;;;;AChB3D;AAAA;AAAA;AAAuH;AAGhH,MAAM,QAAQ;IAiBnB,YAAY,MAAyB;QAX9B,cAAS,GAAQ,EAAE,CAAC;QACpB,gBAAW,GAAQ,EAAE,CAAC;QACtB,eAAU,GAAQ,EAAE,CAAC;QACrB,SAAI,GAAQ,SAAS,CAAC;QACtB,iBAAY,GAAQ,EAAE,CAAC;QACvB,SAAI,GAAQ,SAAS,CAAC;QAEtB,eAAU,GAAW,CAAC,CAAC;QACvB,gBAAW,GAAW,CAAC,CAAC;QACxB,oBAAe,GAAQ,EAAE,CAAC;QAG/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,yBAAyB;IACzB,IAAI;QACF,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;YAC7B,OAAO;SACR;QAED,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,eAAe,GAAG,CAAC,YAAgB,EAAE,EAAE;YAC3C,IAAG,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;gBAC1C,YAAY;gBACZ,MAAM,EAAE,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;gBAChE,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5C;iBAAM;gBACL,MAAM,EAAE,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC9C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC;QACF,gDAAgD;QAChD,8CAAK,CAAC,QAAQ,CAAC,qDAAY,EAAE,sDAAa,EAAE,mDAAU,EAAE,sDAAa,EAAE,oDAAW,EAAE,+CAAM,EAAE,gDAAO,CAAC,CAAC;QACrG,8CAAK,CAAC,QAAQ,CAAC,SAAS,GAAG,KAAK,CAAC;QAEjC,0BAA0B;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,8CAAK,CAAC,IAAI,CAAC,MAAM,EAAE;YAClC,IAAI,EAAE,KAAK;YACX,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;aACb;YACD,OAAO,EAAE;gBACP,OAAO,EAAE;oBACP,OAAO,EAAE;wBACP,SAAS,EAAE;4BACT,KAAK,EAAE,eAAe;yBACvB;qBACF;oBACD,MAAM,EAAE;wBACN,OAAO,EAAE,IAAI;wBACb,QAAQ,EAAE,KAAK;wBACf,MAAM,EAAE;4BACN,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;qBACF;oBACD,KAAK,EAAE;wBACL,OAAO,EAAE,KAAK;qBACf;iBACF;gBACD,UAAU,EAAE,IAAI;gBAChB,MAAM,EAAE;oBACN,CAAC,EAAE;wBACD,OAAO,EAAE,IAAI;wBACb,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;4BACD,QAAQ,EAAE,KAAK;4BACf,qCAAqC;4BACrC,QAAQ,EAAE,UAAS,KAAK,EAAE,KAAK,EAAE,KAAK;gCACpC,IAAG,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;oCAC1C,YAAY;oCACZ,MAAM,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;oCACnC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;iCAC5C;qCAAM;oCACL,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;iCACxC;4BACH,CAAC;yBACF;qBACF;oBACD,CAAC,EAAE;wBACD,OAAO,EAAE,IAAI;wBACb,KAAK,EAAE;4BACL,OAAO,EAAE,IAAI;4BACb,IAAI,EAAE,oBAAoB;4BAC1B,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;wBACD,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,EAAE;6BACT;yBACF;qBACF;iBACF;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,oDAAoD;IACpD,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;IAClD,CAAC;IAED,sCAAsC;IACtC,SAAS,CAAC,KAAU;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/C,CAAC;IAED,sCAAsC;IACtC,SAAS,CAAC,KAAU;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/C,CAAC;IAED,0BAA0B;IAC1B,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IAC7C,CAAC;IAED,0BAA0B;IAC1B,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IAC7C,CAAC;IAED,uCAAuC;IACvC,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;IACnD,CAAC;IAED,uCAAuC;IACvC,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;IACnD,CAAC;IAED,uCAAuC;IACvC,SAAS,CAAC,MAAW;QACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzC,CAAC;IAED,aAAa,CAAC,MAAa,EAAE,KAAa,EAAE,IAAS,EAAE,OAAY,SAAS,EAAE,UAAe,SAAS;QACpG,IAAG,OAAO,KAAK,SAAS;YAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEjD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE5D,IAAG,IAAI,CAAC,IAAI,GAAG,EAAE,EAAE;YACjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC7C,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrD,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC3D,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;oBACtC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;iBAC5B;aACF;SACF;QAGD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACjD,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAG,IAAI,EAAE;YACP,KAAK,GAAG,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG;SACnC;aAAM;YACL,KAAK,GAAG,MAAM;SACf;QAAA,CAAC;QACF,MAAM,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC;QACrE,IAAI,EAAE,IAAI,CAAC,EAAE;YACX,IAAG,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;gBAC1C,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aACnE;iBAAM;gBACL,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;aAC1B;SACF;aACI;YACH,MAAM,OAAO,GAAG;gBACd,KAAK,EAAE,KAAK;gBACZ,eAAe,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK;gBAC5H,WAAW,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK;gBACxH,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;gBACtG,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,MAAM;aACd,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1E,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,SAAS,CAAC;QACxC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,IAAS;QAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACjD,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,cAAc,CAAC,KAAa,EAAE,MAAc,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACjD,IAAG,GAAG,GAAG,CAAC,CAAC,EAAE;YACX,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;YAC3B,IAAG,KAAK,KAAK,SAAS,EAAE;gBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7B;SACF;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1E,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,SAAS,CAAC;QACxC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,cAAc;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACjD,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1E,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,SAAS,CAAC;QACxC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,iBAAiB;QACf,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAG;YAC9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACzC;SACF;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACvB;QAGD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACjD,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1E,QAAQ,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,SAAS,CAAC;QACxC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,SAAS,CAAC;QACpC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,aAAa,CAAC,MAAa,EAAE,KAAa;QACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEjD,MAAM,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,IAAI,KAAK,CAAC;QACrE,IAAI,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;YACtB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SACrB;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;IAED,WAAW,CAAC,QAAa;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,EAAU;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5E,CAAC;CACF;;;;;;;;;;;;;ACzRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AAI/F,iCAAiC;AACsC;AACtC;;;;;;;;ICA3B,4EAA2E;IAAA,uDAAY;IAAA,4DAAS;;;IAAxC,8EAAkB;IAAC,0DAAY;IAAZ,4EAAY;;;;IADzF,4EAA4G;IAAtC,0UAAqC;IACzG,4HAAgG;IAClG,4DAAS;;;IADmB,0DAAa;IAAb,+EAAa;;;;IAIvC,4EAAuJ;IAA/B,8TAA2B,CAAC,KAAE;IACpJ,mEAAsH;IACxH,4DAAS;;;IAFyC,2FAAgC;IAC7E,0DAA8E;IAA9E,oIAA8E;;;;IAEnF,6EAEsC;IAAtC,6UAAqC;IACnC,6EAAgC;IAAA,qEAAU;IAAA,4DAAS;IACnD,6EAAwB;IAAA,sEAAW;IAAA,4DAAS;IAC5C,6EAAuB;IAAA,iEAAM;IAAA,4DAAS;IACtC,6EAAwB;IAAA,kEAAO;IAAA,4DAAS;IAQxC,6EAAoB;IAAA,+DAAG;IAAA,4DAAS;IAChC,8EAAwB;IAAA,uEAAW;IAAA,4DAAS;IAC5C,8EAAwB;IAAA,mEAAO;IAAA,4DAAS;IAC1C,4DAAS;;;IAhBT,6GAAyD;;;;IAiBzD,4EAAkJ;IAA9B,6TAA0B,CAAC,KAAE;IAC/I,mEAAoH;IACtH,4DAAS;;;IAFyC,uFAA4B;IACzE,0DAA0E;IAA1E,gIAA0E;;ADnB9E,MAAM,iBAAiB;IAgC5B,YAAmB,MAAqB,EAAS,IAAiB;QAA/C,WAAM,GAAN,MAAM,CAAe;QAAS,SAAI,GAAJ,IAAI,CAAa;QA3BxD,oBAAe,GAAG,IAAI,0DAAY,EAAU,CAAC;QAI/C,WAAM,GAAQ,EAAE,CAAC;QAClB,YAAO,GAAQ,EAAE,CAAC;QACjB,YAAO,GAAQ,EAAE,CAAC;QAClB,uBAAkB,GAAQ,EAAE,CAAC;QAC7B,eAAU,GAAW,CAAC,CAAC;QACvB,gBAAW,GAAW,CAAC,CAAC;QAExB,gBAAW,GAAW,CAAC,CAAC;QAEzB,QAAG,GAAQ,EAAE,CAAC;QACb,gBAAW,GAAG;YACpB,MAAM,EAAE,YAAY;YACpB,OAAO,EAAE,aAAa;YACtB,MAAM,EAAE,QAAQ;YAChB,OAAO,EAAE,SAAS;YAClB,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,UAAU;YACpB,GAAG,EAAE,KAAK;YACV,OAAO,EAAE,aAAa;YACtB,OAAO,EAAE,SAAS;SACnB,CAAC;QAGA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;IACvD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,6CAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACxD,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QACvE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,UAAU,CAAC,YAAiB,EAAE,MAAc,EAAE,UAAkB,EAAE,IAAS,EAAE,OAAY,SAAS;QAChG,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,6BAA6B;QAC7B,KAAI,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACzC,yBAAyB;YACzB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;YAE5C,uCAAuC;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzD,IAAI,OAAO,CAAC;gBACZ,IAAG,IAAI,GAAG,EAAE,EAAE;oBACZ,OAAO,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9F;qBAAM;oBACL,OAAO,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC9C;gBACD,MAAM,OAAO,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEnD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;aACzE;YACD,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACrD,0CAA0C;YAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACpC,+BAA+B;YAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACzB,gCAAgC;YAChC,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SACnD;IACH,CAAC;IAED,SAAS,CAAC,IAAY,EAAE,OAAY,SAAS,EAAE,OAAY,SAAS;QAClE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;QAC1B,cAAc;QACd,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBACzB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACjC;iBACI;gBACH,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC;aACpD;YACA,oBAAoB;YACrB,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;gBACpD,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;oBAC3D,gBAAgB;oBAChB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;oBACxC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;iBAC1E;aACF;SACF;aAAM;YACH,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;YACtE,YAAY;YACZ,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;YACzD,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;gBACpD,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;oBAC3D,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;oBACxC,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnE,IAAI,OAAO,GAAG,EAAE,CAAC;oBACjB,IAAI,OAAO,GAAG,EAAE,CAAC;oBACjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACrC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAE,CAAC;wBACzD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC3B;oBACD,OAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,OAAO,CAAC,OAAO,EAAE,CAAC;oBAClB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;iBACpE;aACF;SACJ;IACH,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,MAAc,EAAE,KAAa;QACpD,YAAY;QACZ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SACzB;QACD,aAAa;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;QAEzC,YAAY;QACZ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SACzB;QACD,aAAa;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;IAC1C,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,MAAc,EAAE,KAAa,EAAE,IAAS,EAAE,IAAY;QAC7E,qBAAqB;QACrB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAE3C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QAErC,0CAA0C;QAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAEpC,+BAA+B;QAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEzB,gCAAgC;QAChC,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,8BAA8B;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QACxB,IAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,IAAI,QAAQ,CAAC,EAAE;YAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACzC;aAAM;YACL,0BAA0B;YAC1B,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;gBACpD,6BAA6B;gBAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;gBAExC,kCAAkC;gBAClC,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,KAAK,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBACjC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE;wBAClD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjB,CAAC,EAAE,CAAC,CAAC,CAAC;oBAEN,KAAK,IAAI,OAAO,CAAC;iBAClB;gBAED,uBAAuB;gBACvB,MAAM,IAAI,GAAQ,EAAE,CAAC;gBACrB,KAAK,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBACjC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;oBACf,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;wBAC/C,MAAM,MAAM,GAAG,EAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,EAAC,CAAC;wBAClE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;qBAC1B;oBAAA,CAAC;iBACH;gBACD,wCAAwC;gBACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;aACnC;SACF;IAGH,CAAC;IAED,iBAAiB,CAAC,IAAY;QAC5B,8BAA8B;QAC9B,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QAChD,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;YAC1B,6BAA6B;YAC7B,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACvD,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;gBACxB,kBAAkB;gBAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,KAAa,EAAE,EAAE;oBAC1C,wDAAwD;oBACxD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;wBACtE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;qBAC5D;gBACH,CAAC,CAAC,CAAC;gBAEH,mBAAmB;gBACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACtE;SACF;IACH,CAAC;IAED,YAAY,CAAC,IAAY,EAAE,IAAS,EAAE,IAAY;QAChD,6BAA6B;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QACvB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,iCAAiC;QACjC,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;YACpD,wBAAwB;YACxB,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE;gBAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,EAAE;oBACnD,IAAG,IAAI,CAAC,QAAQ,EAAE,EAAE;wBAClB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;4BACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBACjC;qBACF;yBAAM;wBACL,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;wBAC3E,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;4BAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;yBAC3B;qBACF;oBACD,OAAO,IAAI,CAAC;gBACd,CAAC,CAAC,CAAC;aACJ;SACF;QACD,mBAAmB;QACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACxD,IAAG,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,QAAQ;YAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC;IACnH,CAAC;IAED,aAAa,CAAC,KAAU;QACtB,MAAM,gBAAgB,GAAG;YACvB,GAAG,EAAE,kBAAkB;YACvB,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1B,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC;QACvC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC;IAClE,CAAC;IAED,oBAAoB,CAAC,GAAQ;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QACtD,YAAY;QACZ,OAAO,iEAAsB,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACxE,CAAC;IAED,WAAW,CAAC,KAAa,EAAE,GAAW,EAAE,OAAgB;QACtD,IAAG,OAAO,EAAE;YACV,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;YACnF,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;YACnF,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;SAC9C;IACH,CAAC;IAED,aAAa;QACX,MAAM,OAAO,GAAG,EAAE,CAAC;QACnB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvD,IAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;gBAC7E,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACjB;SACF;QAED,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC5E;QAED,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAK,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;QACzH,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IACpC,CAAC;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,WAAW,IAAI,KAAK,CAAC;QAE1B,IAAG,IAAI,CAAC,WAAW,IAAI,CAAC,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;YAC/C,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAC,EAAE,CAAC;YACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAC,EAAE,CAAC;YAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAC,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC;SACtF;QACD,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,WAAW;QACT,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IAC3C,CAAC;IAED,OAAO;QACL,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;IAClE,CAAC;;kFArUU,iBAAiB;iGAAjB,iBAAiB;;;;;;QCb9B,yEAAkB;QAChB,0EAGmB;QACjB,mHAES;QAET,yEAAsB;QACpB,mHAES;QACT,oHAiBS;QACT,mHAES;QACX,4DAAM;QACV,4DAAM;;QAjCJ,0DAAuE;QAAvE,wHAAuE;QAG5D,0DAAsB;QAAtB,iFAAsB;QAKpB,0DAAuC;QAAvC,iGAAuC;QAGvC,0DAAqB;QAArB,gFAAqB;QAkBrB,0DAAuC;QAAvC,iGAAuC;;;;;;;;;;;;;;;;;;;;AC/BP;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { thresholdFreedmanDiaconis } from 'd3';\n\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\nimport { Functionschart } from './functions-chart';\n\n@Component({\n  selector: 'app-functions-chart',\n  templateUrl: './functions-chart.component.html',\n  styleUrls: ['./functions-chart.component.css']\n})\nexport class FunctionsChartComponent implements OnInit {\n  // referência para o div do grafico\n  @ViewChild(\"functionsChart\", { static: true }) private functionsDiv!: ElementRef;\n\n  @Output() functionsParamChanged = new EventEmitter<any>();\n  @Output() functionsValueChanged = new EventEmitter<any>();\n  @Output() onItemSelected = new EventEmitter<any>();\n  @Output() onCombinedChange = new EventEmitter<any>();\n\n  constructor(public global: GlobalService, public util: UtilService) { }\n\n  private selectedServices: any[] = [];\n  // objeto do gráfico\n  public functionsChart: any;\n  //capitals select list\n  private selectedItems: any = [];\n  public selectedItemsRoot: any = [];\n  public selectedItemsRootSecondary: any = [];\n  private combinedSelection: any = {\n    pops: [],\n    services: []\n  }\n  private selectionLimit: number = 10;\n  //lista de cores\n  private drawColors: any = [\n    '#1F77B4', '#2CA02C', '#9467BD', '#8C564B', '#E377C2',\n    '#AEC7E8', '#98DF8A', '#C5B0D5', '#C49C94', '#F7B6D2'\n  ];\n  //lista de cores já usadas\n  private usedColors: any = [];\n  //multiselect\n  //configuração do multiselect para os servicos\n  public dropdownListServices: any = [];\n  public dropdownSettingsServices: any = {};\n  public multiSelectServicesPlaceholder = 'Estados';\n  //configuração do multiselect para os pops\n  public dropdownListPops: any = [];\n  public dropdownSettingsPops: any = {};\n  public dropdownListPopsSecondary: any = [];\n  public dropdownSettingsPopsSecondary: any = {};\n  public multiSelectPopsPlaceholder = 'Estados';\n  //configuração do multiselect para as combinacoes de servicos + pops adicionados ao grafico\n  public dropdownListCombined: any = [];\n  public dropdownSettingsCombined: any = {};\n  public multiSelectCombinedPlaceholder = 'Select';\n  public hasData = false;\n  private combinedData: any = [];\n  public combinedSelections: any = [];\n\n\n  ngOnInit(): void {\n    this.functionsChart = new Functionschart(this.functionsDiv.nativeElement);\n    this.setMultipleSelectConfiguration();\n    this.functionsChart.setCapitals(this.global.getGlobal('state_capitals').value.default);\n    this.functionsChart.setServices(this.global.getGlobal(\"services\").value.default);\n  }\n\n  updateFunctionsChartData(data: any, clicked: number) {\n    for(let i = 0; i < data.length; i++) {\n       this.updateUsedColors(true,this.drawColors[i]);\n    }\n    const selectedParam = this.global.getGlobal('functions_param').value;\n    this.functionsChart.clear();\n    this.functionsChart.updateData(data, this.drawColors, selectedParam);\n    this.functionsChart.setTitle(selectedParam, clicked);\n    this.functionsChart.render();\n  }\n\n  updateFunctionsCombinationsData(data: any) {\n    const selectedParam = this.global.getGlobal('functions_param').value;\n    this.functionsChart.clear();\n    this.functionsChart.updateCombinations(data, selectedParam);\n    this.functionsChart.setTitle(selectedParam, -1);\n    this.functionsChart.render();\n  }\n\n  onParamChange(event: any) {\n    const selectedParam = this.global.getGlobal('functions_param').value;\n    this.functionsChart.setConfig(event.target.value);\n    const functions_param = {\n      key: \"functions_param\",\n      value: event.target.value\n    };\n    (selectedParam == \"timeseries\") ? this.clearSeries() : this.functionsChart.clear();\n    this.global.setGlobal(functions_param);\n    this.isTimeSeriesSelected() ? this.selectionLimit = 30 : this.selectionLimit = 10;\n    if(this.shouldShowServices() && !this.isTimeSeriesSelected()) {\n      this.onItemSelected.emit(this.selectedItems)\n    } else if(!this.shouldShowServices() && this.hasData && !this.isTimeSeriesSelected()) {\n      this.onCombinedChange.emit(this.combinedData);\n    } else if(this.isTimeSeriesSelected()) {\n      this.clearSeries()\n      this.setMultipleSelectConfiguration();\n      this.setCombinedMultipleSelectConfiguration();\n    } else {\n      this.functionsValueChanged.emit();\n    }\n  }\n\n  onValueChange(event: any) {\n    const functions_value = {\n      key: \"functions_value\",\n      value: event.target.value,\n    };\n    this.clearSeries();\n    this.global.setGlobal(functions_value);\n    this.shouldShowMultiSelectors() ? this.selectionLimit = 30 : this.selectionLimit = 10;\n    this.setMultipleSelectConfiguration();\n    this.setCombinedMultipleSelectConfiguration();\n    if(!this.shouldShowServices() && !this.shouldShowMultiSelectors()) {\n      this.functionsValueChanged.emit();\n    }\n  }\n\n  onItemSelect(event: any, added: boolean) {\n    if(this.selectedItems.includes(event.cod)) {\n      const index = this.selectedItems.indexOf(event.cod);\n      this.selectedItems = this.selectedItems.filter((e:any) => e !== event.cod);\n      this.updateUsedColors(false, this.usedColors[index]);\n    } else {\n      this.selectedItems.push(event.cod);\n    };\n    this.onItemSelected.emit(this.selectedItems);\n  }\n\n  onCombinedSelect(event: any, from: string, added: boolean) {\n    if(from == 'pop') {\n      if (added) {\n        this.combinedSelection.pops.push(event.cod);\n      } else {\n        const index = this.combinedSelection.pops.indexOf(event.cod);\n        this.combinedSelection.pops.splice(index, 1);\n      }  \n    } else {\n      if (added) {\n        this.combinedSelection.services.push(event.cod);\n      } else {\n        const index = this.combinedSelection.services.indexOf(event.cod);\n        this.combinedSelection.services.splice(index, 1);\n      }  \n    }\n  }\n\n  onPopValueChange() {\n    this.functionsChart.clear();\n    if(this.hasData) this.onCombinedChange.emit(this.combinedData);\n    if(this.isPopSelected() && this.isTimeSeriesSelected && this.isCapitalSelected) this.onItemSelected.emit(this.selectedItems);\n  }\n\n  addDataCombinations() {\n    //adiciona data para quando não é a timeseries selecionada\n    if(this.combinedSelection.pops.length > 0 && this.combinedSelection.services.length > 0) {\n      const services = this.global.getGlobal(\"services\").value.default;\n      const capitals = this.global.getGlobal(\"state_capitals\").value.default;\n      this.combinedData = [];\n      if(!this.isTimeSeriesSelected()) {\n        for(let i = 0; i < this.combinedSelection.pops.length; i++) {\n          for(let j = 0; j < this.combinedSelection.services.length; j++) {\n            const obj = {idPop: (this.combinedSelection.pops[i] >= 0) ? this.functionsChart.getId(this.combinedSelection.pops[i], 'pop') : 'TODOS POPS',\n                          codPop: this.combinedSelection.pops[i],\n                          idService: (this.combinedSelection.services[j] >= 0) ? this.functionsChart.getId(this.combinedSelection.services[j], 'service') : 'TODOS SERVIÇOS',\n                          codService: this.combinedSelection.services[j]}\n            this.combinedData.push(obj);\n          }\n        }\n      } else {\n        for(let i = 0; i < this.combinedSelection.pops.length; i++) {\n          for(let j = 0; j < this.combinedSelection.services.length; j++) {\n            const obj = { idPop: this.functionsChart.getId(this.combinedSelection.pops[i], 'pop'),\n                          codPop: this.combinedSelection.pops[i],\n                          idService: this.functionsChart.getId(this.combinedSelection.services[j], this.isPopSelected() ? 'pop' : 'service'),\n                          codService: this.combinedSelection.services[j]}\n            if(obj.idPop !== obj.idService) this.combinedData.push(obj);\n          }\n        }\n      }\n      this.setCombinedMultipleSelectConfiguration();\n      this.hasData = true;\n      this.functionsChart.clear();\n      this.onCombinedChange.emit(this.combinedData);\n    }\n  }\n\n  removeDataCombinations() {\n    if(this.combinedSelections.length > 0) {\n      for(let i = 0; i < this.combinedSelections.length; i++) {\n        for(let  j = 0; j < this.combinedData.length; j++) {\n          if(this.combinedSelections[i].cods[0] ==  this.combinedData[j].codPop && this.combinedSelections[i].cods[1] ==  this.combinedData[j].codService) {\n            this.combinedData.splice(j, 1);\n          }\n        }\n      }\n      this.functionsChart.clear();\n      if(this.combinedData.length == 0) { \n        this.hasData = false;\n      } else {\n        this.onCombinedChange.emit(this.combinedData);\n      }\n      this.combinedSelections = [];\n      this.setCombinedMultipleSelectConfiguration();\n    }\n  }\n\n  onTimeBoundsChange() {\n    if(this.shouldShowServices() && !this.isTimeSeriesSelected()) {\n      console.log('alo')\n      this.onItemSelected.emit(this.selectedItems)\n    } else if(!this.shouldShowServices() && this.hasData) {\n      this.onCombinedChange.emit(this.combinedData);\n    } else {\n      if(this.isCapitalSelected()) {\n        (this.isTimeSeriesSelected()) ? this.onItemSelected.emit(this.selectedItems) : this.functionsValueChanged.emit();\n      } else  {\n        (this.shouldShowServices()) ? this.onCombinedChange.emit(this.combinedData) : this.functionsValueChanged.emit();\n      }\n    }\n  }\n  \n  setMultipleSelectConfiguration() {\n    //multiselect\n    this.dropdownListServices = [];\n    this.dropdownSettingsServices = {};\n    this.dropdownListPops = [];\n    this.dropdownSettingsPops = {};\n    this.dropdownListPopsSecondary = [];\n    this.dropdownSettingsPopsSecondary = {};\n    //setando as configuracoes do multiselect p servicos\n    const services = this.global.getGlobal(\"services\").value.default;\n    this.multiSelectServicesPlaceholder = 'Serviços';\n    if(!this.isTimeSeriesSelected()) this.dropdownListServices.push({estado:'TODOS SERVIÇOS', cod:-1})\n    for(let i = 0; i < services.length; i++) {\n      let id = services[i].id.toUpperCase();\n      let cod = services[i].cod;\n      let obj:any = {};\n      obj['estado'] = id;\n      obj['cod'] = cod;\n      this.dropdownListServices.push(obj);\n    };  \n    this.dropdownSettingsServices = {\n      singleSelection: false,\n      limitSelection: this.selectionLimit,\n      idField: 'cod',\n      textField: 'estado',\n      enableCheckAll: false,\n      unSelectAll: false,\n      itemsShowLimit: 0,\n      allowSearchFilter: false\n    };\n    //setando as configuracoes do multiselect p pops\n    const capitals = this.global.getGlobal(\"state_capitals\").value.default;\n    this.multiSelectPopsPlaceholder = 'Estados';\n    if(!this.isTimeSeriesSelected()) this.dropdownListPops.push({estado:'TODOS POPS', cod:-1})\n    for(let i = 0; i < capitals.length; i++) {\n      let id = capitals[i].id.toUpperCase();\n      let cod = capitals[i].cod;\n      let obj:any = {};\n      obj['estado'] = id;\n      obj['cod'] = cod;\n      this.dropdownListPops.push(obj);\n    };\n    this.dropdownSettingsPops = {\n      singleSelection: false,\n      limitSelection: this.selectionLimit,\n      idField: 'cod',\n      textField: 'estado',\n      enableCheckAll: false,\n      unSelectAll: false,\n      itemsShowLimit: 0,\n      allowSearchFilter: false\n    };   \n  }\n\n  setCombinedMultipleSelectConfiguration() {\n    this.dropdownListCombined = [];\n    this.dropdownSettingsCombined =  {};\n    this.multiSelectCombinedPlaceholder = 'Select';\n    for(let i = 0; i < this.combinedData.length; i++) {\n      let id = this.combinedData[i].idPop.toUpperCase() + ' - '  + this.combinedData[i].idService.toUpperCase();\n      let cod = [this.combinedData[i].codPop, this.combinedData[i].codService];\n      let obj:any = {};\n      obj['estado+pop'] = id;\n      obj['cods'] = cod;\n      this.dropdownListCombined.push(obj);\n    }\n    this.dropdownSettingsCombined = {\n      singleSelection: false,\n      idField: 'cods',\n      textField: 'estado+pop',\n      enableCheckAll: true,\n      itemsShowLimit: 0,\n      allowSearchFilter: false\n    }; \n  }\n    \n  isCapitalSelected() {\n    return (this.global.getGlobal(\"clicked_element\").value > 0)\n  }\n\n  isTimeSeriesSelected() {\n    return (this.global.getGlobal('functions_param').value == 'timeseries');\n  }\n\n  isPopSelected() {\n    const dataType = (document.getElementById('functions-chart-select-value-options') as HTMLInputElement).value;\n    return dataType == 'popxpop';\n  }\n\n  isServiceSelected() {\n    const dataType = (document.getElementById('functions-chart-select-value-options') as HTMLInputElement).value;\n    return dataType == 'popxservice';\n  }\n\n  clear() {\n    this.functionsChart.clear();\n  }\n\n  clearSeries() {\n    this.selectedItems = [];\n    this.selectedItemsRoot = [];\n    this.selectedItemsRootSecondary = [];\n    //cleaning combined selections\n    this.hasData = false; \n    this.combinedData = [];\n    this.functionsChart.clear();\n    this.combinedSelection = {\n      pops: [],\n      services: []\n    }\n    this.combinedSelections = [];\n  }\n\n  /**\n * seta as cores já utilizadas\n */\n  updateUsedColors(added: boolean, color: string) {\n    if (added) {\n      if(!this.usedColors.includes(color)) this.usedColors.push(color);\n    }\n    else {\n      this.usedColors = this.usedColors.filter( (d: string) => d !== color );\n    }\n  }\n\n  shouldShowServices() {\n    if(this.isTimeSeriesSelected() && this.isCapitalSelected && !this.isPopSelected()) return true;\n    if(!this.isTimeSeriesSelected()) {\n      const dataType = (document.getElementById('functions-chart-select-value-options') as HTMLInputElement).value;\n      if(dataType == \"single\" || dataType == \"allpops\") return true;\n      else return false;\n    } else return false;\n  }\n\n  shouldShowMultiSelectors() {\n    if(!this.isTimeSeriesSelected()) {\n      const dataType = (document.getElementById('functions-chart-select-value-options') as HTMLInputElement).value;\n    if(dataType == 'nxn') return true;\n    else return false;\n    } else return true;\n  }\n}\n","<div>\n    <div class=\"fill functions-chart\">\n        <canvas style=\"padding-bottom: 10px; width: 100%; height: 100% !important;\" #functionsChart></canvas>\n    </div>\n    <div style=\"display: flex; padding-bottom: 7px; width: 100%; border-top: 1px solid #eee; left: 10px; font-size: 11px !important;\">\n        <div class=\"model-select\">\n            <select name=\"select\" class=\"param-selector\" (change)=\"this.onParamChange($event)\" id='functions-chart-options'>\n                <option value=\"cdf\" selected>CDF</option>\n                <option value=\"pdf\">PDF</option>\n                <option value=\"ccdf\">CCDF</option>\n                <option value=\"timeseries\">Time series</option>\n            </select>\n        </div>\n        <div class=\"code-select\" [style.margin-right]=\"this.isCapitalSelected() ? '-30px' : '0px'\">\n            <select *ngIf=\"this.isTimeSeriesSelected()\" name=\"type\" style=\"width: 111px;\" id='functions-chart-select-value-options' name=\"select\" class=\"value-selector\" (change)=\"this.onValueChange($event)\">\n                <option value=\"popxpop\">Pop x Pop</option>\n                <option value=\"popxservice\">Pop x Serviços</option>\n            </select>\n            <select *ngIf=\"!this.isCapitalSelected() && !this.isTimeSeriesSelected()\" id='functions-chart-select-value-options' name=\"select\" class=\"value-selector\" (change)=\"this.onValueChange($event)\">\n                <option value=\"all\" selected>Todos os pops x todos os serviços</option>\n                <option value=\"allpops\">Todos os pops x serviço</option>\n                <option value=\"nxn\">N pops x N serviços</option>\n            </select>\n            <select *ngIf=\"this.isCapitalSelected()  && !this.isTimeSeriesSelected()\" id='functions-chart-select-value-options' name=\"select\" class=\"value-selector\" style=\"width:133px;\" (change)=\"this.onValueChange($event)\">\n                <option value=\"allservices\" selected>Pop x todos os serviços</option>\n                <option value=\"single\">Pop x serviço</option>\n            </select>  \n        </div>\n        <div *ngIf=\"this.isTimeSeriesSelected() && this.isPopSelected()\" id=\"code-select-box\" class=\"code-select\" [style.margin-left]=\"!this.hasData ? '-64px' : '-42px'\">\n            <select name=\"code\" class=\"value-selector\" id='functions-chart-select-timeseries-popxpop-value-options' (change)=\"this.onPopValueChange()\">\n                <optgroup label=\"Atraso e perda\">\n                    <option value=\"10\">Failures</option>\n                    <option value=\"11\">Atraso de ida e volta (RTT - average)</option>\n                    <option value=\"12\">Atraso de ida e volta (RTT - min)</option>\n                    <option value=\"13\">Atraso de ida e volta (RTT - max)</option>\n                    <option value=\"16\">Histogram-ttl-reverse (average)</option>\n                    <option value=\"17\">Histogram-ttl-reverse (min)</option>\n                    <option value=\"18\">Histogram-ttl-reverse (max)</option>\n                    <option value=\"21\">Packet-count-lost-bidir</option>\n                    <option value=\"22\">Packet-count-sent</option>\n                    <option value=\"23\">Packet-duplicates-bidir</option>\n                    <option value=\"24\">Packet-loss-rate-bidir</option>\n                    <option value=\"25\">Packet-reorders-bidir</option>\n                </optgroup>\n                <optgroup label=\"Atraso unidirecional\">\n                    <option value=\"40\">Failures</option>\n                    <option value=\"41\">Atraso unidirecional (owdelay - average)</option>\n                    <option value=\"42\">Atraso unidirecional (owdelay - min)</option>\n                    <option value=\"43\">Atraso unidirecional (owdelay - max)</option>\n                    <option value=\"46\">Histogram-ttl (average)</option>\n                    <option value=\"47\">Histogram-ttl (min)</option>\n                    <option value=\"48\">Histogram-ttl (max)</option>\n                    <option value=\"51\">Packet-count-lost</option>\n                    <option value=\"52\">Packet-count-sent</option>\n                    <option value=\"53\">Packet-duplicates</option>\n                    <option value=\"54\">Packet-loss-rate</option>\n                    <option value=\"55\">Packet-reorders</option>\n                </optgroup>\n                <optgroup label=\"BANDA (BBR)\">\n                     <option value=\"70\">Failures</option>\n                    <option value=\"71\">Packet-retransmits</option>\n                    <option value=\"72\">Packet-retransmits-subintervals (average)</option>\n                    <option value=\"73\">Packet-retransmits-subintervals (min)</option>\n                    <option value=\"74\">Packet-retransmits-subintervals (max)</option>\n                    <option value=\"77\">Throughput (BBR)</option>\n                    <option value=\"78\">Throughput-subintervals (average)</option>\n                    <option value=\"79\">Throughput-subintervals (min)</option>\n                    <option value=\"80\">Throughput-subintervals (max)</option>\n                </optgroup>\n                <optgroup label=\"BANDA (CUBIC)\">\n                    <option value=\"100\">Failures</option>\n                    <option value=\"101\">Packet-retransmits</option>\n                    <option value=\"102\">Packet-retransmits-subintervals (average)</option>\n                    <option value=\"103\">Packet-retransmits-subintervals (min)</option>\n                    <option value=\"104\">Packet-retransmits-subintervals (max)</option>\n                    <option value=\"107\">Throughput (CUBIC)</option>\n                    <option value=\"108\">Throughput-subintervals (average)</option>\n                    <option value=\"109\">Throughput-subintervals (min)</option>\n                    <option value=\"110\">Throughput-subintervals (max)</option>\n                </optgroup>\n                <optgroup label=\"TraceRoute\">\n                    <option value=\"130\">Failures</option>\n                    <option value=\"131\">Packet-trace (average)</option>\n                    <option value=\"132\">Packet-trace (min)</option>\n                    <option value=\"133\">Packet-trace (max)</option>\n                </optgroup>\n            </select>\n        </div>\n        <div *ngIf=\"(this.shouldShowServices() && !this.isTimeSeriesSelected()) || (!this.isPopSelected() && this.isCapitalSelected() && this.isTimeSeriesSelected())\" [style.margin-left]=\"(!this.isPopSelected() && this.isCapitalSelected()) ? '-50px' : '17px'\" id=\"chart-select-box\" class=\"chart-select\">\n            <ng-multiselect-dropdown class=\"custom-font-size custom-radius custom-dropdown custom-dropdown-place custom-dropdown-rotation \"\n            [disabled]=\"false\"\n            [placeholder]=\"this.multiSelectServicesPlaceholder\"\n            [settings]=\"this.dropdownSettingsServices\"\n            [data]=\"this.dropdownListServices\"\n            [(ngModel)] = \"this.selectedItemsRoot\"\n            (onSelect)=\"this.onItemSelect($event, true)\"\n            (onDeSelect)=\"this.onItemSelect($event, false)\">\n            </ng-multiselect-dropdown>\n        </div>\n        <div *ngIf=\"(this.isCapitalSelected() && this.isTimeSeriesSelected() && this.isPopSelected())\" id=\"chart-select-box\" class=\"chart-select\">\n            <ng-multiselect-dropdown class=\"custom-font-size custom-radius custom-dropdown custom-dropdown-place custom-dropdown-rotation \"\n            [disabled]=\"false\"\n            [placeholder]=\"this.multiSelectPopsPlaceholder\"\n            [settings]=\"this.dropdownSettingsPops\"\n            [data]=\"this.dropdownListPops\"\n            [(ngModel)] = \"this.selectedItemsRoot\"\n            (onSelect)=\"this.onItemSelect($event, true)\"\n            (onDeSelect)=\"this.onItemSelect($event, false)\">\n            </ng-multiselect-dropdown>\n        </div>\n        <div *ngIf=\"this.shouldShowMultiSelectors() && !this.isCapitalSelected()\" [style.margin-left]=\"this.isPopSelected() ? '17px' : '64px'\"  id=\"chart-select-box\" class=\"chart-select\">\n            <ng-multiselect-dropdown class=\"custom-font-size custom-radius custom-dropdown custom-dropdown-place custom-dropdown-rotation \"\n            [disabled]=\"false\"\n            [placeholder]=\"this.multiSelectPopsPlaceholder\"\n            [settings]=\"this.dropdownSettingsPops\"\n            [data]=\"this.dropdownListPops\"\n            [(ngModel)] = \"this.selectedItemsRoot\"\n            (onSelect)=\"this.onCombinedSelect($event, 'pop', true)\"\n            (onDeSelect)=\"this.onCombinedSelect($event, 'pop', false)\">\n            </ng-multiselect-dropdown>\n        </div>\n        <div *ngIf=\"this.isPopSelected() && !this.isCapitalSelected()\" id=\"chart-select-box\" class=\"chart-select\">\n            <ng-multiselect-dropdown class=\"custom-font-size custom-radius custom-dropdown custom-dropdown-place custom-dropdown-rotation \"\n            [disabled]=\"false\"\n            [placeholder]=\"this.multiSelectPopsPlaceholder\"\n            [settings]=\"this.dropdownSettingsPops\"\n            [data]=\"this.dropdownListPops\"\n            [(ngModel)] = \"this.selectedItemsRootSecondary\"\n            (onSelect)=\"this.onCombinedSelect($event, 'secondarypop', true)\"\n            (onDeSelect)=\"this.onCombinedSelect($event, 'secondarypop', false)\">\n            </ng-multiselect-dropdown>\n        </div>\n        <div *ngIf=\"(this.shouldShowMultiSelectors() && !this.isTimeSeriesSelected()) || (this.isServiceSelected() && !this.isCapitalSelected())\" id=\"chart-select-box\" class=\"chart-select\">\n            <ng-multiselect-dropdown class=\"custom-font-size custom-radius custom-dropdown custom-dropdown-place custom-dropdown-rotation \"\n            [disabled]=\"false\"\n            [placeholder]=\"this.multiSelectServicesPlaceholder\"\n            [settings]=\"this.dropdownSettingsServices\"\n            [data]=\"this.dropdownListServices\"\n            (onSelect)=\"this.onCombinedSelect($event, 'service', true)\"\n            (onDeSelect)=\"this.onCombinedSelect($event, 'service', false)\">\n            </ng-multiselect-dropdown>\n        </div>\n        <div *ngIf=\"this.hasData && this.shouldShowMultiSelectors()\" id=\"chart-select-box\" class=\"chart-select\">\n            <ng-multiselect-dropdown class=\"custom-font-size custom-radius custom-dropdown custom-dropdown-place custom-dropdown-rotation \"\n            [disabled]=\"false\"\n            [placeholder]=\"this.multiSelectCombinedPlaceholder\"\n            [settings]=\"this.dropdownSettingsCombined\"\n            [data]=\"this.dropdownListCombined\"\n            [(ngModel)]=\"this.combinedSelections\">\n            </ng-multiselect-dropdown>\n        </div>\n        <div *ngIf=\"(this.shouldShowMultiSelectors()  || this.isTimeSeriesSelected()) && !this.isCapitalSelected()\" class=\"combined-control\">\n            <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.addDataCombinations()\">\n                <span class=\"fas fa-plus\"\n                [style.color]=\"'#243d8f'\"></span>\n            </button>\n            <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.removeDataCombinations()\">\n                <span class=\"fas fa-trash\"\n                [style.color]=\"'#F51720'\"></span>\n            </button>\n        </div>\n    </div>\n</div>","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\nimport { LineChart } from './line';\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent implements OnInit {\n\n  // referência para o div do grafico\n  @ViewChild(\"lineChart\", { static: true }) private lineDiv!: ElementRef;\n\n  @Output() lineParamChanged = new EventEmitter<number>();\n  @Output() lineValueChanged = new EventEmitter<number>();\n\n  public lineChart: any;\n\n  private labels: any = {};\n  public rawData: any = {};\n  private nrmData: any = {};\n\n  private unity: any = {};\n\n  private t0: number = 0;\n  private t1:number = 0;\n\n  public ids: any = [];\n  private optionsList = {\n    avg_in: 'Average in',\n    avg_out: 'Average out',\n    max_in: 'Max in',\n    max_out: 'Max out',\n    loss: 'Loss',\n    avg_loss: 'Average loss',\n    max_loss: 'Max loss',\n    val: 'Val',\n    avg_val: 'Average val',\n    max_val: 'Max val'\n  };\n\n  constructor(public global: GlobalService, public util: UtilService) {\n    this.ids = this.global.getGlobal('line_params').value;\n  }\n\n  ngOnInit(): void {\n    this.lineChart = new LineChart(this.lineDiv.nativeElement);\n  }\n\n  updateData(responseData: any, dataId: any, chartColor: any) {\n    // manages data for each from\n    for (let paramId of Object.keys(responseData)) {\n      // clear existing element\n      this.deleteData(paramId, dataId, chartColor);\n      //creating list to average, max, min\n      this.rawData[paramId][dataId][chartColor] = [];\n      this.nrmData[paramId][dataId][chartColor] = [];\n\n      // adiciona os valores não normalizados\n      for (let i = 0; i < responseData[paramId].result.length; i++) {\n        if(!this.isViaipe()) {\n        //pega o tempo\n        const pointTime = responseData[paramId].result[i].k[0];\n        //pega valor das médias\n        const pointAverageValue = responseData[paramId].result[i].v[0];\n        //pega valor max\n        const pointMaxValue = responseData[paramId].result[i].v[2];\n        //pega valor min\n        const pointMinValue = responseData[paramId].result[i].v[3];        \n        this.rawData[paramId][dataId][chartColor].push({ x: this.util.secondsToDate(pointTime), y: pointAverageValue, z: pointMaxValue, k: pointMinValue});\n        } else {\n          //pega o tempo\n          const pointTime = responseData[paramId].result[i].k[0];\n          //pega valor\n          const pointValue = responseData[paramId].result[i].v[0];\n          this.rawData[paramId][dataId][chartColor].push({ x: this.util.secondsToDate(pointTime), y: pointValue});\n        }\n      }\n      // seta o intervalo de tempo\n      if(this.isViaipe()) {\n        this.t0 = responseData['viaipe']['result'][0].k[0];\n        this.t1 = responseData['viaipe']['result'].slice(-1)[0].k[0]; \n      } else {\n        this.t0 = responseData['packet_rate']['result'][0].k[0];\n        this.t1 = responseData['packet_rate']['result'].slice(-1)[0].k[0];\n        // computes the unity\n        this.computeUnity(paramId);\n\n      }\n      // atualiza os labels baseado no dado novo\n      this.updateLabels(paramId);\n      // normaliza os dados de dataId\n      this.normalizeData(paramId);\n    }\n  }\n\n  drawChart(from: string, selectedParam: string, name: any = undefined) {\n    if(!this.isViaipe()) {\n      // TODO: passar os labels de y em um objeto.\n      if (from.includes('dns')) {\n        // set y label.\n        this.lineChart.setLabelY(\"Requisitions [%]\");\n      }\n      else {\n        // set y label.\n        this.lineChart.setLabelY(\"Requisitions\" + \" [\" + this.unity[from].prefix + \"package\" + \"]\");\n      }\n    } else {\n      const selectedValue = this.global.getGlobal('line_selected_params_value').value;\n      //@ts-ignore\n      this.lineChart.setLabelY(this.optionsList[selectedValue]);\n    }\n    // atualiza os labels\n    this.lineChart.setLabels(this.labels[from], name);\n    // atualiza os gráficos\n    for (const dataId of Object.keys(this.nrmData[from])) {\n      for (const color of Object.keys(this.nrmData[from][dataId])) {\n        // gets the data\n        const data = this.nrmData[from][dataId];\n        const chartData = [];\n        for(let i = 0; i < data[color].length; i++) {\n          const label = this.labels[from][i];\n          if(this.isViaipe()) {\n            chartData.push({ y: data[color][i].y, x: label});\n          } else {\n            if(selectedParam == 'average') {\n              chartData.push({ y: data[color][i].y, x: label});\n            } else if(selectedParam == 'max') {\n              chartData.push({ y: data[color][i].z, x: label});\n            } else {\n              chartData.push({ y: data[color][i].k, x: label});\n            } \n          }\n    \n        }\n        this.lineChart.updateDataset(dataId, color, chartData, name);\n      }\n    }\n  }\n\n  deleteData(from: string, dataId: string, color: string) {\n    // new group\n    if (!this.rawData[from]) {\n      this.rawData[from] = {};\n    }\n    // new dataId\n    if (!this.rawData[from][dataId]) {\n      this.rawData[from][dataId] = {};\n    }\n\n    delete this.rawData[from][dataId][color];\n    // new group\n    if (!this.nrmData[from]) {\n      this.nrmData[from] = {};\n    }\n    // new dataId\n    if (!this.nrmData[from][dataId]) {\n      this.nrmData[from][dataId] = {};\n    }\n\n    delete this.nrmData[from][dataId][color];\n  }\n\n  clearChart(from: string, dataId: string, color: string) {\n    // removes from chart\n    this.lineChart.removeDataset(dataId, color);\n\n    this.deleteData(from, dataId, color);\n\n    // atualiza os labels baseado no dado novo\n    this.updateLabels(from);\n\n    // normaliza os dados de dataId\n    this.normalizeData(from);\n  }\n\n  clearLabel(from: string) {\n    this.labels[from] = [];\n  }\n\n  computeUnity(from: string) {\n    let max = -1;\n\n    const dataIds = Object.keys(this.rawData[from]);\n    for (let dataId of dataIds) {\n      const colors = Object.keys(this.rawData[from][dataId]);\n      for (let color of colors) {\n        // pega o máximo do dado atual\n        const mx = Math.max(...this.rawData[from][dataId][color].map((d: any) => d.y))\n        // atualiza o máximo global\n        max = Math.max(mx, max);\n      }\n    }\n\n    // computes the best unity\n    this.unity[from] = this.util.compute_best_unity(0, max);\n  }\n\n  normalizeData(from: string) {\n    // pega o dataset\n    const data = this.rawData[from];\n\n    // limpa os dados normalizados\n    this.nrmData[from] = {};\n    if(this.isViaipe()) {\n      this.nrmData[from] = this.rawData[from];\n    } else { \n      const dataIds = Object.keys(data);\n      for (let dataId of dataIds) {\n        this.nrmData[from][dataId] = {};\n        const colors = Object.keys(data[dataId]);\n        for (let color of colors) {\n          this.nrmData[from][dataId][color] = [];\n          for (let pId = 0; pId < data[dataId][color].length; pId++) {\n            this.nrmData[from][dataId][color].push({ x: data[dataId][color][pId].y / this.unity[from].div,\n                                                     y: data[dataId][color][pId].z / this.unity[from].div,\n                                                     z: data[dataId][color][pId].k / this.unity[from].div});\n          };\n        }\n      }\n    }\n  }\n\n  updateLabels(from: string) {\n    // result array\n    this.labels[from] = [];\n\n    const tsT0 = this.t0;\n    const tsT1 = this.t1;\n\n    const interval = tsT1 - tsT0;\n\n    const data = this.rawData[from];\n\n    for (let dataId of Object.keys(data)) {\n      for (let chartColor of Object.keys(data[dataId])) {\n        // numero de pontos\n        const nPoints = this.rawData[from][dataId][chartColor].length;\n\n        // só atualiza se chegar um dado com mais pontos\n        if (this.labels.length > nPoints) {\n          continue;\n        }\n\n        // só atualiza se chegar um dado com mais pontos\n        if (nPoints === 0) {\n          continue;\n        }\n\n        // calcula o delta de tempo\n        const tDelta = interval / (nPoints - 1);\n\n        // result array\n        this.labels[from] = [];\n\n        let current = tsT0;\n        while (current <= tsT1) {\n          let label = '';\n          let date = new Date(current * 1000);\n          if (interval < 1200) { // 20 min\n            //@ts-ignore\n            label = date.toLocaleString('en-GB', { hour12: false, year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', timeZone: 'UTC' });\n          } else if (interval < 72000) { // 20 hs\n            //@ts-ignore\n            label = date.toLocaleString('en-GB', { hour12: false, year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', timeZone: 'UTC' });\n          } else if (interval < 4320000) { // 50 dias\n            //@ts-ignore\n            label = date.toLocaleString('en-GB', { hour12: false, year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', timeZone: 'UTC' });\n          } else {\n            //@ts-ignore\n            label = date.toLocaleString('en-GB', { year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', timeZone: 'UTC' });\n          }\n          this.labels[from].push(label);\n          current += tDelta\n        }\n      }\n    }\n  }\n\n  onParamChange(event: any) {\n    const line_params_value = {\n      key: \"line_params_value\",\n      value: event.target.value\n    };\n    \n    this.global.setGlobal(line_params_value);\n    this.lineParamChanged.emit();\n  }\n\n  onValueChange(event: any) {\n    const line_selected_params_value = {\n      key: \"line_selected_params_value\",\n      value: event.target.value\n    };\n    this.global.setGlobal(line_selected_params_value);\n    this.lineValueChanged.emit();\n  }\n\n  isViaipe() {\n    return this.global.getGlobal(\"client_option\").value == \"viaipe\";\n  }\n}\n","<div class=\"fill\">\n  <canvas class=\"fill\"\n  [style.border-bottom] = \"!this.isViaipe() ? '1px solid #eee;' : 'none'\" \n  [style.padding-bottom] =  \"!this.isViaipe() ? '10px;' : '0px'\" \n  #lineChart></canvas>\n  <div *ngIf=\"!this.isViaipe()\" style=\"margin-top: 7px; padding-bottom: 7px; display: flex;\">\n    <select name=\"select\" class=\"param-selector\" (change)=\"this.onParamChange($event)\">\n      <option *ngFor=\"let param of this.ids; let idx = index\" [value]=\"param.id\">{{param.caption}}</option>\n    </select>   \n    <select name=\"select\" class=\"value-selector\" (change)=\"this.onValueChange($event)\">\n      <option value=\"average\" selected>Average</option>\n      <option value=\"max\">Max</option>\n      <option value=\"min\">Min</option>\n    </select>\n  </div>\n  <div *ngIf=\"this.isViaipe()\" style=\"margin-top: 7px; padding-bottom: 7px; display: flex;\">\n    <select name=\"select\" class=\"value-selector\" (change)=\"this.onValueChange($event)\">\n      <option value=\"avg_in\" selected>Average in</option>\n      <option value=\"avg_out\">Average out</option>\n      <option value=\"max_in\">Max in</option>\n      <option value=\"max_out\">Max out</option>\n<!--  \n      <option value=\"loss\">Loss</option>\n      <option value=\"avg_loss\">Average loss</option>\n      <option value=\"max_loss\">Max loss</option>\n-->\n      <option value=\"val\">Val</option>\n      <option value=\"avg_val\">Average val</option>\n      <option value=\"max_val\">Max val</option>\n    </select>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from 'src/app/shared/global.service';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor(public global: GlobalService) { }\n\n  ngOnInit(): void {}\n\n}\n","<div class=\"main-bar\">\n\n  <div class=\"row\">\n    <!-- Logo -->\n    <i class=\"rnp-logo\"></i>\n    <!-- Nome -->\n    <div class=\"menu-container\">\n      <h2 class=\"project-title\">Network Borescope</h2>\n      <img class=\"uff-logo\" src=\"assets/logouff.png\" alt=\"\">\n      <img class=\"ic-logo\" src=\"assets/logoic.png\" alt=\"\">\n    </div>\n  </div>\n</div>\n","/**\n * Schema Request Class\n */\n export class SchemaRequest {\n  schema: any[];\n  id: number;\n  from: string;\n\n  constructor() {\n    this.schema = [1];\n    this.id = 1;\n    this.from = \"ttls\";\n  }\n}\n\n/**\n * Bounds Request Class\n */\nexport class BoundsRequest {\n  bounds: string;\n  where: any[];\n  dummy: number[];\n  id: number;\n  from: string;\n\n  constructor(zoom: number) {\n    let location = [\"location\", \"zrect\", zoom, 85, -179, -85, 179];\n    this.bounds = \"location\";\n    this.where = [location];\n    this.dummy = [1];\n    this.id = 1;\n    this.from = \"ttls\"\n  }\n}\n\n/**\n * Query Request Class\n */\nexport class QueryRequest {\n  'select': any[];\n  'where': any[];\n  'id': number;\n  'from': string;\n  'group-by': any;\n  'group-by-output': string;\n\n  constructor() {\n    let location = [\"location\", \"zrect\", 14, -22.75212144238171, -43.90960693359376, -23.073414748499108, -42.944183349609375];\n    let time = [ \"time\", \"between\", 1583020800, 1585698900];\n    let client = [\"cliente\", \"eq\", '10'];\n    this['select'] = [\"hsum\"];\n    this['group-by'] = {};\n    this['group-by-output']= \"kv\";\n    this['where'] = [ time, location, client ];\n    this['id'] = 1;\n    this['from'] = \"ttls\";\n  }\n}\n\n/**\n * Matrix Request Class\n */\nexport class MatrixRequest {\n  'what': string;\n  'metric': any;\n  'field': string;\n  'start': number;\n  'end': number;\n\n  constructor() {\n    this['what'] = \"matrix\";\n    this['metric'] = 10;\n    this['field']= \"h_avg\";\n    this['start'] = 1;\n    this['end'] = 1634149785;\n  }\n}\n\n/**\n * Timeseries Request Class\n */\nexport class TimeseriesRequest {\n  'what': string;\n  'metric': any;\n  'field': string;\n  'start': number;\n  'end': number;\n  'idpop': number;\n  //{\"what\":\"timecolumns\",\"metric\":10,\"field\":\"h_avg\",\"start\":1648771200,\"end\":1656633300,\"idpop\":19}\n\n  //{\"what\":\"timecolumns\",\"metric\":10,\"field\":\"havg\",\"start\":1648771200,\"end\":1656633300,\"idpop\":8,\"from\":\"rnp_services\"}\n\n  constructor() {\n    this['what'] = \"timecolumns\";\n    this['metric'] = 0;\n    this['field']= \"h_avg\";\n    this['start'] = 1;\n    this['end'] = 2;\n    this['idpop'] = -1;\n  }  \n}\n\n/**\n * Functions Request Class\n */\n export class FunctionsRequest {\n  'from': string\n  'what': string;\n  'field': string;\n  'pop': any;\n  'service': any;\n  'start': number;\n  'end': number;\n  \"model\": string;\n\n  constructor() {\n    this['from'] = \"rnp_services\";\n    this['what'] = \"statistics\";\n    this['field'] = \"havg\";\n    this['start'] = 1647388800;\n    this['end'] = 1652227080;\n    this['model'] = \"cdf\";\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './shared/api.service';\nimport { GlobalService } from './shared/global.service';\nimport { UtilService } from './shared/util.service';\n\nimport { environment } from 'src/environments/environment';\n@Injectable()\nexport class AppInitService {\n\n  constructor(public global: GlobalService, public api: ApiService, public utils: UtilService) { }\n\n  async loadSchema() {\n    const schema_ttls = await this.api.getSchema('ttls');\n    console.log(schema_ttls);\n\n    const schema_serv = await this.api.getSchema('serv');\n    console.log(schema_serv);\n\n    const schema_dns  = await this.api.getSchema('dns');\n    console.log(schema_dns);\n\n    const data = {\n      key: \"schema_info\",\n      value: {\n        'ttls': schema_ttls.result,\n        'serv': schema_serv.result,\n        'dns' : schema_dns.result\n      }\n    }\n\n    this.global.setGlobal(data);\n  }\n\n  async loadTimeBounds() {\n    const bounds = await this.api.getTimeBounds();\n    console.log(bounds);\n\n    let bounds_time = {\n      key: \"bounds_time\",\n      value: [bounds.result.vs[0][0], bounds.result.vs[1][0]]\n    };\n    this.global.setGlobal(bounds_time);\n\n    let t0_filter = {\n      key: \"t0_filter\",\n      value: bounds_time.value[0]\n    };\n    this.global.setGlobal(t0_filter);\n\n    let t1_filter = {\n      key: \"t1_filter\",\n      value: bounds_time.value[1]\n    };\n    this.global.setGlobal(t1_filter);\n\n\n    let t0_vis = {\n      key: \"t0_vis\",\n      value: bounds_time.value[0]\n    };\n    this.global.setGlobal(t0_vis);\n\n    let t1_vis = {\n      key: \"t1_vis\",\n      value: bounds_time.value[1]\n    };\n    this.global.setGlobal(t1_vis);\n  }\n\n  async loadGeoBounds() {\n    const bounds = await this.api.getGeoBounds();\n    console.log(bounds);\n\n    const data = {\n      key: \"bounds_geo\",\n      value: bounds.result.vs\n    }\n\n    this.global.setGlobal(data);\n  }\n\n  async loadIPs() {\n    const data = await this.api.getIPs();\n\n    const list_ips = {\n      key: 'list_ips',\n      value: data\n    };\n    this.global.setGlobal(list_ips);\n  }\n\n  async loadEnvIp() {\n    const config = await this.api.getConfig();\n    environment.backend = config.backend;\n    this.api.updateConfig();\n  }\n\n  loadClients() {\n    const schema = this.global.getGlobal('schema_info').value;\n\n    const data = {\n      key: 'list_clientes',\n      value: schema['ttls'].clientes_df\n    };\n    this.global.setGlobal(data);\n  }\n\n  loadLabelMaps() {\n    const schema = this.global.getGlobal('schema_info').value;\n\n    const data = {\n      key: 'label_maps',\n      value: {\n        'ttls': {},\n        'services': schema['serv'].services\n      }\n    };\n    this.global.setGlobal(data);\n  }\n\n\n  init() {\n    return new Promise<void>(async (resolve) => {\n      await this.loadEnvIp();\n      console.log(environment)\n\n      await this.loadSchema();\n      await this.loadTimeBounds();\n      await this.loadGeoBounds();\n      await this.loadIPs();\n\n      this.loadClients();\n      this.loadLabelMaps();\n      console.log('########## Initialization Done! ##########')\n\n      resolve();\n    });\n  }\n}\n","import { AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\n\nimport { ApiService } from 'src/app/shared/api.service';\nimport { GlobalService } from 'src/app/shared/global.service';\n\nimport { MapComponent } from 'src/app/widgets/map/map.component';\nimport { BarChartComponent } from 'src/app/widgets/bar-chart/bar-chart.component';\nimport { LineChartComponent } from 'src/app/widgets/line-chart/line-chart.component';\nimport { NetworkComponent } from 'src/app/widgets/network/network.component';\nimport { AlertsComponent } from '../widgets/alerts/alerts.component';\nimport { FiltersComponent } from 'src/app/widgets/filters/filters.component';\nimport { ScatterglComponent } from 'src/app/widgets/scattergl/scattergl.component';\nimport { FunctionsChartComponent } from 'src/app/widgets/functions-chart/functions-chart.component';\n\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\nimport { UtilService } from '../shared/util.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements AfterViewInit {\n\n  // referência para componente do mapa\n  @ViewChild(\"appMap\", { static: true }) private map!: MapComponent;\n  // referência para o componente do gráfico de barras\n  @ViewChild(\"appBarChart\", { static: true }) private bar!: BarChartComponent;\n  // referência para o componente do gráfico de linhas\n  @ViewChild(\"appLineChart\", { static: true }) private line!: LineChartComponent;\n  // referência para o componente da heatmatrix\n  @ViewChild(\"appNetworkChart\", { static: true }) private net!: NetworkComponent;\n  // referência para o componente dos alertas\n  @ViewChild(\"appAlerts\", { static: true }) private alerts!: AlertsComponent;\n  // referência para componente do mapa\n  @ViewChild(\"appFilters\", { static: true }) private filters!: FiltersComponent;\n  // referência para componente do scattergl\n  @ViewChild(\"appScatterglChart\", { static: true }) private scattergl!: ScatterglComponent;\n  // referência para o componente das functions\n  @ViewChild(\"appFunctionsChart\", { static: true }) private func!: FunctionsChartComponent;\n\n  public last: string = 'none';\n  public moving: string = 'none';\n  public t0: string = 'none';\n  public t1: string = 'none';\n  private timeBoundsRefreshFnc: any = undefined;\n  private chartsElements: any = {cods: [], colors: [], names: [], from: []};\n\n  constructor(public global: GlobalService, public api: ApiService, public util: UtilService, private spinner: NgxSpinnerService) {\n    this.timeBoundsRefreshFnc = setInterval(async () => {\n      await this.timeBoundsRefresh();\n      await this.listIpsRefresh();\n    }, 60 * 1000);\n  }\n\n  ngAfterViewInit(): void {\n    this.initCharts();\n  }\n\n  ngOnInit(): void {\n    const line_selected_params_value = this.global.getGlobal('line_selected_params_value');\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    if(selectedClientOption == 'viaipe') {\n      line_selected_params_value.value = 'avg_in';\n      this.global.setGlobal(line_selected_params_value)\n    }\n  }\n\n  ngDestroy() {\n    if (this.timeBoundsRefreshFnc) {\n      clearInterval(this.timeBoundsRefreshFnc);\n    }\n  }\n\n  /**\n   * Inicializa os gráficos usando os dados do mapa\n   */\n  initCharts() {\n    this.setDates();\n\n    // barchart e linechart do mapa\n    this.updateLineChart('map', '#AAAAAA');\n    this.updateBarChart('map', '#AAAAAA');\n\n    // adiciona ao estado global\n    this.addChartElementToGlobal('map', '#AAAAAA');\n\n    // heat matrix\n    this.updateHeatmatrix();\n\n    //functions chart\n    this.updateFunctionsChart();\n  }\n\n  setDates() {\n    const date0 = new Date(this.global.getGlobal(\"t0_vis\").value * 1000);\n    const date1 = new Date(this.global.getGlobal(\"t1_vis\").value * 1000);\n    //@ts-ignore\n    this.t0 = date0.toLocaleString('en-GB', { hour12: false, dateStyle: 'short', timeStyle: 'short', timeZone: 'UTC' }).replace(', ', ' - ');\n    //@ts-ignore\n    this.t1 = date1.toLocaleString('en-GB', { hour12: false, dateStyle: 'short', timeStyle: 'short', timeZone: 'UTC' }).replace(', ', ' - ');\n  };\n\n  /**\n   * Redesenha todos os gráficos\n   */\n  redrawAllCharts() {\n    this.updateHeatmap();\n\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    if(selectedClientOption !== 'viaipe') {\n      const line_params = this.global.getGlobal('line_params').value;\n      for (const param of line_params) {\n        this.line.clearLabel(param);\n      }\n  \n      const bar_params = this.global.getGlobal('bar_params').value;\n      for (const param of bar_params) {\n        this.bar.clearLabel(param);\n      }\n  \n      const elements = this.global.getGlobal('active_chart_elements').value;\n      for (const elem of elements) {\n        this.updateLineChart(elem.dataId, elem.chartColor, elem.feature);\n        this.updateBarChart(elem.dataId, elem.chartColor, elem.feature);\n      }\n    } else {\n      //muda dado para o barchart \n      this.updateBarChart('map', '#AAAAAA');\n\n      // percorre os tipos de elementos\n      for (const dataId of Object.keys(this.line.rawData['viaipe'])) {\n        // percorre os elementos\n        for (const color of Object.keys(this.line.rawData['viaipe'][dataId])) {\n          console.log(dataId)\n        }\n      }\n      //muda dado para o linechart\n      //muda mapa\n      this.updateLineChart('map', '#AAAAAA');\n      //muda filtros\n      if(this.line.rawData['viaipe']['filter'] !== undefined) {\n        if(this.line.rawData['viaipe']['filter']['#FF7F0E'].length > 0) {\n          this.updateLineChart('filter', this.global.getGlobal('filter_color').value);\n        }\n      }\n      //muda clientes\n      for(let i = 0; i < this.chartsElements.length; i++) {\n        this.updateLineChart('client', this.chartsElements[i].color, this.chartsElements[i].cod, this.chartsElements[i].name);\n      }\n    }\n\n\n    this.setDates();\n\n    this.net.onTimeBoundsChange();\n    this.func.onTimeBoundsChange();\n    this.scattergl.onTimeBoundsChange();\n  }\n\n  /**\n   * Atualização automática do gráfico\n   */\n  async timeBoundsRefresh() {\n    console.log('########## timeBoundsRefresh ##########')\n\n    const bounds = await this.api.getTimeBounds();\n\n    let bounds_time = {\n      key: \"bounds_time\",\n      value: [bounds.result.vs[0][0], bounds.result.vs[1][0]]\n    };\n    this.global.setGlobal(bounds_time);\n\n    console.log(bounds_time);\n    console.log('#######################################')\n  }\n\n  async listIpsRefresh() {\n    console.log('########## ipListRefresh ##############')\n    const ips = await this.api.getIPs();\n\n    const list_ips = {\n      key: \"list_ips\",\n      value: ips\n    };\n    this.global.setGlobal(list_ips);\n\n    console.log(list_ips);\n    console.log('#######################################')\n}\n\n\n  /**\n   * Calcula o z-index do widget do gráfico\n   */\n  chartZindex(chartId: string) {\n    if (chartId == this.moving) {\n      return 950;\n    }\n    if (chartId == this.last) {\n      return 930;\n    }\n    return 900;\n  }\n\n  /**\n   * Checa se o widget do gráfico é visivel\n   */\n  isChartVisible(chartId: string): boolean {\n    const obj = this.global.getGlobal('widgets_charts');\n    return obj.value[chartId];\n  }\n\n  /**\n   * Checa se o modal de filtro é visivel\n   */\n  isConfigVisible(configId: string): boolean {\n    const obj = this.global.getGlobal('widgets_config');\n    return obj.value[configId];\n  }\n\n  /**\n   * Adiciona um elemento do gráfico ao estado global\n   */\n  addChartElementToGlobal(dataId: string, chartColor: string, feature: any = undefined) {\n    // restaura o estado\n    const elements = this.global.getGlobal('active_chart_elements');\n\n    // procura o elemento\n    const id = elements.value.findIndex((el: any) => {\n      return el.dataId === dataId && el.chartColor === chartColor\n    });\n\n    // se achar, remove\n    if (id >= 0) {\n      elements.value.splice(id, 1);\n    }\n\n    // adiciona o novo elemento\n    elements.value.push({ dataId, chartColor, feature });\n\n    // restaura o estado\n    this.global.setGlobal(elements)\n  }\n\n  /**\n   * Remove um elemento do gráfico do estado global\n   */\n  removeChartElementFromGlobal(dataId: string, chartColor: string, feature: any = undefined) {\n    // remove o polígono a lista de elementos ativos\n    const elements = this.global.getGlobal('active_chart_elements');\n\n    // procura o elemento\n    const id = elements.value.findIndex((el: any) => {\n      return el.dataId === dataId && el.chartColor === chartColor\n    });\n\n    // se achar, remove\n    if (id >= 0) {\n      elements.value.splice(id, 1);\n    }\n\n    // atualiza o estado\n    this.global.setGlobal(elements)\n  }\n\n  /**\n   * Atualiza o mapa depois de um evento de zoom ou pan\n   */\n  onMoveEnded() {\n    // atualiza o heatmap\n    this.updateHeatmap();\n\n    // redesenha o elemento map dos gráficos\n    this.updateLineChart('map', '#AAAAAA');\n    this.updateBarChart('map', '#AAAAAA');\n\n    // TODO: atualizar a heat matrix com base no zoom\n    this.updateHeatmatrix();\n  }\n\n  /**\n   * Atualiza os gráficos após a criação de uma seleções do mapa\n   */\n  onPolyCreated(event: any) {\n    const color = event.options.color;\n    const poly = event._latlngs[0];\n\n    // barchart e linechart da seleção geométrica\n    this.updateLineChart('geometry', color, poly);\n    this.updateBarChart('geometry', color, poly);\n\n    // adiciona ao estado global\n    this.addChartElementToGlobal('geometry', color, poly);\n  }\n\n  /**\n   * Atualiza os gráficos após a remoção de uma seleções do mapa\n   */\n  onPolyRemoved(event: any) {\n    const color = event.options.color;\n\n    const line_params = this.global.getGlobal('line_params').value;\n    for (const param of line_params) {\n      this.line.clearChart(param.id, 'geometry', color);\n    }\n\n    const bar_params = this.global.getGlobal('bar_params').value;\n    const lmap = this.global.getGlobal('label_maps').value;\n\n    for (const param of bar_params) {\n      this.bar.clearChart(param.id, 'geometry', color, lmap, this.map.getZoom());\n    }\n\n    // remove do estado global\n    this.removeChartElementFromGlobal('geometry', color);\n  }\n\n  /**\n   * Atualiza os gráficos após a seleção de um pin do mapa\n   */\n  onMarkerAdded(event: any) {\n    const cod = event.cod;\n    const color = event.color;\n    const name = event.nome.replace(/_/g, ' ');\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    this.chartsElements.cods.push(cod);\n    this.chartsElements.colors.push(color);\n    this.chartsElements.names.push(name);\n    // barchart e linechart do marker\n    this.updateLineChart('client', color, cod, name);\n    if(selectedClientOption == 'viaipe') {\n      this.bar.updateColor(color, cod, true);\n    } else {\n      this.updateBarChart('client', color, cod, name);\n    }\n    // adiciona ao estado global\n    this.addChartElementToGlobal('client', color, cod);\n  }\n\n  /**\n   * Atualiza os gráficos após a remoção de um pin do mapa\n   */\n  onMarkerRemoved(event: any) {\n    const color = event.color;\n    const cod = event.cod;\n    const name = event.nome.replace(/_/g, ' ');\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n\n    this.chartsElements.colors = this.chartsElements.colors.filter((e:any) => e !== color);\n    this.chartsElements.cods = this.chartsElements.cods.filter((e:any) => e !== cod);\n    this.chartsElements.names = this.chartsElements.names.filter((e:any) => e !== name);\n\n    const line_params = this.global.getGlobal('line_params').value;\n    const bar_params = this.global.getGlobal('bar_params').value;\n    const lmap = this.global.getGlobal('label_maps').value;\n    \n    if(selectedClientOption !== 'viaipe') {\n      for (const param of line_params) {\n        this.line.clearChart(param.id, 'client', color);\n      }\n\n      for (const param of bar_params) {\n        this.bar.clearChart(param.id, 'client', color, lmap, this.map.getZoom());\n      }\n    } else {\n      this.line.clearChart('viaipe', 'client', color);\n      this.bar.updateColor(color, cod, false);\n    }\n\n    // remove do estado global\n    this.removeChartElementFromGlobal('client', color);\n  }\n\n  /**\n   * Atualiza os gráficos após a criação de um filtro\n   */\n  onFiltersDefined(clientData: any) {\n    this.map.drawFilterMarkers(clientData);\n\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    if(selectedClientOption == 'viaipe') {\n      for(let i = 0; i < clientData.length; i++) {\n        this.bar.updateColor(this.global.getGlobal('filter_color').value, clientData[i].cod, true);\n      }\n    } else {\n      this.updateBarChart('filter', this.global.getGlobal('filter_color').value);\n    }\n    this.updateLineChart('filter', this.global.getGlobal('filter_color').value);\n    // adiciona ao estado global\n    this.addChartElementToGlobal('filter', this.global.getGlobal('filter_color').value, clientData);\n  }\n\n  /**\n   * Atualiza os gráficos após a remoção de um filtro\n   */\n  onFiltersRemoved() {\n    this.map.eraseFilterMarkers();\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n\n    if(selectedClientOption == 'viaipe') {\n      this.line.clearChart('viaipe', 'filter', this.global.getGlobal('filter_color').value);\n      this.bar.removeFilters();\n    } else {\n      const line_params = this.global.getGlobal('line_params').value;\n      for (const param of line_params) {\n        this.line.clearChart(param.id, 'filter', this.global.getGlobal('filter_color').value);\n      }\n  \n      const bar_params = this.global.getGlobal('bar_params').value;\n      const lmap = this.global.getGlobal('label_maps').value;\n  \n      for (const param of bar_params) {\n        this.bar.clearChart(param.id, 'filter', this.global.getGlobal('filter_color').value, lmap, this.map.getZoom());\n      }\n    }\n\n    // remove do estado global\n    this.removeChartElementFromGlobal('filter', this.global.getGlobal('filter_color').value);\n  }\n\n  /**\n   * Atualiza o critério de groupby do barchart\n   */\n  onBarSelectedChanged() {\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    const param = this.global.getGlobal('bar_params_value').value;\n    if(selectedClientOption == 'viaipe') {\n      this.bar.barChart.clear();\n      for (let paramId of Object.keys(this.bar.rawData['viaipe'])) {\n        if(paramId == 'map') this.updateBarChart(paramId, '#AAAAAA');\n        else {\n          for(let i = 0; i < this.chartsElements.cods.length; i++) {\n            const color = this.chartsElements.colors[i];\n            const cod = this.chartsElements.cods[i];\n            const name = this.chartsElements.names[i];\n            this.updateBarChart(paramId, color, cod, name);\n          }\n        }\n      }      \n    } else {\n      this.bar.drawChart(param, undefined, this.map.getZoom());\n    }\n  };\n\n  /**\n   * Atualiza o from de saída do linechart\n   */\n   onLineSelectedChanged(){\n    const param = this.global.getGlobal('line_params_value').value;\n    const selectedParam = this.global.getGlobal('line_selected_params_value').value;\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    \n    if(selectedClientOption == 'viaipe') {\n      for (let paramId of Object.keys(this.line.rawData['viaipe'])) {\n        if(paramId == 'map') { \n          this.updateLineChart(paramId, '#AAAAAA');\n        } else {\n          for(let i = 0; i < this.chartsElements.cods.length; i++) {\n            const color = this.chartsElements.colors[i];\n            const cod = this.chartsElements.cods[i];\n            const name = this.chartsElements.names[i];\n            this.updateLineChart(paramId, color, cod, name, 'data change');\n          }\n        }\n      }\n    }\n  }\n\n  onFunctionsChartReset() {\n    this.func.clearSeries();\n    (document.getElementById('functions-chart-options') as HTMLInputElement).value = \"cdf\";\n    (document.getElementById('functions-chart-select-value-options') as HTMLInputElement).value = \"all\"\n    const functions_param = {\n      key: \"functions_param\",\n      value: \"cdf\"\n    };\n    this.global.setGlobal(functions_param);\n    const functions_value = {\n      key: \"functions_value\",\n      value: 'all'\n    };\n    this.global.setGlobal(functions_value);\n    this.func.functionsChart.setConfig(functions_param.value);\n    this.func.setMultipleSelectConfiguration();\n    this.func.setCombinedMultipleSelectConfiguration();\n    this.updateFunctionsChart();\n  }\n  /**\n   * Atualiza o período de tempo ativo das visualizações\n   */\n  async onChartTimeChanged(delta: number) {\n    // reseta o tempo\n    if (delta === 5) {\n      const bounds = this.global.getGlobal('bounds_time');\n\n      let tsT0 = this.global.getGlobal(\"t0_vis\");\n      tsT0.value = bounds.value[0];\n      this.global.setGlobal(tsT0);\n\n      let tsT1 = this.global.getGlobal(\"t1_vis\");\n      tsT1.value = bounds.value[1];\n      this.global.setGlobal(tsT1);\n    }\n\n    // atualiza o range de tempo dos gráficcos\n    this.updateChartsTimeRange(delta)\n    // redesenha todos os gráficos\n    this.redrawAllCharts();\n  }\n\n  /**\n   * Intervalo de tempo usado na montagem da consulta\n   */\n  getTime(dataId: string = 'map') {\n    const t0Str = dataId === 'filter' ? 't0_filter' : 't0_vis';\n    const t1Str = dataId === 'filter' ? 't1_filter' : 't1_vis';\n\n    let tsT0 = this.global.getGlobal(t0Str);\n    let tsT1 = this.global.getGlobal(t1Str);\n    let list = [];\n    list.push(\"time\");\n    list.push(\"between\");\n\n    list.push(tsT0.value);\n    list.push(tsT1.value);\n\n    return list;\n  }\n\n  /**\n   * Atualiza o intervalo de tempo dos gráficos\n   */\n  updateChartsTimeRange(id: number) {\n    let tsT0 = this.global.getGlobal(\"t0_vis\");\n    let tsT1 = this.global.getGlobal(\"t1_vis\");\n\n    let d = (tsT1.value - tsT0.value);\n\n    let small = 20;\n    let midi = 10;\n    let large = 2;\n\n    if (id == 1) {\n      d = d / small;\n    } else if (id == -1) {\n      d = - d / small;\n    } else if (id == 2) {\n      d = d / midi;\n    } else if (id == -2) {\n      d = - d / midi;\n    } else if (id == 3) {\n      d = d / large;\n    } else if (id == -3) {\n      d = - d / large;\n    }\n    else if (id == 4) {\n      d >>= 1;\n      let tmid = tsT0.value + d;\n      d >>= 1;\n      let t0 = tmid - d;\n      let t1 = tmid + d;\n      if (t0 >= t1) t1 = t0 + 1;\n      tsT0.value = t0;\n      tsT1.value = t1;\n      d = 0;\n    }\n    else if (id == -4) {\n      d >>= 1;\n      let tmid = tsT0.value + d;\n      d <<= 1;\n      let t0 = tmid - d;\n      let t1 = tmid + d;\n      if (t0 >= t1) t1 = t0 + 1;\n      tsT0.value = t0;\n      tsT1.value = t1;\n      d = 0;\n    }\n    else if (id == 5) {\n      d = 0;\n    }\n\n    d = Math.floor(d);\n    let xt0 = tsT0.value + d;\n    let xt1 = tsT1.value + d;\n    let tnice = this.util.time_nice(xt0, xt1);\n\n    const sDate = new Date(0);\n    sDate.setUTCSeconds(tnice.t0)\n    const eDate = new Date(0);\n    eDate.setUTCSeconds(tnice.t1)\n\n    console.log('#### New time range ############################')\n    console.log(sDate.toUTCString(), eDate.toUTCString());\n\n    tsT0.value = tnice.t0;\n    tsT1.value = tnice.t1;\n    this.global.setGlobal(tsT0);\n    this.global.setGlobal(tsT1);\n  }\n\n  /**\n   * Função que faz o request dos heatmaps.\n   */\n  async updateHeatmap() {\n    this.map.removeCurrentHeatmapLayer();\n\n    if(this.map.getZoom() > 12) {\n      const location = this.map.getLocation();\n      const time = this.getTime();\n      this.spinner.show();\n      const res = await this.api.requestHeatMap(location, time);\n      this.map.drawHeatMap(res);\n      this.spinner.hide();\n    }\n  }\n\n  async updateBarChart(dataId: string, chartColor: string, feat: any = undefined, name: any = undefined) {\n    const time = this.getTime(dataId);\n    const location = (dataId === 'geometry') ?\n      this.map.getPoly(feat) : this.map.getLocation();\n\n    let client = undefined;\n    if (dataId === 'filter') {\n      client = this.filters.getClients();\n    }\n    if (dataId === 'client') {\n      client = this.map.getClient(feat);\n    }\n\n    const data: any = {};\n    const bar_params = this.global.getGlobal('bar_params').value;\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    const selectedValue = this.global.getGlobal('bar_params_value').value;\n    let zoom;\n    let lmap;\n    let param;\n    let res;\n    if(selectedClientOption == 'popdf') {\n      for (const param of bar_params) {\n        res = await this.api.requestBarChart(location, time, client, param, selectedClientOption);\n        data[param.id] = res;\n        lmap = this.global.getGlobal('label_maps').value;\n      }\n      param = this.global.getGlobal('bar_params_value').value;\n    } else {\n      zoom = this.map.getZoom();      \n      res = await this.api.requestBarChart(location, time, client, selectedValue, selectedClientOption, zoom);\n      param = selectedClientOption;\n      data['viaipe'] = res;\n      lmap = {'viaipe': {}};\n    }\n    if(Object.keys(res.result).length) {\n      this.bar.updateData(data, dataId, chartColor, lmap, zoom);\n      this.bar.drawChart(param, name, zoom);\n    }\n  }\n\n  async updateLineChart(dataId: string, chartColor: string, feat: any = undefined, name: any = undefined, from: any = undefined) {\n    const time = this.getTime(dataId);\n    const location = (dataId === 'geometry') ?\n      this.map.getPoly(feat) : this.map.getLocation();\n\n    let client = undefined;\n    if (dataId === 'filter') {\n      client = this.filters.getClients();\n    }\n    if (dataId === 'client') {\n      client = this.map.getClient(feat);\n    }\n\n    const data: any = {};\n    let res;\n    const line_params = this.global.getGlobal('line_params').value;\n    const selectedParam = this.global.getGlobal('line_selected_params_value').value;\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    let param;\n    if(selectedClientOption == 'popdf') {\n      for (const param of line_params) {\n        res = await this.api.requestLineChart(location, time, client, param, selectedClientOption);\n        data[param.id] = res;\n      }    \n      param = this.global.getGlobal('line_params_value').value;\n    } else {\n      res = await this.api.requestLineChart(location, time, client, selectedParam, selectedClientOption);\n      param = 'viaipe'\n      data['viaipe'] = res;\n    }\n\n    if(Object.keys(res.result).length) {\n      this.line.updateData(data, dataId, chartColor);\n      this.line.drawChart(param, selectedParam, name);\n    }\n  }\n\n  async updateHeatmatrix() {\n    let tsT0 = this.global.getGlobal(\"t0_vis\").value;\n    let tsT1 = this.global.getGlobal(\"t1_vis\").value;\n\n    const selectedParam = parseInt(this.global.getGlobal('heatmatrix_param').value);\n    const selectedValue = this.global.getGlobal('heatmatrix_value').value;\n    const capitals = this.global.getGlobal('state_capitals').value.default;\n    const clicked = this.global.getGlobal(\"clicked_element\").value;\n\n    const dataType = this.global.getGlobal(\"data_type\").value;\n    if(dataType == \"popxpop\") {\n      const res = await this.api.requestHeatmatrix(selectedParam, selectedValue, tsT0, tsT1, clicked);\n      const data = JSON.parse(res).result;\n      \n      this.net.drawChart(data, capitals, clicked, selectedParam != 77, dataType);\n    } else {\n      const services = this.global.getGlobal(\"services\").value.default;\n      const res = await this.api.requestHeatmatrix('rnp_services', 'havg', tsT0, tsT1, clicked);\n      const data = JSON.parse(res).result;\n      \n      this.net.drawChart(data, capitals, clicked, selectedParam != 77, dataType, services);\n    }\n  }\n\n  //atualiza quando selecionado agregado\n  async updateFunctionsChart() {\n    this.spinner.show();\n    let tsT0 = this.global.getGlobal(\"t0_vis\").value;\n    let tsT1 = this.global.getGlobal(\"t1_vis\").value;\n    const selectedParam = this.global.getGlobal('functions_param').value;\n    const clicked = this.global.getGlobal(\"clicked_element\").value;\n    const res = await this.api.requestFunctions(0, selectedParam,  tsT0, tsT1, clicked);\n    let data;\n    (clicked >= 0) ? data = res.result[`${clicked}`]['0'] : data = res.result['0']['0'];\n    const adaptedData = this.adaptData(data, \"functions\");\n    const selectedData:any = [[-1,[adaptedData]]];\n    this.func.updateFunctionsChartData(selectedData, clicked);\n    this.spinner.hide();\n  }\n\n  //atualiza quando selecionado um servico individualmente\n  async updateFunctionsChartService(event: any) {\n    this.spinner.show();\n    let tsT0 = this.global.getGlobal(\"t0_vis\").value;\n    let tsT1 = this.global.getGlobal(\"t1_vis\").value;\n    const selectedParam = this.global.getGlobal('functions_param').value;\n    const clicked = this.global.getGlobal(\"clicked_element\").value;\n    const selectedData:any = [];\n    if(selectedParam !== 'timeseries') {\n      for(let i = 0; i < event.length; i++) {\n        const res = await this.api.requestFunctions(event[i], selectedParam,  tsT0, tsT1, clicked);\n        let data;\n        let id;\n        event[i] == -1 ? id = 0 : id = event[i];\n        (clicked >= 0) ? data = res.result[`${clicked}`][`${id}`] : data = res.result['0'][`${id}`];\n        const adaptedData = this.adaptData(data, \"functions\");\n        selectedData[i] = [event[i],[adaptedData]];\n      }  \n    } else {\n      for(let i = 0; i < event.length; i++) {\n        if(this.func.isPopSelected()) {\n          const selectedValue = (document.getElementById('functions-chart-select-timeseries-popxpop-value-options') as HTMLInputElement).value;\n          const res = await this.api.requestTimeseries(selectedValue, \"h_avg\", tsT0, tsT1, clicked);\n          const data = JSON.parse(res).result;\n          const adaptedData = this.adaptData(data, \"timeseries\", event[i]);\n          selectedData[i] = [event[i],[adaptedData]];\n        } else {\n          const res = await this.api.requestTimeseries(10, \"havg\", tsT0, tsT1, clicked, \"rnp_services\");\n          const data = JSON.parse(res).result;\n          const adaptedData = this.adaptData(data, \"timeseries\", event[i]);\n          selectedData[i] = [event[i],[adaptedData]];\n        }\n      }\n    }\n    this.func.updateFunctionsChartData(selectedData, clicked);\n    this.spinner.hide();\n  }\n\n  //atualiza quando esta selecionada a opcao de n pops x n servicos\n  async updateFunctionsCombinations(event: any) {\n    this.spinner.show();\n    const tsT0 = this.global.getGlobal(\"t0_vis\").value;\n    const tsT1 = this.global.getGlobal(\"t1_vis\").value;\n    const selectedParam = this.global.getGlobal('functions_param').value;\n    \n    const selectedData:any = [];\n    for(let i  = 0; i < event.length; i++) {\n      let pop = event[i].codPop;\n      let service = event[i].codService;\n      let data;\n      let res;\n      if(selectedParam !== \"timeseries\") {\n        res = await this.api.requestFunctions(service, selectedParam,  tsT0, tsT1, pop);\n        if(pop >= 0 && service >= 0) {\n          data = res.result[`${pop}`][`${service}`];\n        } else if(pop == -1 && service >= 0) {\n          data = res.result['0'][`${service}`];\n        } else if(pop >= 0 && service == -1) {\n          data = res.result[`${pop}`]['0'];\n        } else {\n          data = res.result['0']['0'];\n        }\n        const adaptedData = this.adaptData(data, \"functions\");\n        selectedData[i] = [event[i],[adaptedData]];\n      }\n      else {\n        let selectedValue;\n        if(this.func.isPopSelected()) {\n          selectedValue = (document.getElementById('functions-chart-select-timeseries-popxpop-value-options') as HTMLInputElement).value;\n          res = await this.api.requestTimeseries(selectedValue, \"h_avg\", tsT0, tsT1, pop)\n          data = JSON.parse(res).result\n        } else {\n          selectedValue = 10;\n          res = await this.api.requestTimeseries(selectedValue, \"havg\", tsT0, tsT1, pop, \"rnp_services\")\n          data = JSON.parse(res).result\n        }\n        const adaptedData = this.adaptData(data, \"timeseries\", service);\n        selectedData[i] = [event[i],[adaptedData]];\n      }\n    }\n    this.func.updateFunctionsCombinationsData(selectedData);\n    this.spinner.hide();\n  }\n\n  adaptData(data: any, from: string, secondParam: number = 0) {\n    const adaptedValues: any[] = [];\n    if(from == \"functions\") {\n      for(let i = 0; i < data.length; i++) {\n        adaptedValues.push({x: data[i][0], y: data[i][1]})\n      }\n    } else {\n      for(let i = 0; i < data.length; i++) {\n        let label = '';\n        let date = new Date(data[i][1] * 1000);\n        //@ts-ignore\n        label = date.toLocaleString('en-GB', { hour12: false, dateStyle: 'short', timeStyle: 'short', timeZone: 'UTC' }).split(', ')[0];\n        if(secondParam == data[i][0]) {\n          adaptedValues.push({x: label, y: data[i][2]});\n        }\n      }\n    }\n    const totalData = [adaptedValues];\n    return totalData;\n  }\n\n  async updateScattergl(event: any) {\n    this.spinner.show();\n    let selectedParam = event.value;\n    const added = event.added;\n    const statesIds = [];\n    const finalData = [];\n    const selectedValue = ['h_avg','h_min', 'h_max']\n    //usando a mesma query da heatmatrix\n    let tsT0 = this.global.getGlobal(\"t0_vis\").value;\n    let tsT1 = this.global.getGlobal(\"t1_vis\").value;\n    const clicked = this.global.getGlobal(\"clicked_element\").value;\n    if(event.added) {\n      for(let i = 0; i < selectedValue.length; i++) {\n        const res = await this.api.requestHeatmatrix(selectedParam, selectedValue[i], tsT0, tsT1, clicked);\n        const data = JSON.parse(res).result;\n        let dataList = []\n        for(let k = 0; k < data.length; k++) {\n          dataList.push(data[k][2])\n        }\n        finalData.push(dataList);\n      }\n    } else {\n      //dummy request para o spinner funcionar\n      const res = await this.api.getConfig();\n    }\n    this.scattergl.updateScatterglData(selectedParam, added, finalData);\n    this.spinner.hide();\n  }\n\n  onAreaSelected(indices: number[]) {\n    if(indices.length > 0) {\n        this.net.highlightHeatmatrix(indices);\n    } else {\n      this.net.removeHighlightHeatmatrix();\n    }\n  }\n\n  onHighlightRemoved() {\n    this.net.removeHighlightHeatmatrix();\n  }\n\n  onClientsSet(event: any) {\n    if(event == 'add') {\n      const clicked = this.global.getGlobal(\"clicked_element\").value;\n      const capitals = this.global.getGlobal('state_capitals').value.default;\n      const capital = capitals.filter((c: any) => c.cod === clicked)[0].id;\n      this.filters.setClients(capital);\n    } else {\n      this.filters.removeClients();\n    }\n  }\n\n  isHeatmatrixSelected() {\n    return this.global.getGlobal(\"network_param\").value > 0;\n  }\n}\n","<div id=\"rnp-inicio-screen\" class=\"home\">\n\n  <ngx-spinner size=\"medium\" type=\"ball-clip-rotate\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\n\n  <div class=\"row home-map-row\">\n    <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 fill\" style=\"padding: 0px !important;\">\n      <app-map #appMap\n      (moveEndedEvent) = \"this.onMoveEnded()\"\n      (polyCreatedEvent) = \"this.onPolyCreated($event)\"\n      (polyEditedEvent) = \"this.onPolyCreated($event)\"\n      (polyRemovedEvent) = \"this.onPolyRemoved($event)\"\n      (markerAddedEvent) = \"this.onMarkerAdded($event)\"\n      (markerRemovedEvent) = \"this.onMarkerRemoved($event)\"\n      (resetFunctionsChart) = \"this.onFunctionsChartReset()\"\n      (setClients) = \"this.onClientsSet($event)\"\n      ></app-map>\n    </div>\n  </div>\n\n  <app-charts-bar class=\"charts-menu\"></app-charts-bar>\n\n  <div ngDraggable class=\"widget bar-chart-window\"\n  [style.z-index] = \"this.isChartVisible('bar') ? this.chartZindex('bar') : '-10' \"\n  (started)=\"this.moving = 'bar'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'bar'\">\n    <app-bar-chart #appBarChart\n    (barParamChanged) = \"this.onBarSelectedChanged()\"\n    ></app-bar-chart>\n  </div>\n\n  <div ngDraggable class=\"widget line-chart-window\"\n  [style.z-index] = \"this.isChartVisible('line') ? this.chartZindex('line') : '-10' \"\n  (started)=\"this.moving = 'line'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'line'\">\n    <app-line-chart #appLineChart\n    (lineParamChanged) = \"this.onLineSelectedChanged()\"\n    (lineValueChanged) = \"this.onLineSelectedChanged()\"\n    ></app-line-chart>\n  </div>\n\n  <div ngDraggable class=\"widget\"\n  [class]=\"this.isHeatmatrixSelected() ? 'network-heatmatrix-window' : 'network-timeseries-window'\"\n  [style.z-index] = \"this.isChartVisible('net') ? this.chartZindex('net') : '-10' \"\n  (started)=\"this.moving = 'net'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'net'\">\n    <app-network #appNetworkChart \n    (heatMatrixValueChanged) = \"this.updateHeatmatrix();\"\n    (heatMatrixParamChanged) = \"this.updateHeatmatrix();\"\n    ></app-network>\n\n  </div>\n  <div ngDraggable class=\"widget functions-chart-window\"\n    [style.z-index] = \"this.isChartVisible('net') ? this.chartZindex('net') : '-10' \"\n    (started)=\"this.moving = 'net'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'net'\">\n    <app-functions-chart #appFunctionsChart\n      (functionsParamChanged) = \"this.updateFunctionsChart();\"\n      (functionsValueChanged) = \"this.updateFunctionsChart();\"\n      (onItemSelected) = \"this.updateFunctionsChartService($event);\"\n      (onCombinedChange) = \"this.updateFunctionsCombinations($event);\"\n    ></app-functions-chart>\n  </div>\n  <div ngDraggable class=\"widget scattergl-window\"\n  [style.z-index] = \"this.isChartVisible('scattergl') ? this.chartZindex('scattergl') : '-10' \"\n  (started)=\"this.moving = 'scattergl'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'scattergl'\">\n    <app-scattergl #appScatterglChart\n    (onAreaSelect) = \"this.onAreaSelected($event)\"\n    (removeAreaSelection) = \"this.onHighlightRemoved();\"\n    (onParamSelected) = \"this.updateScattergl($event);\"\n    (onTimeBoundsChanged) = \"this.updateScattergl($event);\"\n    ></app-scattergl>\n  </div>\n\n  <div ngDraggable style=\"position: absolute; top: 400px; left: 10px; width: 200px; z-index: 900;\"\n  [style.z-index] = \"this.isChartVisible('alerts') ? this.chartZindex('alerts') : '-10' \"\n  (started)=\"this.moving = 'alerts'; this.last = 'none'\" (stopped)=\"this.moving = 'none'; this.last = 'alerts'\">\n    <app-alerts #appAlerts></app-alerts>\n  </div>\n\n  <div style=\"position: absolute; width: 400px; bottom: 10px; left: 10px; z-index: -10;\"\n  [style.z-index] = \"this.isConfigVisible('filters') ? this.chartZindex('filters') : '-10'\">\n    <app-filters #appFilters\n    (filtersDefined) = \"this.onFiltersDefined($event)\"\n    (filtersRemoved) = \"this.onFiltersRemoved()\"></app-filters>\n  </div>\n\n  <div class=\"dates\">\n    <div class=\"date\" style=\"border-style: solid; border-width: 0px 2px 0px 0px; border-color: #bfbfbf;\">\n      {{t0}}\n    </div>\n    <div class=\"date\">\n      {{t1}}\n    </div>\n  </div>\n  <app-time-bar class=\"time-menu\"\n    (chartTimeChanged) = \"this.onChartTimeChanged($event)\">\n  </app-time-bar> \n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backend: ''\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { GlobalService } from './global.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor(public global: GlobalService) { }\n\n  /**\n   * Converte \"tile\" em longitude.\n   */\n  tile2long(x: number, z: number) {\n    return (x / Math.pow(2, z) * 360 - 180);\n  }\n\n  /**\n   * Converte \"tile\" em latitude.\n   */\n  tile2lat(y: number, z: number) {\n    var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n    return (180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))));\n  }\n\n  /**\n   * Converte \"tile\" em longitude média.\n   */\n  tile2longX(x: number, z: number) {\n    let c1 = this.tile2long(x, z);\n    let c2 = this.tile2long(x + 1, z);\n    return (c1 + c2) / 2;\n  }\n\n  /**\n   * Converte \"tile\" em latitude média.\n   */\n  tile2latX(x: number, z: number) {\n    let c1 = this.tile2lat(x, z);\n    let c2 = this.tile2lat(x + 1, z);\n    return (c1 + c2) / 2;\n  }\n\n  /**\n   * Ajusta o intervalo da série temporal.\n   */\n  time_nice(t0: number, t1: number) {\n    let dt0 = new Date(0); // The 0 there is the key, which sets the date to the epoch\n    let Y0, M0, D0, h0, m0, s0;\n    dt0.setUTCSeconds(t0);\n    s0 = dt0.getSeconds();\n    m0 = dt0.getMinutes();\n    h0 = dt0.getHours();\n    D0 = dt0.getDate();\n    M0 = dt0.getMonth();\n    Y0 = dt0.getFullYear();\n\n    let dt1 = new Date(0); // The 0 there is the key, which sets the date to the epoch\n    let Y1, M1, D1, h1, m1, s1;\n    dt1.setUTCSeconds(t0);\n    s1 = dt1.getSeconds();\n    m1 = dt1.getMinutes();\n    h1 = dt1.getHours();\n    D1 = dt1.getDate();\n    M1 = dt1.getMonth();\n    Y1 = dt1.getFullYear();\n\n    let d = t1 - t0;\n    let changed = 0;\n    if (d < 180) {\n      if (s0 > 0) { t0 -= s0; s0 = 0; changed = 1; }\n      if (s1 > 0) { t1 += 60 - s1; s1 = 0; changed = 1; }\n    } else if (d < 600) {\n      if (s0 > 0) { t0 -= s0; s0 = 0; changed = 1; }\n      if (s1 > 0) { t1 += 60 - s1; s1 = 0; changed = 1; }\n      let x;\n      x = m0 % 5;\n      if (x != 0) { t0 -= x * 60; m0 -= x; changed = 1; }\n      x = m1 % 5;\n      if (x != 0) { t1 -= x * 60; m1 -= x; changed = 1; }\n    }\n\n    if (changed) {\n      let o0 = new Date(0);\n      o0.setSeconds(s0);\n      o0.setMinutes(m0);\n      o0.setHours(h0);\n      o0.setDate(D0);\n      o0.setMonth(M0);\n      o0.setFullYear(Y0);\n\n      let o1 = new Date(0);\n      o1.setSeconds(s1);\n      o1.setMinutes(m1);\n      o1.setHours(h1);\n      o1.setDate(D1);\n      o1.setMonth(M1);\n      o1.setFullYear(Y1);\n    }\n    return { t0: t0, t1: t1 };\n  }\n\n\n\n/**\n * Difine o intervalo de Y no gráfico inferior.\n */\n compute_best_unity(mn: any, mx: any) {\n  let div = 1;\n  let potencia = 0;\n  for (let i = 0; i < 20; i++) {\n    if (mx/div < 100) {\n      break;\n    }\n    potencia ++;\n    div *= 10;\n  }\n  potencia -= potencia % 3;\n  div = 1; for (let i=0;i<potencia;i++) div *= 10;\n\n  let prefixos = [ \"\", \"K x \", \"M x \", \"G x \", \"T x \", \"E x \", \"P x \" ];\n  let prefixo = prefixos[potencia/3];\n\n  let res = { prefix: prefixo, div: div, log: -1 };\n\n  // logaritmica ou nao\n  if (mn && mx/(mn+1) > 1000) {\n    res.log = 1;\n  } else {\n    res.log = 0;\n  }\n\n  return res;\n}\n\n  /**\n   * Converte segundos em data.\n   */\n  secondsToDate(seconds: number) {\n    var date = new Date(0);\n    date.setUTCSeconds(seconds);\n    return date;\n  }\n\n  /**\n   * Recupera URL base.\n   */\n  getUrlBase() {\n    var getUrl = window.location;\n    return getUrl.protocol + \"//\" + getUrl.host;\n  }\n\n  /**\n   * Exibe o json usado nas requisições a API.\n   */\n  showTrace(title: string, json: any) {\n    let trace_mode = this.global.getGlobal(\"trace_mode\");\n    if (trace_mode.value) {\n      console.log(title);\n      console.log(JSON.stringify(json));\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as capitals from '../../assets/capitais.json';\nimport * as scatterglParams from '../../assets/parameters.json';\nimport * as services from '../../assets/servicos.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    /**\n     * Esquema usado para o armazenamento dos dados\n     */\n    const schema_info = {\n      key: \"schema_info\",\n      value: {}\n    };\n    this.setGlobal(schema_info);\n\n    /**\n     * Id da consulta usado pelo tiny cubes\n     */\n    const query_id = {\n      key: \"query_id\",\n      value: 1\n    };\n    this.setGlobal(query_id);\n\n    /**\n     * Elementos ativos nos gráficos\n     */\n    const active_chart_elements = {\n      key: \"active_chart_elements\",\n      value: []\n    };\n    this.setGlobal(active_chart_elements);\n\n    /**\n     * Domínio temporal dos dados.\n     */\n    const bounds_time = {\n      key: \"bounds_time\",\n      value: false\n    };\n    this.setGlobal(bounds_time);\n\n    /**\n     * Domínio espacial dos dados.\n     */\n    const bounds_geo = {\n      key: \"bounds_geo\",\n      value: false\n    };\n    this.setGlobal(bounds_geo);\n\n    /**\n     * Estabelece uma constante para um valor de zoom no mapa.\n     */\n    const geo_extra_zoom = {\n      key: \"geo_extra_zoom\",\n      value: 5\n    };\n    this.setGlobal(geo_extra_zoom);\n    /**\n     * Estabelece carregamento de dados para clientes\n     */\n    const client_option = {\n      key: \"client_option\",\n      value: \"viaipe\"\n    };\n    this.setGlobal(client_option);\n    /**\n     * Guarda o time inicial nas visualizações.\n     */\n    const t0_vis = {\n      key: \"t0_vis\",\n      value: undefined\n    };\n    this.setGlobal(t0_vis);\n\n    /**\n     * Guarda o time final nas visualizações.\n     */\n    const t1_vis = {\n      key: \"t1_vis\",\n      value: undefined\n    };\n    this.setGlobal(t1_vis);\n\n    /**\n     * Guarda o time inicial usado no filtro.\n     */\n    const t0_filter = {\n      key: \"t0_filter\",\n      value: undefined\n    };\n    this.setGlobal(t0_filter);\n\n    /**\n     * Guarda o time final usado no filtro.\n     */\n    const t1_filter = {\n      key: \"t1_filter\",\n      value: undefined\n    };\n    this.setGlobal(t1_filter);\n\n    /**\n     * Mapa de labels do barchart.\n     */\n    const label_maps = {\n      key: \"label_maps\",\n      value: {\n        'ttls': {},\n        'services': {}\n      }\n    };\n    this.setGlobal(label_maps);\n\n    /**\n     * Guarda o parametro selecionado no network chart quando mudado para heatmatrix ou timeseries\n     */\n     const network_param = {\n      key: \"network_param\",\n      value: 1\n    };\n    this.setGlobal(network_param);\n    /**\n     * Guarda as opções de from do bar chart.\n     */\n    const bar_params = {\n      key: \"bar_params\",\n      value: [\n        {id: 'ttls', from: 'ttls', groupBy: 'ttl',  select: [\"hsum\"]},\n        {id: 'services', from: 'serv', groupBy: 'serv', select: [\"hsum\"]}\n      ]\n    };\n    this.setGlobal(bar_params);\n\n    /**\n     * Guarda a seleção de from do bar chart.\n     */\n    const bar_params_value = {\n      key: \"bar_params_value\",\n      value: 'avg_in'\n    };\n    this.setGlobal(bar_params_value);\n\n    /**\n     * Guarda as opções de from do line chart.\n     */\n    const line_params = {\n      key: \"line_params\",\n      value: [\n        {id: 'packet_rate', from: 'ttls', groupBy: 'time', select: ['hsum'], caption: 'packet rate'},\n        {id: 'dns_in',  from: 'dns',  groupBy: 'time', select: ['total_ireq', 'total_ireq_off'], caption: 'dns requests received w/o answer'},\n        {id: 'dns_out', from: 'dns',  groupBy: 'time', select: ['total_oreq', 'total_oreq_off'], caption: 'dns requests sent w/o answer'},\n      ]\n    };\n    this.setGlobal(line_params);\n\n    /**\n     * Guarda a seleção de from do line chart.\n     */\n    const line_params_value = {\n      key: \"line_params_value\",\n      value: line_params.value[0].id\n    };\n    this.setGlobal(line_params_value);\n    \n    /**\n     * Guarda a seleção de average, max, min selecionado no line chart.\n     */   \n    const line_selected_params_value = {\n      key: \"line_selected_params_value\",\n      value: 'average'\n    };\n    this.setGlobal(line_selected_params_value);\n    /**\n     * Guarda a seleção de from do functions chart.\n     */\n     const functions_value = {\n      key: \"functions_value\",\n      service: 0,\n      value: \"all\"\n    };\n    this.setGlobal(functions_value);\n    \n    /**\n     * Guarda a seleção de average, max, min selecionado no functions chart.\n     */   \n    const functions_param = {\n      key: \"functions_param\",\n      value: 'cdf'\n    };\n    this.setGlobal(functions_param);\n    /**\n     * Guarda a seleção dos parametros para a heatmatrix\n     */       \n      const heatmatrix_param = {\n      key: \"heatmatrix_param\",\n      value: \"11\",\n    };\n    this.setGlobal(heatmatrix_param);\n\n    /**\n     * Guarda a seleção dos valores para a heatmatrix\n     */       \n    const heatmatrix_value = {\n      key: \"heatmatrix_value\",\n      value: \"h_avg\",\n    };\n    this.setGlobal(heatmatrix_value);\n    /**\n    * Guarda a seleção dos valores para a heatmatrix\n    */       \n    const scattergl_options = {\n      key: \"scattergl_options\",\n      value: 0,\n      param: 0,\n      invert: true\n    };\n    this.setGlobal(scattergl_options);\n    /**\n     * Estabelece uma lista de cores.\n     */\n     const draw_colors = {\n      key: \"draw_colors\",\n      value: [\n        '#1F77B4', '#2CA02C', '#9467BD', '#8C564B', '#E377C2',\n        '#AEC7E8', '#98DF8A', '#C5B0D5', '#C49C94', '#F7B6D2'\n      ]\n    };\n    this.setGlobal(draw_colors);\n\n    /**\n     * Lista de cores usadas.\n     */\n     const used_draw_colors = {\n      key: \"used_draw_colors\",\n      value: []\n    };\n    this.setGlobal(used_draw_colors);\n\n    /**\n     * Guarda a cor atual.\n     */\n    const draw_color_index = {\n      key: \"draw_color_index\",\n      value: 0\n    };\n    this.setGlobal(draw_color_index);\n\n    /**\n     * Guarda a cor do elemento não selecionado.\n     */\n     const unselected_color = {\n      key: 'unselected_color',\n      value: '##CCC'\n    }\n    this.setGlobal(unselected_color);\n    \n    /**\n     * Guarda a as capitais e suas localizações.\n     */\n     const state_capitals =  {\n       key: 'state_capitals',\n       value: capitals\n     }\n     this.setGlobal(state_capitals);\n    /**\n     * Guarda os serviços e seus nomes.\n     */\n    const companies_services =  {\n      key: 'services',\n      value: services\n    }\n    this.setGlobal(companies_services);\n    /**\n     * Guarda tipo selecionado popxpop ou popxservices p heatmatrix\n     */\n    const data_type =  {\n      key: 'data_type',\n      value: 'popxpop'\n    }\n    this.setGlobal(data_type);\n     /**\n      * Guarda os parâmetros a serem utilizados para o scattergl no multiselect\n      */\n     const scattergl_params =  {\n      key: 'scattergl_params',\n      value: scatterglParams\n    }\n    this.setGlobal(scattergl_params);    \n    /**\n     * Guarda se o click foi no botão de reset zoom ou algum pin de capital\n     */\n\n    const clicked_element = {\n      key: 'clicked_element',\n      value: -1\n    }\n    this.setGlobal(clicked_element);\n    /**\n     * Guarda a cor do filtro.\n     */\n     const filter_color = {\n      key: 'filter_color',\n      value: '#FF7F0E'\n    }\n    this.setGlobal(filter_color);\n\n    /**\n     * Guarda a cor do outlier.\n     */\n     const outlier_color = {\n      key: 'outlier_color',\n      value: '#D62728'\n    }\n    this.setGlobal(outlier_color);\n\n    /**\n     * Guarta a lista de clientes\n     */\n    const list_clientes = {\n      key: \"list_clientes\",\n      value: []\n    }\n    this.setGlobal(list_clientes);\n\n    /**\n     * Guarda a lista de ips\n     */\n     const list_ips = {\n      key: \"list_ips\",\n      value: []\n    }\n    this.setGlobal(list_ips);\n\n    /**\n     * Estado das janelas dos gráficos\n     */\n    const widgets_charts = {\n      key: \"widgets_charts\",\n      value: { 'line': false, 'bar': false, 'alerts': false, 'hasAlert': false, 'net': false }\n    }\n    this.setGlobal(widgets_charts);\n\n    /**\n     * Estado das janelas de configuração\n     */\n    const widgets_config = {\n      key: \"widgets_config\",\n      value: { 'filters': false }\n    }\n    this.setGlobal(widgets_config);\n\n    /**\n     * Modo de debug.\n     */\n    const trace_mode = {\n      key: \"trace_mode\",\n      value: true\n    };\n    this.setGlobal(trace_mode);\n  }\n\n  /**\n   * Recupera a variavél global gravada na sessão.\n   */\n  getGlobal(key: string): any {\n    // invalid key\n    if (key === null) {\n      console.log(`getGlobal --> Ivalid key: ${key}`);\n      return undefined;\n    }\n\n    // item not found\n    const value = sessionStorage.getItem(key);\n    if (value === null) {\n      console.log(`getGlobal --> Key not found: ${key}`);\n      return undefined;\n    }\n\n    return JSON.parse(value);\n  }\n\n  /**\n   * Grava a varavél global na sessão.\n   */\n  setGlobal(object: any) {\n    sessionStorage.setItem(object.key, JSON.stringify(object));\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from 'src/app/shared/global.service';\n\n@Component({\n  selector: 'app-charts-bar',\n  templateUrl: './charts-bar.component.html',\n  styleUrls: ['./charts-bar.component.css']\n})\nexport class ChartsBarComponent implements OnInit {\n\n  constructor(public global: GlobalService) {}\n\n  ngOnInit(): void {}\n\n  toggleChartVisibility(chartId: string) {\n    const obj = this.global.getGlobal('widgets_charts');\n\n    obj.value[chartId] = !obj.value[chartId];\n    this.global.setGlobal(obj);\n  }\n\n  isChartVisible(chartId: string): boolean {\n    const obj = this.global.getGlobal('widgets_charts');\n    return obj.value[chartId];\n  }\n\n  setChartsPosition() {\n    const obj = this.global.getGlobal('widgets_charts').value;\n    const barDiv = document.querySelectorAll<HTMLElement>(\".bar-chart-window\")[0];\n    const lineDiv = document.querySelectorAll<HTMLElement>(\".line-chart-window\")[0];\n    const netDiv = document.querySelectorAll<HTMLElement>(\".network-window\")[0];\n  }\n\n  setAlertColor() {\n    const obj = this.global.getGlobal('widgets_charts');\n    if(obj.value['hasAlert']) {\n      return '#F51720';\n    }\n    else {\n      if(obj.value['alerts']) return '#243d8f';\n      else return '#000';\n    } \n  }\n  \n  toggleConfigVisibility(configId: string) {\n    const obj = this.global.getGlobal('widgets_config');\n\n    obj.value[configId] = !obj.value[configId];\n    this.global.setGlobal(obj);\n  }\n\n  isConfigVisible(configId: string): boolean {\n    const obj = this.global.getGlobal('widgets_config');\n    return obj.value[configId];\n  }\n\n  clickedCheck() {\n    const clicked = this.global.getGlobal(\"clicked_element\").value;\n    if(clicked > -1) return true;\n    else return false;\n  }\n}\n","<div class=\"row\" (click)=\"this.setChartsPosition()\">\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleChartVisibility('alerts')\">\n    <span class=\"fas fa-exclamation fa-lg\" id=\"alerts\"\n    [style.color]=\"this.setAlertColor()\"></span>\n  </button>\n  <button class=\"btn btn-custom\" type=\"button\" [disabled]=\"!this.clickedCheck()\" (click)=\"this.toggleConfigVisibility('filters')\">\n    <span class=\"fas fa-filter fa-lg\"\n    [style.color]=\"this.isConfigVisible('filters') ? '#243d8f' : '#000' \"></span>\n  </button>\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleChartVisibility('bar')\">\n    <span class=\"fas fa-chart-bar fa-lg\"\n    [style.color]=\"this.isChartVisible('bar') ? '#243d8f' : '#000' \"></span>\n  </button>\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleChartVisibility('line')\">\n    <span class=\"fas fa-line-chart fa-lg\"\n    [style.color]=\"this.isChartVisible('line') ? '#243d8f' : '#000' \"></span>\n  </button>\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleChartVisibility('net')\">\n    <span class=\"fas fa-project-diagram fa-lg\"\n    [style.color]=\"this.isChartVisible('net') ? '#243d8f' : '#000' \"></span>\n  </button>\n  <button class=\"btn btn-custom\" type=\"button\" (click)=\"this.toggleChartVisibility('scattergl')\">\n    <span class=\"fas fa-braille fa-lg\"\n    [style.color]=\"this.isChartVisible('scattergl') ? '#243d8f' : '#000' \"></span>\n  </button>\n</div>\n","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { ApiService } from 'src/app/shared/api.service';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\n// inclusão do metadado do viaipe\nimport * as viaipeMetadata from '../../../assets/viaipe_metadata.json';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.css']\n})\nexport class FiltersComponent implements OnInit {\n\n  @Output() filtersDefined = new EventEmitter<any>();\n  @Output() filtersRemoved = new EventEmitter();\n\n  @ViewChild(\"clientsInput\", { static: true }) private clientsInput!: ElementRef;\n\n  public clients: any = [];\n  public clientsSelection = [];\n\n  public dateRange: any = {start: null, end: null};\n\n  constructor(public global: GlobalService, public api: ApiService, public util: UtilService) {}\n\n  ngOnInit(): void {\n    this.clients = this.global.getGlobal('list_clientes').value;\n    console.log(this.clients)\n  }\n\n  toggleFiltersVisibility() {\n    const obj = this.global.getGlobal('widgets_config');\n\n    obj.value['filters'] = !obj.value['filters'];\n    this.global.setGlobal(obj);\n  }\n\n  setClients(client: string) {\n    //@ts-ignore\n    this.clients = {caption: `Clientes do POP ${client.toUpperCase()}`, items: viaipeMetadata['pops'][client]['clientes'] };\n  }\n\n  removeClients() {\n    this.clients = [];\n  }\n\n  getClients() {\n    let list = [];\n    list.push(\"cliente\");\n    list.push(\"eq\");\n\n    this.clientsSelection.forEach((client: any) => {\n      let found = this.clients.items.find((c: any) => c.caption === client);\n      if (found) {\n        list.push(parseInt(found.cod))\n      }\n    });\n\n    return list;\n  }\n\n  updateClientSelection(event: any) {\n    this.clientsSelection = event.target.value.split(',').filter( (d: string) => d.length > 0 );\n  }\n\n  getStartDate() {\n    let tsT0 = this.global.getGlobal(\"t0_filter\");\n\n    let start = new Date(tsT0.value * 1000);\n    return  start.toISOString().slice(0,-8).replace('T', ' # ');\n  }\n\n  getEndDate() {\n    let tsT1 = this.global.getGlobal(\"t1_filter\");\n\n    let end = new Date(tsT1.value * 1000);\n    return end.toISOString().slice(0,-8).replace('T', ' # ');\n  }\n\n  updateDate(dateId: string, event: any) {\n    this.dateRange[dateId] = event.target.value;\n  }\n\n  saveDate() {\n    let tsT0 = this.global.getGlobal(\"t0_filter\");\n    let tsT1 = this.global.getGlobal(\"t1_filter\");\n\n    if (this.dateRange['start']) {\n      const parts = this.dateRange['start'].split(' # ');\n\n      let start = new Date(`${parts[0]}T${parts[1]}:00Z`).getTime() / 1000;\n\n      if(start > tsT1.value) {\n        console.log('Invalid Filter Date: end < start.')\n        return\n      }\n\n      tsT0.value = start;\n      this.global.setGlobal(tsT0);\n    }\n\n    if (this.dateRange['end']) {\n      const parts = this.dateRange['end'].split(' # ');\n      let end = new Date(`${parts[0]}T${parts[1]}:00Z`).getTime() / 1000;\n\n      if(end < tsT0.value) {\n        console.log('Invalid Filter Date: end < start.')\n        return\n      }\n\n      tsT1.value = end;\n      this.global.setGlobal(tsT1);\n    }\n  }\n\n  saveFilters() {\n    if(!this.clientsSelection.length) {\n      console.log('Invalid Filter: empity client list.')\n      return;\n    }\n\n    const clientsList = this.clients.items;\n    const selectedClients = this.clientsSelection;\n\n    const clientsData = [];\n    for(let i = 0; i < selectedClients.length; i++) {\n      let client = clientsList.find((x: any) => x.caption === selectedClients[i]);\n      clientsData.push(client)\n    };\n\n    this.saveDate();\n    this.toggleFiltersVisibility();\n    this.filtersDefined.emit(clientsData);\n  }\n\n  removeFilters(clientsInput: any) {\n    clientsInput.value= '';\n    let t0 = this.global.getGlobal(\"t0_filter\");\n    let start = new Date(t0.value * 1000);\n    this.dateRange['start'] = start.toISOString().slice(0,-8).replace('T', ' # ');\n\n    let t1 = this.global.getGlobal(\"t1_filter\");\n    let end = new Date(t1.value * 1000);\n    this.dateRange['end'] = end.toISOString().slice(0,-8).replace('T', ' # ');\n\n    this.clientsSelection = [];\n\n    this.saveDate();\n    this.toggleFiltersVisibility();\n    this.filtersRemoved.emit();\n  }\n\n  onClickRefresh() {\n    const bnds = this.global.getGlobal(\"bounds_time\");\n\n    const tsT0 = this.global.getGlobal(\"t0_filter\");\n    const tsT1 = this.global.getGlobal(\"t1_filter\");\n\n    tsT0.value = bnds.value[0];\n    tsT1.value = bnds.value[1];\n\n    this.global.setGlobal(tsT0);\n    this.global.setGlobal(tsT1);\n  }\n\n  refreshAvailable() {\n    const bnds = this.global.getGlobal(\"bounds_time\");\n\n    const tsT0 = this.global.getGlobal(\"t0_filter\");\n    const tsT1 = this.global.getGlobal(\"t1_filter\");\n\n    return bnds.value[0] !== tsT0.value || bnds.value[1] !== tsT1.value;\n  }\n\n  clickedCheck() {\n    const clicked = this.global.getGlobal(\"clicked_element\").value;\n    if(clicked > -1) return true;\n    else return false;\n  }\n}\n","<div *ngIf=\"this.clickedCheck()\" class=\"modal-content\">\n\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title ng-binding\">Filters</h4>\n  </div>\n\n  <div class=\"modal-body\">\n\n    <div class=\"row\">Clients</div>\n\n    <div class=\"row\">\n      <input style=\"width: 100%\" type=\"email\" list=\"clientes\" multiple (keyup)='this.updateClientSelection($event)'\n        title=\"\" pattern=\"\" #clientsInput>\n      <datalist id=\"clientes\">\n        <option *ngFor=\"let el of this.clients.items\" [value]=\"el.caption\">\n      </datalist>\n    </div>\n\n    <div class=\"row\" style=\"height: 5px;\"></div>\n    <div class=\"row\">Date Range</div>\n\n    <div class=\"row\">\n      <div class=\"input-group input-daterange\">\n        <input type=\"text\" class=\"form-control\" [value]=\"this.getStartDate()\" (keyup)=\"this.updateDate('start', $event)\">\n        <div class=\"input-group-addon\">to</div>\n        <input type=\"text\" class=\"form-control\" [value]=\"this.getEndDate()\" (keyup)=\"this.updateDate('end', $event)\">\n        <div class=\"input-group-addon\" style=\"padding: 0;\">\n          <button class=\"btn btn-filter\" (click)='this.onClickRefresh()'>\n            <i class=\"fas fa-sync-alt fa-lg\" [style.color]=\"this.refreshAvailable() ? '#F97432' : '#AAAAAA'\"></i>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"row\" style=\"height: 20px;\"></div>\n    </div>\n\n  <div class=\"modal-footer\" style=\"padding-right: 0;\">\n    <button type=\"button\" class=\"btn btn-primary-color\" (click)=\"this.saveFilters()\">Save</button>\n    <button type=\"button\" class=\"btn btn-delete-color\" (click)=\"this.removeFilters(clientsInput)\">Delete</button>\n    <button type=\"button\" class=\"btn btn-secondary-color\" (click)=\"this.toggleFiltersVisibility()\">Cancel</button>\n  </div>\n</div>\n","<div class=\"modal-content\" >\n\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title ng-binding\">Alerts</h4>\n  </div>\n\n  <div class=\"modal-body\" >\n    <div class=\"row\">\n      <table class=\"table-striped customTable\" style=\"width: 100% !important;\">\n        <thead>\n          <tr style=\"height: 30px\">\n            <th>Unknown IPs</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let ip of this.ipsList\" style=\"height: 30px\">\n            <td>OTHERS: {{ip[0]}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"row\">\n\n    </div>\n\n  </div>\n<!--\n  <div class=\"modal-footer\">\n  </div> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\n\nimport { ApiService } from 'src/app/shared/api.service';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\n\n@Component({\n  selector: 'app-alerts',\n  templateUrl: './alerts.component.html',\n  styleUrls: ['./alerts.component.css']\n})\nexport class AlertsComponent implements OnInit {\n\n  public ipsList: string[] = [];\n\n  constructor(public global: GlobalService, public api: ApiService, public util: UtilService) { }\n\n  ngOnInit(): void {\n    const ips = this.global.getGlobal('list_ips');\n    const t0_vis = this.global.getGlobal('t0_vis').value * 1000;\n    const t1_vis = this.global.getGlobal('t1_vis').value * 1000;\n    for(let i = 0; i < ips.value.length; i++) {\n      let t0_ip = new Date(ips.value[i][1]).getTime();\n      let t1_ip = new Date(ips.value[i][2]).getTime();\n      //if(t0_ip >= t0_vis && t1_ip <= t1_vis) this.ipsList.push(ips.value[i]);\n      if(ips.value[i][3] == 1) this.ipsList.push(ips.value[i]);\n    };\n    if(this.ipsList.length) {\n      const obj = this.global.getGlobal('widgets_charts');\n\n      // obj.value['alerts'] = !obj.value['alerts'];\n      obj.value['hasAlert'] = true;\n      this.global.setGlobal(obj);\n    }\n  }\n\n  toggleFiltersVisibility() {\n    const obj = this.global.getGlobal('widgets_charts');\n\n    obj.value['alerts'] = !obj.value['alerts'];\n    this.global.setGlobal(obj);\n  }\n}\n","import * as d3 from 'd3';\nimport d3Tip from \"d3-tip\";\nimport { CategoryScale, Chart, Legend, LinearScale, LineController, LineElement, PointElement, Tooltip } from 'chart.js';\n\n\nexport class Network {\n  // chart data\n  protected _data: any = null;\n\n  // capitals\n  protected _capitals: any = null;\n\n  // services\n  protected _services: any = null;\n\n  // params\n  protected _isTime: boolean = false;\n  protected _invert: boolean = false;\n  protected _capitalId: number = 0;\n\n  // Chart div\n  protected _chartDiv: HTMLElement;\n  // Svg element\n  protected _svgCanvas: any = null;\n  // Group element\n  protected _svgGroup: any = null;\n\n  // margin object\n  protected _margin = { top: 40, right: 10, bottom: 50, left: 120 };\n\n  // svg width\n  protected _width: number = 800;\n  // charts height\n  protected _height: number = 600;\n\n  // scales\n  protected _inScale: any = null;\n  protected _outScale: any = null;\n  protected _cScale: any = null;\n\n  // axis\n  protected _xAxis: any = null;\n  protected _yAxis: any = null;\n\n  // axis labels\n  protected _xAxisLabel: any = null;\n  protected _yAxisLabel: any = null;\n\n  // title\n  protected _title: any = null;\n\n  // last rectangle stroke added\n  protected _lastIndices: number[] = [];\n\n  constructor(chartDiv: HTMLElement) {\n    this._chartDiv = chartDiv;\n\n    this.initSvgAndGroups();\n    this.initScalesAndAxes();\n\n    window.addEventListener('resize', this.resize.bind(this));\n  }\n\n  setData(data: any, capitals: any, isTime: boolean = false, invert: boolean = false, capitalId: number, services: any) {\n    this._data = data;\n    this._capitals = capitals;\n    this._isTime = isTime;\n    this._invert = invert;\n    this._capitalId = capitalId;\n    this._services = services;\n  }\n\n  render() {\n    const tips = document.querySelectorAll('.d3-tip');\n\n    tips.forEach(tip => {\n      tip.remove();\n    });\n\n    this.updateScales();\n    this.updateAxes();\n    this.updateLabelsAndTitle()\n    this.updateRectangles();\n    this.updateLegend();\n  }\n\n  resize() {\n    this._svgCanvas.remove();\n\n    this.initSvgAndGroups();\n    this.initScalesAndAxes();\n    this.render();\n  }\n\n  initSvgAndGroups() {\n    // dimensions using margins convention\n    this._width = this._chartDiv.clientWidth - this._margin.left - this._margin.right;\n    this._height = this._chartDiv.clientHeight - this._margin.top - this._margin.bottom;\n    // creates the new canvas element\n    this._svgCanvas = d3.select(this._chartDiv)\n        .append('svg')\n        .attr('width', this._chartDiv.clientWidth)\n        .attr('height', this._chartDiv.clientHeight + 26);\n\n    // axis title\n    this._svgCanvas\n    .append('text')\n    .attr('class', 'chart chart-title')\n    .attr(\"transform\", \"translate(\" + (this._width/1.6) + \" ,\" + (this._margin.top  - 15) + \")\")\n    .style(\"text-anchor\", \"middle\")\n    .style('fill', '#8c8c8c')\n    .style('font-size', '15px');\n\n    // axis label groups\n    this._svgCanvas\n    .append('text')\n    .attr('class', 'axis axis--x--label')\n    .attr(\"transform\", \"translate(\" + (this._width/1.6) + \" ,\" + (this._height + this._margin.bottom + 37) + \")\")\n    .style(\"text-anchor\", \"middle\")\n    .style('fill', '#8c8c8c')\n    .style('font-size', '15px');\n\n    this._svgCanvas\n    .append('text')\n    .attr('class', 'axis axis--y--label')\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 10)\n    .attr(\"x\", 0 - (this._height / 1.5))\n    .attr(\"dy\", \"1em\")\n    .style(\"text-anchor\", \"middle\")\n    .style('fill', '#8c8c8c')\n    .style('font-size', '15px');\n    \n    // creates the group\n    this._svgGroup = this._svgCanvas\n        .append('g')\n        .attr('class', 'svgGroup')\n        .attr('transform', 'translate(' + this._margin.left + ',' + this._margin.top + ')');\n\n    // axis groups\n    this._svgGroup\n        .append('g')\n        .attr('class', 'axis axis--x')\n        .attr('transform', 'translate(0,' + (this._height) + ')');\n\n    this._svgGroup\n        .append('g')\n        .attr('class', 'axis axis--y');\n  }\n\n  initScalesAndAxes() {\n    this._inScale = d3.scaleBand().range([0, this._height]).paddingInner(0.1).paddingOuter(0.0);\n    this._outScale = d3.scaleBand().range([0, this._width]).paddingInner(0.1).paddingOuter(0.0);\n    this._cScale = d3.scaleSequential(d3.interpolateReds);\n\n    // @ts-ignore\n    this._xAxis = d3.axisBottom(this._outScale);\n    // @ts-ignore\n    this._yAxis = d3.axisLeft(this._outScale);\n  }\n\n   updateScales() {\n    const ids = this._data.map( (d: any) => (this._isTime && this._services != null) ? this.getId( d[0], 'services' ) : this.getId( d[0], 'pop' ));\n    let labelsOut = Array.from(new Set(ids));\n\n    let labelsIn;\n    if(this._services == null) {\n      labelsIn = labelsOut;\n    } else {\n      const services = this._data.map( (d: any) => this.getId( d[0], 'services' ));\n      labelsIn = Array.from(new Set(services));\n    }\n\n    if (this._isTime) {\n      const ts = this._data.map( (d: any) => this.valToDate(d[1]) );\n      labelsOut = Array.from(new Set(ts));\n    }\n\n    // @ts-ignore\n    this._inScale.domain(labelsIn);\n    // @ts-ignore\n    this._outScale.domain(labelsOut);\n    // @ts-ignore\n    const all = d3.extent(this._data.map((d: any) => d[2]).filter(e => e > 0) );\n\n    if (this._invert) {\n      this._cScale.domain( all.reverse() );\n    }\n    else {\n      this._cScale.domain( all );\n    }\n    console.log(\"Color Scale\", all)\n  }\n\n  updateAxes() {\n\n    this._xAxis.scale(this._outScale).tickSizeOuter(0);\n    this._svgGroup.select('.axis--x').call(this._xAxis)\n        .selectAll('text')\n        .style('font-size', '15px')\n        .style('text-anchor', 'end')\n        .style('pointer-events', 'auto')\n        .style('', 'default')\n        .attr('dx', '-0.1em')\n        .attr('dy', '+0.3em')\n        .attr('transform', 'rotate(-25)');\n\n    this._yAxis.scale(this._inScale).tickSizeOuter(0);\n    if(this._services == null) {\n    this._svgGroup.select('.axis--y').call(this._yAxis)\n        .selectAll('text')\n        .style('font-size', '15px')\n        .style('pointer-events', 'auto')\n    } else {\n      this._svgGroup.select('.axis--y').call(this._yAxis)\n                    .selectAll(\"text\")\n                    .remove();\n      this._svgGroup.select('.axis--y').call(this._yAxis)\n            .selectAll('.tick')\n            .data(this._services)\n            .append(\"svg:image\")\n            .attr(\"xlink:href\", (d: any) => d[\"imagePath\"])\n            .attr(\"width\", (d: any) => d[\"imageDim\"][0]/2)\n            .attr(\"height\", (d: any) => d[\"imageDim\"][1]/2)\n            .attr(\"x\", (d: any) => -d[\"imageDim\"][0]/2 - 15)\n            .attr(\"y\", -8)\n    }\n  }\n\n\n  updateRectangles() {\n    // @ts-ignore\n    const tip = d3Tip()\n    .attr('class', 'd3-tip').html((d: any) => {\n      return `${(d[2]).toFixed(1)}`;\n    })\n    this._svgCanvas.call(tip);\n\n    const rects = this._svgGroup.selectAll(\".rect_group\").data([null]).join('g').attr('class', 'rect_group');\n    if(this._services == null) {\n      rects.selectAll(\"rect\")\n           .data(this._data)\n           .join(\"rect\")\n           .attr(\"x\", (d: any) => this._outScale( this._isTime ? this.valToDate( d[1] ) : this.getId(d[1], 'pop')))\n           .attr(\"y\", (d: any) => this._inScale( this.getId(d[0], 'pop')) )\n           .attr(\"width\", this._outScale.bandwidth())\n           .attr(\"height\", this._inScale.bandwidth())\n           .attr(\"fill\", (d: any) => this.valToColor(d))\n           .attr(\"id\", (d: any, i: number) => i )\n           .on('mouseover', (e: any, d: any) => tip.show(d, e.target))\n           .on('mouseout' , (e: any, d: any) => tip.hide(d, e.target));\n    } else {\n      rects.selectAll(\"rect\")\n           .data(this._data)\n           .join(\"rect\")\n           .attr(\"x\", (d: any) => this._outScale(this._isTime ? this.valToDate( d[1]) : this.getId(d[0], 'pop')))\n           .attr(\"y\", (d: any) => this._inScale(this._isTime ? this.getId(d[0], 'services' ) : this.getId(d[1], 'services')))\n           .attr(\"width\", this._outScale.bandwidth())\n           .attr(\"height\", this._inScale.bandwidth())\n           .attr(\"fill\", (d: any) => this.valToColor(d))\n           .attr(\"id\", (d: any, i: number) => i )\n           .on('mouseover', (e: any, d: any) => tip.show(d, e.target))\n           .on('mouseout' , (e: any, d: any) => tip.hide(d, e.target));\n    }\n  }\n\n  highlightRectangle(indices: number[]) {\n    if(this._lastIndices.length > 0) {\n      for(let i = 0; i < this._lastIndices.length; i++) {\n        this._svgGroup.select('[id=\"' + this._lastIndices[i] + '\"]')\n        .attr(\"stroke\", \"none\");\n      }\n    }\n\n    for(let i = 0; i < indices.length; i++) {\n    this._svgGroup.select('[id=\"' + indices[i] + '\"]')\n                  .attr(\"stroke\", \"#333\")\n                  .attr('stroke-width', '2')\n    }\n\n    this._lastIndices = indices;      \n  }\n\n  removeRectangleHighlight() {\n    if(this._lastIndices.length > 0) {\n      for(let i = 0; i < this._lastIndices.length; i++) {\n        this._svgGroup.select('[id=\"' + this._lastIndices[i] + '\"]')\n        .attr(\"stroke\", \"none\");\n      }\n    }\n    this._lastIndices = [];  \n  }\n\n  updateLabelsAndTitle() {\n    if (this._isTime) {\n      const popId = this.getId(this._capitalId, 'pop');\n      this._xAxisLabel = 'Tempo'\n      if(this._services == null) {\n        this._yAxisLabel = 'Pop de chegada';\n        this._title = 'Medição do pop ' +  popId + ' para os demais pops ao longo do tempo'        \n      } else {\n        this._yAxisLabel = 'Serviço';\n        this._title = 'Medição do pop ' +  popId + ' para os demais serviços ao longo do tempo'\n      }\n    } else {\n      this._capitalId = 0;\n      if(this._services == null) {\n        this._xAxisLabel = 'Pop de chegada'\n        this._yAxisLabel = 'Pop de saída';\n        this._title = 'Medição entre pops'        \n      } else {\n        this._xAxisLabel = 'Pop'\n        this._yAxisLabel = 'Serviço';\n        this._title = 'Medição de pops e serviços'  \n      }\n    }\n\n    this._svgCanvas.select('.axis--x--label')\n        .text(this._xAxisLabel)\n\n    this._svgCanvas.select('.axis--y--label')\n        .text(this._yAxisLabel)\n\n    this._svgCanvas.select('.chart-title')\n        .text(this._title)\n  }\n\n  updateLegend() {\n    //remove antiga legenda e ticks\n    this._svgCanvas.select(\".legend-scale\").remove();\n    this._svgCanvas.select(\"defs\").remove();\n    this._svgCanvas.select(\"#linear-gradient\").remove();\n    this._svgCanvas.select(\"#legend\").remove();\n\n    const defs =  this._svgCanvas\n                  .append('defs')\n\n    const linearGradient =  defs\n                            .append('linearGradient')\n                            .attr('id', 'linear-gradient')\n\n    linearGradient.selectAll('stop')\n    .data(this._cScale.ticks().map((t: any, i: any, n: any) => ({ offset: `${100*i/n.length}%`, color: this._cScale(t) })))\n    .enter().append('stop')\n    .attr('offset', (d: any) => d.offset)\n    .attr('stop-color', (d: any) => d.color); \n\n    this._svgCanvas\n    .append('g')\n    .attr('id', 'legend')\n    .attr(\"transform\", \"translate(\" + (this._width*0.05) + \" ,\" + (this._height + this._margin.bottom + 42) + \")\")\n    .append(\"rect\")\n    .attr('transform', \"translate(\" + this._margin.left + \" ,\" +  0 + \")\")\n    .attr(\"width\", this._width - this._margin.right - this._margin.left)\n    .attr(\"height\", 12)\n    .style('fill', 'url(#linear-gradient)')\n\n    const legendScale = d3.scaleLinear()\n                        .domain(this._cScale.domain())\n                        .range([this._margin.left, this._width - this._margin.right])\n    \n    this._svgCanvas\n    .append('g')\n    .attr(\"class\", \"legend-scale\")\n    .attr(\"transform\", \"translate(\" + (this._width*0.05) + \" ,\" + (this._height + this._margin.bottom + 42) + \")\")\n    .call(d3.axisBottom(legendScale)\n    .ticks(this._width / 100)\n    .tickSize(12))\n\n    this._svgCanvas.selectAll(\".legend-scale line\")\n    .attr(\"stroke\", \"#fff\");\n\n    this._svgCanvas.select(\".legend-scale path\")\n    .attr(\"stroke\", \"#fff\");\n  }\n\n  getId(id: number, type: string) {\n    if(type == 'pop') {\n      return this._capitals.filter((c: any) => c.cod === id)[0].id.toUpperCase();\n    } else {\n      return this._services.filter((c: any) => c.cod === id)[0].id.toUpperCase();\n    }\n  }\n\n  valToColor(d: any) {\n    if (d[2] === 0) {\n      return \"#333\";\n    }\n    \n    return this._cScale(d[2])\n  }\n\n  valToDate(d: any) {\n    const data = new Date(1000 * d)\n    //@ts-ignore\n    return data.toLocaleString('en-GB', { dateStyle: 'short', timeZone: 'UTC' });\n  }\n}\n","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { point } from 'leaflet';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\nimport { Network } from './network';\n\n@Component({\n  selector: 'app-network',\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.css']\n})\nexport class NetworkComponent implements OnInit {\n\n  // referência para o div do grafico\n  @ViewChild(\"netChart\", { static: true }) private netDiv!: ElementRef;\n\n  @Output() heatMatrixValueChanged = new EventEmitter<number>();\n  @Output() heatMatrixParamChanged = new EventEmitter<number>();\n  // objeto do gráfico\n  private netChart: any;\n  //capitals select list\n  private selectedItems: any = [];\n  public selectedItemsRoot: any = [];\n  //lista de cores\n  private drawColors: any = [\n    '#1F77B4', '#2CA02C', '#9467BD', '#8C564B', '#E377C2',\n    '#AEC7E8', '#98DF8A', '#C5B0D5', '#C49C94', '#F7B6D2'\n  ];\n  //guarda se o chart a ser mostrado é o network ou umap\n  public networkChange: boolean = false;\n  //lista de cores já usadas\n  private usedColors: any = [];\n  //multiselect\n  public dropdownList: any = [];\n  public dropdownSettings: any = {};\n  public multiSelectPlaceholder = 'Estados';\n\n  constructor(public global: GlobalService, public util: UtilService) { }\n\n  ngOnInit(): void {\n    this.netChart = new Network(this.netDiv.nativeElement);\n    this.setMultipleSelectConfiguration('popxpop');\n  }\n\n  drawChart(data: any, capitals: any, clicked: number = -1, invert: boolean = false, dataType: string, services: any = null) {\n    const capitalId = clicked;\n    this.netChart.setData(data, capitals, clicked >= 0, invert, capitalId, services);\n    this.netChart.render();\n  }\n\n  onValueChange(event: any) {\n    const heatmatrix_value = {\n      key: \"heatmatrix_value\",\n      value: event.target.value\n    };\n    this.global.setGlobal(heatmatrix_value);\n    this.heatMatrixValueChanged.emit();\n  }\n\n  onParamChange(event: any) {\n    const heatmatrix_param = {\n      key: \"heatmatrix_param\",\n      value: event.target.value\n    };\n    this.global.setGlobal(heatmatrix_param);\n    this.heatMatrixParamChanged.emit();\n  }\n\n  onChartDataTypeChange(event: any) {\n    const data_type = {\n      key: \"data_type\",\n      value: event.target.value\n    };\n    this.global.setGlobal(data_type);\n    this.setMultipleSelectConfiguration(event.target.value);\n    this.heatMatrixValueChanged.emit();\n  }\n\n  onTimeBoundsChange() {\n    this.heatMatrixValueChanged.emit();\n  }\n\n  setMultipleSelectConfiguration(type: string) {\n    //multiselect\n    this.dropdownList = [];\n    this.dropdownSettings = {};\n    //setando as configuracoes do multiselect\n    if(type == 'popxpop') {\n      const capitals = this.global.getGlobal(\"state_capitals\").value.default;\n      this.multiSelectPlaceholder = 'Estados';\n      for(let i = 0; i < capitals.length; i++) {\n        let id = capitals[i].id.toUpperCase();\n        let cod = capitals[i].cod;\n        let obj:any = {};\n        obj['estado'] = id;\n        obj['cod'] = cod;\n        this.dropdownList.push(obj);\n      };\n      this.dropdownSettings = {\n        singleSelection: false,\n        limitSelection: 10,\n        idField: 'cod',\n        textField: 'estado',\n        enableCheckAll: false,\n        unSelectAll: false,\n        itemsShowLimit: 0,\n        allowSearchFilter: false\n      };\n    } else {\n      const services = this.global.getGlobal(\"services\").value.default;\n      this.multiSelectPlaceholder = 'Serviços';\n      for(let i = 0; i < services.length; i++) {\n        let id = services[i].id.toUpperCase();\n        let cod = services[i].cod;\n        let obj:any = {};\n        obj['estado'] = id;\n        obj['cod'] = cod;\n        this.dropdownList.push(obj);\n      };  \n      this.dropdownSettings = {\n        singleSelection: false,\n        limitSelection: 10,\n        idField: 'cod',\n        textField: 'estado',\n        enableCheckAll: false,\n        unSelectAll: false,\n        itemsShowLimit: 0,\n        allowSearchFilter: false\n      };    \n    }\n  }\n\n  networkToggle() {\n    this.networkChange = !this.networkChange;\n  }\n\n  isCapitalSelected() {\n    return (this.global.getGlobal(\"clicked_element\").value > 0)\n  }\n\n  isPopSelected() {\n    return (this.global.getGlobal(\"data_type\").value == 'popxpop')\n  }\n  \n  /**\n * seta as cores já utilizadas\n */\n  updateUsedColors(added: boolean, color: string) {\n    if (added) {\n      if(!this.usedColors.includes(color)) this.usedColors.push(color);\n    }\n    else {\n      this.usedColors = this.usedColors.filter( (d: string) => d !== color );\n    }\n  }\n\n  highlightHeatmatrix(indices: number[]) {\n    this.netChart.highlightRectangle(indices);\n  }\n  \n  removeHighlightHeatmatrix() {\n    this.netChart.removeRectangleHighlight();\n  }\n}\n","<div>\n    <div class=\"fill network-chart\" style=\"z-index: 99;  opacity: 1; display: inline-block;\" #netChart></div>\n    <div style=\"display: flex; margin-top: 27px; padding-bottom: 7px; width: 100%; border-top: 1px solid #eee; left: 10px; font-size: 11px !important;\">\n        <div id=\"code-select-box\" class=\"code-select\">\n            <select name=\"type\" class=\"network-select\" (change)=\"this.onChartDataTypeChange($event)\">\n                <option value=\"popxpop\">Pop x Pop</option>\n                <option value=\"popxservice\">Pop x Serviços</option>\n            </select>\n        </div>\n        <div *ngIf=\"this.isPopSelected()\" id=\"code-select-box\" class=\"code-select\">\n            <select name=\"code\" class=\"network-select\" (change)=\"this.onParamChange($event)\" [disabled]=\"this.networkChange\">\n                <optgroup label=\"Atraso e perda\">\n                    <option value=\"11\">Atraso de ida e volta (RTT - average)</option>\n                    <option value=\"12\">Atraso de ida e volta (RTT - min)</option>\n                    <option value=\"13\">Atraso de ida e volta (RTT - max)</option>\n                    <option value=\"16\">Histogram-ttl-reverse (average)</option>\n                    <option value=\"17\">Histogram-ttl-reverse (min)</option>\n                    <option value=\"18\">Histogram-ttl-reverse (max)</option>\n                    <option value=\"24\">Packet-loss-rate-bidir</option>\n                </optgroup>\n                <optgroup label=\"Atraso unidirecional\">\n                    <option value=\"41\">Atraso unidirecional (owdelay - average)</option>\n                    <option value=\"42\">Atraso unidirecional (owdelay - min)</option>\n                    <option value=\"43\">Atraso unidirecional (owdelay - max)</option>\n                    <option value=\"46\">Histogram-ttl (average)</option>\n                    <option value=\"47\">Histogram-ttl (min)</option>\n                    <option value=\"48\">Histogram-ttl (max)</option>\n                    <option value=\"54\">Packet-loss-rate</option>\n                </optgroup>\n                <optgroup label=\"BANDA (BBR)\">\n                    <option value=\"77\">Throughput (BBR)</option>\n                </optgroup>\n                <optgroup label=\"BANDA (CUBIC)\">\n                    <option value=\"107\">Throughput (CUBIC)</option>\n                </optgroup>\n                <optgroup label=\"TraceRoute\">\n                    <option value=\"131\">Packet-trace (average)</option>\n                    <option value=\"132\">Packet-trace (min)</option>\n                    <option value=\"133\">Packet-trace (max)</option>\n                </optgroup>\n            </select>\n        </div>\n        <div *ngIf=\"this.isPopSelected()\" id=\"codfield-select-box\" class=\"codfield-select\">\n            <select name=\"codfield\" class=\"network-select\" (change)=\"this.onValueChange($event)\">\n                <option value=\"h_avg\">Average</option>\n                <option value=\"h_max\">Max</option>\n                <option value=\"h_min\">Min</option>\n            </select>        \n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor() {}\n}\n","<app-top-bar></app-top-bar>\n<app-home></app-home>\n","import { Component, OnInit, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { GlobalService } from 'src/app/shared/global.service';\n\n@Component({\n  selector: 'app-time-bar',\n  templateUrl: './time-bar.component.html',\n  styleUrls: ['./time-bar.component.css']\n})\nexport class TimeBarComponent implements OnInit {\n    @Output() chartTimeChanged = new EventEmitter<number>();\n\n    constructor(public global: GlobalService) {}\n\n    ngOnInit(): void {\n    }\n\n    onClickTime(delta: number) {\n        this.chartTimeChanged.emit(delta);\n    }\n\n    refreshAvailable() {\n        const bnds = this.global.getGlobal(\"bounds_time\");\n    \n        const tsT0 = this.global.getGlobal(\"t0_vis\");\n        const tsT1 = this.global.getGlobal(\"t1_vis\");\n    \n        return bnds.value[0] !== tsT0.value || bnds.value[1] !== tsT1.value;\n      }\n}\n","<div class=\"row\">\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(-3)'>\n        <i class=\"fas fa-fast-backward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(-2)'>\n        <i class=\"fas fa-backward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(-1)'>\n        <i class=\"fas fa-step-backward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(1)'>\n        <i class=\"fas fa-step-forward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(2)'>\n        <i class=\"fas fa-forward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(3)'>\n        <i class=\"fas fa-fast-forward line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(4)'>\n        <i class=\"fas fa-search-plus line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(-4)'>\n        <i class=\"fas fa-search-minus line-time-icon\"></i>\n    </button>\n    <button class=\"btn btn-custom\" (click)='this.onClickTime(5)'>\n        <i class=\"fas fa-sync-alt line-time-icon\"\n        [style.color]=\"this.refreshAvailable() ? '#F97432' : '#kkk'\"\n        ></i>\n    </button>\n</div>","import { CategoryScale, Chart, Legend, LinearScale, LineController, LineElement, PointElement, Tooltip } from 'chart.js';\nimport { ticks } from 'd3';\n\nexport class Functionschart {\n\n    private chart: any;\n    private canvas: HTMLCanvasElement;\n    // capitals\n    private capitals: any = null;\n    // services\n    private services: any = null;\n    // labels \n    private labels: any = null;\n    private data: any = null;\n    public isTimeSeries: boolean = false;\n\n    constructor(canvas: HTMLCanvasElement) {\n      this.canvas = canvas;\n      this.init();\n    }\n  \n    //Configuração do grafico\n    init() {\n      const self = this;\n\n      if (this.canvas === undefined) {\n        return;\n      }\n      \n      //Registra os elementos utilizados pelo grafico\n      Chart.register(PointElement, LineElement, LineController, CategoryScale, LinearScale, Legend, Tooltip);\n      Chart.defaults.animation = false;\n  \n      this.chart = new Chart(this.canvas, {\n        type: 'line',\n        data: {\n          labels: [],\n          datasets: []\n        },\n        options: {\n          plugins: {\n            legend: {\n              title: {\n                display: true,\n                text: '',\n                font: {\n                  size: 15\n                }\n              },\n              display: true,\n              position: \"top\",\n              labels: {\n                font: {\n                  size: 15\n                } \n              }\n            },\n            title: {\n              display: true,\n              text: 'CDF',\n            },\n            tooltip: {\n              mode: 'index',\n              intersect: false,\n            },\n          },\n          elements: {\n            point: {\n              radius: 0\n            }\n          },\n          responsive: true,\n          hover: {\n            mode: 'nearest',\n            intersect: true\n          },\n          scales: {\n            x: {\n              type: 'linear',\n              display: true,\n              title: {\n                display: true,\n                text: 'Tempo (ms)',\n                font: {\n                  size: 15\n                }\n              },\n              ticks: {\n                font: {\n                  size: 15\n                },\n                callback: function(value, index, ticks) {\n                    if(self.isTimeSeries) {\n                      //@ts-ignore\n                      return this.chart.config.data.datasets[0].data[value].x;\n                  } else return value;\n                }\n              }\n            },\n            y: {\n              ticks: {\n                font: {\n                  size: 15\n                }\n              },\n              display: true,\n              title: {\n                display: true,\n                text: 'F(X)',\n                font: {\n                  size: 15\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  \n  \n    //Modifica as configurações globais para os títulos\n    setTitle(param: string, id: number) {\n      if(id >= 0 ) this.chart.options.plugins.legend.title.text = `${param.toUpperCase()} ${this.getId(id, 'pop')}`; \n      else this.chart.options.plugins.legend.title.text = `${param.toUpperCase()}`;\n    }\n  \n    setCapitals(capitals: any) {\n      this.capitals = capitals;\n    }\n  \n    setServices(services: any) {\n      this.services = services;\n    }\n\n    updateData(data: any, colorList: any, param: string) {\n      const selectedValue = (document.getElementById('functions-chart-select-value-options') as HTMLInputElement).value;\n      let popOrService;\n      (selectedValue == \"popxpop\") ? popOrService = 'pop' : popOrService = 'service'\n      const datasets = this.chart.config.data.datasets;\n      for(let i = 0; i < data.length; i++) {\n        const newData = {\n          label: (data[i][0] >= 0) ? this.getId(data[i][0], popOrService) : param.toUpperCase(),\n          data: data[i][1][0][0],\n          backgroundColor: colorList[i],\n          borderColor: colorList[i],\n          fill: false\n        };\n        datasets.push(newData);\n      }\n      this.chart.update();\n    }\n  \n    updateCombinations(data: any, selectedParam: string) {\n      const datasets = this.chart.config.data.datasets;\n\n      for(let i = 0; i < data.length; i++) {\n        const color = this.getRandomColor();\n        const newData = {\n          label: `${data[i][0].idPop} - ${data[i][0].idService}`,\n          data: data[i][1][0][0],\n          backgroundColor: color,\n          borderColor: color,\n          fill: false\n        };\n        datasets.push(newData);\n        \n      }\n      this.chart.update();\n    }\n\n    getRandomColor() {\n      return '#'+Math.floor(Math.random()*16777215).toString(16);\n    }\n\n    getId(id: number, type: string) {\n      if(type == 'pop') {\n        return this.capitals.filter((c: any) => c.cod === id)[0].id.toUpperCase();\n      } else {\n        return this.services.filter((c: any) => c.cod === id)[0].id.toUpperCase();\n      }\n    }\n  \n    clear() {\n      this.chart.data.labels = [];\n      this.chart.data.datasets = [];\n      this.chart.options.plugins.legend.title.text = '';\n      this.chart.config.options.scales.y.title.text = '';\n      this.chart.update();\n    }\n\n    setConfig(selectedParam: string) {\n      if(selectedParam == \"timeseries\") {\n        this.isTimeSeries = true;\n        this.chart.config.options.scales.x.title.text = 'Date';\n        this.chart.config.options.scales.x.type = 'category';\n      } else {\n        this.isTimeSeries = false;\n        this.chart.config.options.scales.x.title.text = 'Tempo (ms)';\n        this.chart.config.options.scales.x.type = 'linear';\n      }\n      this.chart.update();\n    }\n\n    render() {\n      this.chart.update();\n    }\n  \n    removeDataset() {\n      this.chart.config.data.labels = [];\n      this.chart.config.data.datasets = [];\n      this.chart.update();\n    }\n\n    valToDate(d: any) {\n      const data = new Date(1000 * d)\n      //@ts-ignore\n      return data.toLocaleString('en-US', { dateStyle: 'short', timeZone: 'UTC' });\n    }\n  }","// inclusão de bibliotecas do angular\nimport { AfterViewInit, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n// inclusão do metadado do viaipe\nimport * as viaipeMetadata from '../../../assets/viaipe_metadata.json';\n// inclusão do leaflet\nimport * as L from 'leaflet';\n\n// inclusão do leaflet draw\nimport 'leaflet-draw';\n\n// inclusão do heatmap\nimport 'leaflet-heatmap';\ndeclare var HeatmapOverlay: any;\n\n// inclusão do leaflet easybutton\nimport 'leaflet-easybutton';\n\n// inclusões da aplicação\nimport { ApiService } from 'src/app/shared/api.service';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements AfterViewInit {\n  // referência para o div do mapa\n  @ViewChild(\"map\", { static: true }) private mapDiv?: ElementRef;\n\n  // eventos de desenho no mapa\n  @Output() polyCreatedEvent = new EventEmitter<any>();\n  @Output() polyRemovedEvent = new EventEmitter<any>();\n  @Output() polyEditedEvent = new EventEmitter<any>();\n  @Output() moveEndedEvent = new EventEmitter();\n\n  // eventos de seleção de markers\n  @Output() markerAddedEvent = new EventEmitter<any>();\n  @Output() markerRemovedEvent = new EventEmitter<any>();\n\n  @Output() resetFunctionsChart = new EventEmitter();\n\n  @Output() setClients = new EventEmitter<any>();\n  // objeto com o mapa do leaflet\n  private map!: L.Map;\n  // objeto com os clientes\n  private geojson!: L.GeoJSON<any>;\n  // pbjeto de desenho de polígonos\n  private drawControl!: L.Control.Draw;\n  // lista de layers ativos\n  private listLayer: any[] = [];\n  // lista dos bairros\n  private listClient: any[] = [];\n  // lista com os clients selecionados no filtro para adição no mapa\n  private clientLayers: any[] = [];\n\n\n  // heatmap layer\n  public current_heatmapLayer: any;\n  // heatmap configuration\n  private heatCfg = {\n    \"radius\": 10.0,\n    \"maxOpacity\": 1.0,\n    \"scaleRadius\": false,\n    \"useLocalExtrema\": true,\n    valueField: 'count',\n    gradient: {\n      '0.0': '#feedde', '.2': '#fdd0a2', '.4': '#fdae6b', '.6': '#fd8d3c', '.8': '#e6550d', '1.0': '#a63603'\n    }\n  };\n\n  // lista com clientes para renderizar na tela\n  private clients: any = [];\n  // Inicialização do layer do outlier\n  private outlierMarker = new L.FeatureGroup();\n  // Inicialização do layer dos clientes\n  private clientsMarkers = new L.FeatureGroup();\n\n  constructor(public global: GlobalService, public api: ApiService, public util: UtilService) { }\n\n  ngAfterViewInit(): void {\n    this.setupMap();\n    this.updatePolygonDrawColors();\n  }\n\n  /**\n   * Configura o mapa.\n   */\n  //  -15.787129, -47.884329\n  async setupMap(lat = -15.787129, lng = -47.884329, zoom = 5) {\n    if (this.mapDiv === undefined) {\n      return;\n    }\n\n    // inicialização do mapa\n    this.map = L.map(this.mapDiv.nativeElement).setView([lat, lng], zoom);\n\n    // configuração do layer do mapa\n    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\n      maxZoom: 18,\n      attribution:\n        'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n        '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n        'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n      id: 'mapbox/light-v10',\n      tileSize: 512,\n      zoomOffset: -1\n    }).addTo(this.map);\n\n    // adição dos layers clicáveis\n    let capitalsMarkersLayers = new L.FeatureGroup().addTo(this.map);\n    const capitals = this.global.getGlobal('state_capitals').value.default;\n    \n    for(let i = 0; i < capitals.length; i++) {\n      let capitalMarker = L.marker({lat: capitals[i].latitude, lng: capitals[i].longitude}, { icon: this.capitalMarkers(capitals[i].cod) }).on(\"mouseup\", this.capitalClick.bind(this), false);\n      capitalsMarkersLayers.addLayer(capitalMarker);\n    }\n\n    // Inicialização dos layers editaveis\n    let editableLayers = new L.FeatureGroup();\n    this.map.addLayer(editableLayers);\n\n    // Controles de desnho dos polígonos\n    this.drawControl = new L.Control.Draw({\n      position: 'topleft',\n      draw: {\n        polygon: {\n          allowIntersection: false, // Restricts shapes to simple polygons\n          drawError: {\n            color: '#e1e100', // Color the shape will turn when intersects\n            message: '<strong>Error!<strong> you can\\'t draw that!' // Message that will show when intersect\n          },\n        },\n        rectangle: {},\n        polyline: false,\n        circle: false,\n        circlemarker: false,\n        marker: false\n      },\n      edit: {\n        featureGroup: editableLayers,\n      }\n    });\n    this.map.addControl(this.drawControl);\n\n    // Eventos do mapa: criação do polígono\n    this.map.on(L.Draw.Event.CREATED, (e: any) => {\n      const usedColors = this.global.getGlobal(\"used_draw_colors\");\n      if(usedColors.value.length < 10) {\n        this.listLayer.push(e.layer);\n        this.updateUsedColors(true, e.layer.options.color);\n  \n        this.polyCreatedEvent.emit(e.layer);\n        editableLayers.addLayer(e.layer);\n      } else {\n        console.log(\"LIMITE DE SELEÇÃO\")\n      }\n    });\n\n    // Eventos do mapa: deleção do polígono\n    this.map.on(L.Draw.Event.DELETED, (e: any) => {\n      // remover dataset\n      e.layers.eachLayer((layer: any) => {\n        this.polyRemovedEvent.emit(layer)\n        this.removeLayer(layer);\n\n        this.updateUsedColors(false, layer.options.color);\n      });\n    });\n\n    // Eventos do mapa: edição do polígono\n    this.map.on(L.Draw.Event.EDITED, (e: any) => {\n      // update dataset\n      e.layers.eachLayer((layer: any) => {\n        this.removeLayer(layer);\n        this.listLayer.push(e.layer);\n\n        this.polyEditedEvent.emit(layer);\n      });\n    });\n\n    // Eventos do mapa: movimentação do mapa\n    this.map.on('moveend', () => {\n      // adição e remoção dos layers baseado no zoom\n      if(this.map.getZoom() < 9) {\n        this.map.addLayer(capitalsMarkersLayers);\n        this.map.removeLayer(this.clientsMarkers);\n        this.map.removeLayer(this.outlierMarker);\n      } else {\n        this.map.removeLayer(this.clientsMarkers);\n        this.map.removeLayer(capitalsMarkersLayers);\n        this.clientsMarkers = new L.FeatureGroup();\n        this.updateClients();\n      }\n      this.moveEndedEvent.emit();\n    });\n    \n    const global = this.global;\n    const self = this;\n    L.easyButton('fa-redo fa-lg', function(btn,map){\n      const clicked_element = {\n        key: 'clicked_element',\n        value: -1\n      }\n\n      const network_param = {\n        key: 'network_param',\n        value: 1\n      }\n\n      global.setGlobal(clicked_element);\n      global.setGlobal(network_param);\n      self.resetFunctionsChart.emit();\n      self.setClients.emit('delete')\n      map.setView([lat, lng], zoom);\n    }).addTo(this.map);\n  }\n\n  /**\n   * Retorna lista de poligonos.\n   */\n  getListLayer() {\n    return this.listLayer;\n  }\n\n  /**\n   * Retorna lista de clientes.\n   */\n  getListClient() {\n    return this.listClient;\n  }\n\n  /**\n   * Retorna o mapa.\n   */\n  getMap(): L.Map {\n    return this.map;\n  }\n\n  /**\n   * Monta o trecho da query que define uma região geográfica\n   * conforme a visualização no Mapa.\n   */\n  getLocation(): any[] {\n    let zoom = this.getZoom();\n    let bounds = this.map.getBounds();\n    let c0 = bounds.getNorthEast();\n    let c1 = bounds.getSouthWest();\n\n    let list = [];\n    list.push(\"location\");\n    list.push(\"zrect\");\n    list.push(zoom);\n    list.push(c0.lat);\n    list.push(c1.lng);\n    list.push(c1.lat);\n    list.push(c0.lng);\n\n    return list;\n  }\n\n  /**\n   * Monta o trecho da query que define o poligono.\n   */\n  getPoly(latlngs: any): any[] {\n    let poly = [];\n    for (let i = 0; i < latlngs.length; i++) {\n      poly.push([latlngs[i].lat, latlngs[i].lng]);\n    }\n    let list = [];\n    list.push(\"location\");\n    list.push(\"zpoly\");\n    list.push(this.getZoom());\n    for (let i = 0; i < poly.length; i++) {\n      list.push(poly[i][0]);\n      list.push(poly[i][1]);\n    }\n    return list;\n  }\n\n  /**\n   * Monta o trecho da query que define o cliente\n   */\n  getClient(clientFeature: any) {\n    let list = [];\n    list.push(\"cliente\");\n    list.push(\"eq\");\n    list.push(clientFeature)\n\n    return list;\n  }\n\n  /**\n   * Retorna um zoom mais adequado ao uso nas querys.\n   */\n  getZoom(): number {\n    let geoExtraZoom = this.global.getGlobal(\"geo_extra_zoom\");\n    return this.map.getZoom() - 1 + geoExtraZoom.value;\n  }\n\n  /**\n   * Escolhe uma cor a partir das que já\n   * foram usadas.\n   */\n  updateUsedColors(added: boolean, color: string) {\n    const drawColors = this.global.getGlobal(\"draw_colors\");\n    const usedColors = this.global.getGlobal(\"used_draw_colors\");\n\n    // atualiza as cores usadas\n    if (added) {\n      usedColors.value.push(color);\n    }\n    else {\n      usedColors.value = usedColors.value.filter( (d: string) => d !== color );\n    }\n    this.global.setGlobal(usedColors);\n\n    // atualiza o índice de cor\n    let drawColorIndex = this.global.getGlobal(\"draw_color_index\");\n    for(let id = 0; id< drawColors.value.length; id++) {\n      const current = drawColors.value[id];\n\n      if(!usedColors.value.includes(current)) {\n        drawColorIndex.value = id;\n        break;\n      }\n    }\n    this.global.setGlobal(drawColorIndex);\n    this.updatePolygonDrawColors();\n  }\n\n   /**\n   * Define a cor do retangulo e do poligono que serão desenhados no mapa.\n   */\n    updatePolygonDrawColors() {\n      if (this.drawControl === undefined) {\n        return;\n      }\n\n      let drawColors = this.global.getGlobal(\"draw_colors\");\n      let drawColorIndex = this.global.getGlobal(\"draw_color_index\");\n\n      this.drawControl.setDrawingOptions({\n        rectangle: {\n          shapeOptions: {\n            color: drawColors.value[drawColorIndex.value]\n          }\n        },\n        polygon: {\n          shapeOptions: {\n            color: drawColors.value[drawColorIndex.value]\n          }\n        }\n      });\n    }\n  /**\n   * Remove poligono da lista.\n   */\n  removeLayer(layer: any) {\n    for (let i = 0; i < this.listLayer.length; i++) {\n      if ((((layer instanceof L.Rectangle) &&\n        (this.listLayer[i] instanceof L.Rectangle)) ||\n        ((layer instanceof L.Polygon) &&\n          (this.listLayer[i] instanceof L.Polygon))) &&\n        (layer.options.color == (this.listLayer[i] as any).options.color)) {\n        this.listLayer.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Formata o poligono dos bairros ao clicar.\n   */\n  clientMarker(geoJsonPoint: any, latlng: any) {\n    // @ts-ignore\n    let color = this.global.getGlobal(\"unselected_color\").value;\n    return L.marker(latlng, { icon: this.clientIcon(color) });\n  }\n\n  /**\n   * Formata o poligono dos bairros.\n   */\n  clientIcon(color: any) {\n    return L.divIcon({\n      className: 'custom-div-icon',\n      html: `<div style='background-color:${color};' class='marker-pin'></div><i class='fa fa-circle awesome'>`,\n      iconSize: [30, 42],\n      iconAnchor: [15, 42],\n      popupAnchor: [0, -38]\n    });\n  }\n\n  /**\n   * Markers das capitais dos estados.\n   */\n  capitalMarkers(capitalCod: string){\n    return L.divIcon({\n      className: 'custom-div-icon',\n      html: `<div style='background-color:#000;' class='marker-pin' id='capital-marker' data-capital=` + capitalCod + `></div><i class='fa fa-circle awesome'>`,\n      iconSize: [30, 42],\n      iconAnchor: [15, 42]\n    });\n  }\n  /**\n   * Ação de click no marker da capital.\n   */\n\n  capitalClick(event: any) {\n    // pega o id da capital referente ao marker clicado\n    const clickedIcon = event.target.options.icon.options.html;\n    const html = new DOMParser().parseFromString(clickedIcon, \"text/html\");\n    const element = html.getElementById('capital-marker');\n    const capitalData = element?.getAttribute('data-capital');\n    let cod;\n    if (capitalData) cod = parseInt(capitalData);\n\n    const clicked_element = {\n      key: 'clicked_element',\n      value: cod\n    }\n    this.global.setGlobal(clicked_element);\n    event.sourceTarget._map.setView([event.latlng.lat, event.latlng.lng], 12);\n    this.resetFunctionsChart.emit();\n    console.log(viaipeMetadata)\n    this.setClients.emit('add');\n  }\n\n  /**\n   * Atribui eventos aos markers dos pops.\n   */\n  onEachFeature(feature: any, layer: any) {\n    // criação do popup\n    const cliente = feature.properties.caption;\n\n    let contentPopup = '';\n\n    if(layer.feature.properties.id == \"OTHERS\") {\n      const size = this.global.getGlobal('list_ips').value.length;\n\n      contentPopup = \"<div>\" +\n      \"<div style='display: block;'><b>\" + cliente + \" (\" + size + \" IPs)</b></div>\" +\n      \"</div>\";\n    }\n    else {\n      contentPopup = \"<div>\" +\n      \"<div style='display: block;'><b>\" + cliente + \"</b></div>\" +\n      \"</div>\";\n    }\n\n    layer.bindPopup(contentPopup);\n    \n    const found = this.listClient.findIndex(d => {\n      return d.cod === feature.properties.cod;\n    });\n\n    if (found >= 0) {\n      layer.setIcon(this.clientIcon(this.listClient[found].color));\n    }\n\n    // Evento de click no marker\n    layer.on('click', () => {\n      // default color\n      let color = this.global.getGlobal(\"unselected_color\").value;\n      // searches the client\n      const found = this.listClient.findIndex(d => {\n        return d.cod === feature.properties.cod;\n      });\n\n      const usedColors = this.global.getGlobal(\"used_draw_colors\");\n\n      if (found >= 0) {\n        layer.setIcon(this.clientIcon(color));\n        const client = this.listClient.splice(found, 1);\n        color = client[0].color;\n\n        this.markerRemovedEvent.emit(client[0]);\n        this.updateUsedColors(found<0, color);\n      } else {\n        // libera criação de layer se tiver cor disponível\n        if(usedColors.value.length < 10) {\n          let drawColors = this.global.getGlobal(\"draw_colors\");\n          let drawColorIndex = this.global.getGlobal(\"draw_color_index\");\n\n          color = drawColors.value[drawColorIndex.value];\n          layer.setIcon(this.clientIcon(color));\n\n          const client = {\n            cod: feature.properties.cod,\n            nome: feature.properties.id,\n            color: color,\n          };\n          this.listClient.push(client);\n\n          this.markerAddedEvent.emit(client);\n          this.updateUsedColors(found<0, color);\n        } else {\n          console.log(\"LIMITE DE SELEÇÃO\")\n        }\n      }\n    });\n\n    // Evento de mouseout no marker.\n    layer.on('mouseout', () => {\n\n      const found = this.listClient.findIndex(d => {\n        return d.cod === feature.properties.cod;\n      });\n\n      if (found >= 0) {\n        layer.setIcon(this.clientIcon(this.listClient[found].color));\n      }\n\n      layer.closePopup();\n    });\n\n    // Evento de mouseover no marker.\n    layer.on('mouseover', () => {\n      layer.openPopup();\n    });\n  }\n\n  /**\n   * Função que desenha um heatmap a partir dos dados passados como parâmetro.\n   */\n  drawHeatMap(json: any) {\n    if (json.tp == \"0\") {\n      console.log(json);\n      return;\n    }\n\n    let a = [];\n    let max_v = 0;\n    let min_v = Number.MAX_VALUE;\n    let zoom = this.map.getZoom() - 1;\n    let b = this.map.getBounds();\n    let geoExtraZoom = this.global.getGlobal(\"geo_extra_zoom\");\n    for (let i = 0; i < json.result.length; i++) {\n      let o = json.result[i];\n      let vlat = this.util.tile2latX(o.k[0], zoom + geoExtraZoom.value);\n      let vlon = this.util.tile2longX(o.k[1], zoom + geoExtraZoom.value);\n      let coords = [vlat, vlon];\n      vlat = coords[0];\n      vlon = coords[1];\n      if (!b.contains(L.latLng(vlat, vlon))) continue;\n      let v = Math.log(o.v[0] + 1);\n      o.v[0] = o.v[0] / 1000000000;\n      if (v > max_v) max_v = v;\n      if (v < min_v) min_v = v;\n      let o2 = { lat: vlat, lng: vlon, count: v };\n      a.push(o2);\n    }\n\n    let heatData: any = {};\n    heatData.min = min_v;\n    heatData.max = max_v;\n    heatData.data = a;\n\n    this.removeCurrentHeatmapLayer();\n    this.current_heatmapLayer = new HeatmapOverlay(this.heatCfg);\n    this.current_heatmapLayer.setData(heatData);\n    this.map.addLayer(this.current_heatmapLayer);\n  }\n\n  removeCurrentHeatmapLayer() {\n    if(this.current_heatmapLayer != undefined) this.map.removeLayer(this.current_heatmapLayer);\n  }\n\n  /**\n   * Função que adiciona os markers do filtro ao mapa\n   */\n  drawFilterMarkers(clientData: any) {\n    const markerList = [];\n    for(let i = 0; i < clientData.length; i++) {\n      const lat = clientData[i].lat;\n      const lng = clientData[i].lon;\n      markerList.push(L.circle([lat,lng], 250, { color: this.global.getGlobal('filter_color').value, fillColor: this.global.getGlobal('filter_color').value, opacity: 1, fillOpacity: 1}));\n    };\n\n    if(this.clientLayers.length) {\n      for(let i = 0; i < this.clientLayers.length; i++){\n        this.map.removeLayer(this.clientLayers[i]);\n      };\n      this.clientLayers = [];\n      for(let i = 0; i < clientData.length; i++) {\n        markerList[i].addTo(this.map);\n        this.clientLayers.push(markerList[i]);\n      };\n    } else {\n      for(let i = 0; i < clientData.length; i++) {\n        markerList[i].addTo(this.map);\n        this.clientLayers.push(markerList[i]);\n      };\n    }\n  };\n\n  /**\n   * Função que deleta o marker\n   */\n  eraseFilterMarkers() {\n    for(let i = 0; i < this.clientLayers.length; i++){\n      this.map.removeLayer(this.clientLayers[i]);\n    };\n    this.clientLayers = [];\n  };\n\n  /**\n   * Função para atualizar os clientes com movimento do mapa\n   */\n  updateClients() {\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    //carrega dados viaipe se for do viaipe\n    if(selectedClientOption == \"viaipe\") {\n      this.map.removeLayer(this.outlierMarker);\n      this.clients = viaipeMetadata.pops\n      //pega clientes que estão nos bounds da tela atual\n      const clientsToShowOnScreen: any = [];\n      Object.keys(this.clients).forEach((key:any) => {\n        //@ts-ignore\n        this.clients[key].clientes.map((client: any) => {\n          if(this.map.getBounds().contains((L.latLng(client.lat, client.lon)))) {\n            clientsToShowOnScreen.push(client);\n          }\n        });\n      });\n\n      this.clients = clientsToShowOnScreen.map((d: any) => {\n        return {\n          \"type\": \"Feature\",\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [d.lon, d.lat]\n          },\n          \"properties\": d\n        }\n      });\n    } else {\n      // carregamento do dado dos clientes\n      this.clients = this.global.getGlobal('list_clientes').value.items.map((d: any) => {\n        // adciona um marcador extra\n        if(d.id === \"OTHERS\") {\n          const outColor = this.global.getGlobal('outlier_color').value;\n          this.outlierMarker.addLayer(L.circle([d.lat,d.lon], 250, { color: outColor, fillColor: outColor, opacity: 1, fillOpacity: 1}));\n        };\n        return {\n          \"type\": \"Feature\",\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [d.lon, d.lat]\n          },\n          \"properties\": d\n        }\n      });\n\n      this.map.addLayer(this.outlierMarker);\n    }\n\n    this.geojson = L.geoJSON(this.clients, { pointToLayer: this.clientMarker.bind(this), onEachFeature: this.onEachFeature.bind(this) });\n    this.clientsMarkers.addLayer(this.geojson);\n    this.map.addLayer(this.clientsMarkers);\n  }\n}\n","<div #map class=\"fill\"></div>\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { FormsModule } from '@angular/forms';\n\nimport { AngularDraggableModule } from 'angular2-draggable';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\nimport { AppComponent } from './app.component';\nimport { AppInitService } from './app-init.service';\n\nimport { TopBarComponent } from './bars/top-bar/top-bar.component';\nimport { ChartsBarComponent } from './bars/charts-bar/charts-bar.component';\n\nimport { HomeComponent } from './home/home.component';\nimport { MapComponent } from './widgets/map/map.component';\nimport { BarChartComponent } from './widgets/bar-chart/bar-chart.component';\nimport { LineChartComponent } from './widgets/line-chart/line-chart.component';\nimport { FiltersComponent } from './widgets/filters/filters.component';\nimport { AlertsComponent } from './widgets/alerts/alerts.component';\nimport { NetworkComponent } from './widgets/network/network.component';\nimport { TimeBarComponent } from './bars/time-bar/time-bar.component';\nimport { ScatterglComponent } from './widgets/scattergl/scattergl.component';\nimport { FunctionsChartComponent } from './widgets/functions-chart/functions-chart.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MapComponent,\n    BarChartComponent,\n    LineChartComponent,\n    TopBarComponent,\n    ChartsBarComponent,\n    FiltersComponent,\n    AlertsComponent,\n    NetworkComponent,\n    TimeBarComponent,\n    ScatterglComponent,\n    FunctionsChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AngularDraggableModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n    NgMultiSelectDropDownModule.forRoot(),\n  ],\n  providers: [\n    AppInitService,\n    {\n        provide: APP_INITIALIZER,\n        multi: true,\n        deps: [AppInitService],\n        useFactory: (appInit: AppInitService) => {\n            return () => {\n                return appInit.init();\n            };\n        }\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CategoryScale, Chart, Legend, LinearScale, LineController, LineElement, PointElement, Tooltip } from 'chart.js';\n\nexport class LineChart {\n\n  private chart: any;\n  private canvas: HTMLCanvasElement;\n  private data: any;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.init();\n  }\n\n  //Configuração do grafico\n  init() {\n    if (this.canvas === undefined) {\n      return;\n    }\n\n    const self = this;\n\n    //Registra os elementos utilizados pelo grafico\n    Chart.register(PointElement, LineElement, LineController, CategoryScale, LinearScale, Legend, Tooltip);\n    Chart.defaults.animation = false;\n\n    this.chart = new Chart(this.canvas, {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: []\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: true,\n            position: \"top\",\n            labels: {\n              font: {\n                size: 15\n              } \n            }\n          },\n          title: {\n            display: false,\n            text: 'Title'\n          },\n          tooltip: {\n            mode: 'index',\n            intersect: false,\n          },\n        },\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        responsive: true,\n        hover: {\n          mode: 'nearest',\n          intersect: true\n        },\n        scales: {\n          x: {\n            ticks: {\n              font: {\n                size: 15\n              },\n              // Include a dollar sign in the ticks\n              callback: function(value, index, ticks) {\n                  if(self.data[value] !== undefined && self.data[value].x !== undefined) return self.data[value].x.slice(0, -7);\n              }\n            }\n          },\n          y: {\n            display: true,\n            ticks: {\n              font: {\n                size: 15\n              }\n            },\n            title: {\n              display: false,\n              text: 'Y',\n              font: {\n                size: 15\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  //Modifica as configurações globais para os títulos\n  setTitle(title: string) {\n    this.chart.options.plugins.title.text = title;\n    this.chart.options.plugins.title.display = true;\n  }\n\n  //Modifica as configurações globais dos ticks comuns para eixos\n  setTicksX(ticks: any) {\n    this.chart.options.scales.x[0].ticks = ticks;\n  }\n\n  setTicksY(ticks: any) {\n    this.chart.options.scales.y[0].ticks = ticks;\n  }\n\n  //Modifica as configurações globais dos dos tipos\n  setTypeX(type: string) {\n    this.chart.options.scales.x[0].type = type;\n  }\n  setTypeY(type: string) {\n    this.chart.options.scales.y[0].type = type;\n  }\n\n  //Modifica as configurações globais dos labels\n  setLabelX(label: string) {\n    this.chart.options.scales.x.title.text = label;\n    this.chart.options.scales.x.title.display = true;\n  }\n  setLabelY(label: string) {\n    this.chart.options.scales.y.title.text = label;\n    this.chart.options.scales.y.title.display = true;\n  }\n\n  setLabels(labels: any) {\n    this.chart.config.data.labels = labels;\n  }\n\n\n  updateDataset(dataId: string, color: string, data: any, name: any = undefined) {\n    this.data = data;\n    const datasets = this.chart.config.data.datasets;\n    let label = \"\";\n    if(name) {\n      label = dataId + \" (\" + name + \")\" \n    } else {\n      label = dataId\n    };\n    const id = datasets.findIndex((d: any) => d.backgroundColor == color)\n    if (id >= 0) {\n      datasets[id].data = data;\n    }\n    else {\n      console.log(name)\n      console.log(label)\n      const newData = {\n        label: label,\n        backgroundColor: color,\n        borderColor: color,\n        data: data,\n        fill: false\n      };\n\n      datasets.push(newData);\n    }\n    this.chart.update();\n  }\n\n  removeDataset(dataId: string, color: string) {\n    const datasets = this.chart.config.data.datasets;\n\n    const id = datasets.findIndex((d: any) => d.backgroundColor == color)\n    if (id >= 0) {\n      datasets.splice(id, 1)\n      this.chart.update();\n    }\n  }\n\n  clear() {\n    this.chart.data.labels = [];\n    this.chart.data.datasets = [];\n    this.chart.update();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nimport { GlobalService } from './global.service';\nimport { UtilService } from './util.service';\n\nimport { BoundsRequest, QueryRequest, SchemaRequest, MatrixRequest, FunctionsRequest, TimeseriesRequest } from 'src/app/shared/api.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // base server url\n  server_url: string = environment.backend;\n  // static files\n  files_url: string = `${environment.backend}/extra`\n  // xhttp urls\n  xhttp_url: string = `${environment.backend}/tc/query`;\n  // config path\n  config_url: string = '../assets/config.json'\n\n  constructor(public global: GlobalService, public utils: UtilService) {}\n\n  updateConfig() {\n    this.server_url = environment.backend;\n    // static files\n    this.files_url = `${environment.backend}/extra`\n    // xhttp urls\n    this.xhttp_url = `${environment.backend}/tc/query`;\n  }\n\n\n  getQueryId() {\n    const id = this.global.getGlobal('query_id').value;\n    const query_id = {\n      key: 'query_id',\n      value: id + 1\n    }\n    this.global.setGlobal(query_id);\n\n    return id;\n  }\n\n  async getIPs() {\n    // IPs address\n    const address = this.files_url + '/dynamic_ips.js'\n    this.utils.showTrace(\"getIPs\", {});\n    \n    try {\n      // Return a new promise.\n      const response = await fetch(address, {\n        method: 'GET',\n      });\n      return await response.json();\n    } catch (e) {\n       return [];\n    }\n  }\n\n  async getConfig() {\n    const response = await fetch(this.config_url, {\n      method: 'GET',\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Carrega o schema do tiny cubes\n   */\n  async getSchema(from: string = 'ttls'): Promise<any> {\n\n    let schema = new SchemaRequest();\n    schema['id'] = this.getQueryId();\n    schema['from'] = from;\n\n    this.utils.showTrace(\"initSchema\", schema);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(schema),\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Acessa o range de tempo\n   */\n  async getTimeBounds(): Promise<any> {\n    let data = new BoundsRequest(24);\n    data['bounds'] = \"time\";\n    data['id'] = this.getQueryId();\n\n    this.utils.showTrace(\"initTimeBounds\", data);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Acessa o range espacial\n   */\n  async getGeoBounds(): Promise<any> {\n    let data = new BoundsRequest(24);\n    data['id'] = this.getQueryId();\n\n    this.utils.showTrace(\"initGeoBounds\", data);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(data),\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Solicita os dados que compõe o mapa de calor.\n   */\n  async requestHeatMap(location: any[], time: any[]) {\n    const selectedClientOption = this.global.getGlobal(\"client_option\").value;\n    \n    let query = new QueryRequest();\n\n    query['select'] = ['hsum'];\n    query['group-by']  = \"location\";\n    query['id'] = this.getQueryId();\n\n    query['where'] = [];\n    if (location !== undefined) {\n      query['where'].push(location);\n    }\n    if (time !== undefined) {\n      query['where'].push(time);\n    }\n\n    //se vir do viaipe seta from viaipe\n    if(selectedClientOption == \"viaipe\")  {\n      query['select'] = ['avg_in'];\n      query['from'] = 'viaipe';\n    }\n\n    this.utils.showTrace(\"requestHeatMap\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n    return await response.json();\n  }\n\n  /**\n   * Solicita os dados do mapa para compor o gráfico de barras.\n   */\n  async requestBarChart(location: any[], time: any[], client: any[] | undefined, params: any, option: string, zoom: any = undefined) {\n    let query = new QueryRequest();\n    query['where'] = [];\n    if (location !== undefined) {\n      query['where'].push(location);\n    }\n    if (time !== undefined) {\n      query['where'].push(time);\n    }\n\n    query['id'] = this.getQueryId();\n    if(option == 'popdf') {\n      query['from'] = params.from;\n      query['select'] = params.select;\n      query['group-by'] = params.groupBy;\n    } else {\n      query['select'] = [params];\n      query['from'] = 'viaipe';\n      if (zoom > 12) {\n        query['group-by'] = ['pop','cliente'];\n      } else {\n        query['group-by'] = ['pop'];\n      }\n    }\n\n    this.utils.showTrace(\"requestBarChart\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n      'dataType': 'json'\n    };\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n\n    return await response.json();\n  }\n\n  /**\n   * Solicita os dados do mapa para compor o gráfico de linhas.\n   */\n  async requestLineChart(location: any[], time: any[], client: any[] | undefined, params: any = undefined, option: string) {\n    const clicked = this.global.getGlobal(\"clicked_element\").value;\n    let query = new QueryRequest();\n    const tsT0 = this.global.getGlobal(\"t0_vis\").value;\n    const tsT1 = this.global.getGlobal(\"t1_vis\").value;\n\n    query['id'] = this.getQueryId();\n\n    query['where'] = [];\n    if (location !== undefined) {\n      query['where'].push(location);\n    }\n    if (time !== undefined) {\n      query['where'].push(time);\n    }\n    //se vir do viaipe seta from viaipe\n    query['id'] = this.getQueryId();\n\n    if(option == 'popdf') {\n      query[\"group-by\"] = {\"field\":\"time\",\"min-k\":tsT0,\"max-k\":tsT1,\"n-points\":1024, \"v\":\"AMPNS\"};\n      query['from'] = params.from;\n      query['select'] = params.select;\n    } else {\n      query[\"group-by\"] = {\"field\":\"time\",\"min-k\":tsT0,\"max-k\":tsT1,\"n-points\":1024};\n      query['select'] = [params];\n      query['from'] = 'viaipe';\n      if(clicked > 0 && client !== undefined) {\n        query['where'].push([\"pop\", \"eq\", clicked]);\n        query['where'].push(client);\n      }\n    }\n\n    this.utils.showTrace(\"requestLineChart\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n      'dataType': 'json'\n    };\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n    return await response.json();\n  }\n\n  /**\n   * Solicita os dados do mapa para compor a heatmatrix.\n   */\n  async requestHeatmatrix(metric: any, field: string, t0: number, t1: number, clicked: number) {\n    let query = new MatrixRequest();\n    \n    if ( clicked >= 0 ) {\n      query['what'] = \"timecolumns\";\n      // @ts-ignore\n      query['idpop'] = clicked;\n      // @ts-ignore\n      // query['ncols'] = 25;\n    }\n\n    if(metric === 'rnp_services') {\n      // @ts-ignore\n      query['from'] = metric;\n    } else {\n      query['metric'] = metric;\n    }\n\n    query['field'] = field;\n    query['start'] = t0;\n    query['end'] = t1;\n    this.utils.showTrace(\"requestHeatMatrix\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n      'dataType': 'json'\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url + '2', {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n\n    return await response.json();\n\n  }\n\n  /** \n   * Solicita os dados para timeseries\n  */\n  async requestTimeseries(metric: any, field: string, t0: number, t1: number, idpop: number, from: string = \"\") {\n    let query = new TimeseriesRequest();\n    //{\"what\":\"timecolumns\",\"metric\":10,\"field\":\"h_avg\",\"start\":1648771200,\"end\":1656633300,\"idpop\":19}\n    //{\"what\":\"timecolumns\",\"metric\":10,\"field\":\"havg\",\"start\":1648771200,\"end\":1656633300,\"idpop\":8,\"from\":\"rnp_services\"}\n    query['metric'] = metric;\n    query['field'] = field;\n    query['start'] = t0;\n    query['end'] = t1;\n    query['idpop'] = idpop;\n    if(from == 'rnp_services') {\n      // @ts-ignore\n      query['from'] = 'rnp_services'\n    }\n    this.utils.showTrace(\"requestTimeseries\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n      'dataType': 'json'\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url + '2', {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n\n    return await response.json();\n  }\n  /**\n   * Solicita os dados do mapa para compor a heatmatrix.\n   */\n   async requestFunctions(service: any, model: string, t0: number, t1: number, clicked: number) {\n    let query = new FunctionsRequest();\n\n    if ( clicked >= 0 ) {\n      query['pop'] = clicked;\n    }\n\n    if ( service > 0) {\n      query['service'] = service;\n    }\n    query['from'] = 'rnp_services';\n    query['what'] = 'statistics';\n    query['field'] = 'havg';\n    query['model'] = model;\n    query['start'] = t0;\n    query['end'] = t1;\n    this.utils.showTrace(\"requestFunctions\", query);\n\n    // post header\n    const headers = {\n      'Content-Type': 'application/json',\n      'dataType': 'json'\n    };\n\n    // Return a new promise.\n    const response = await fetch(this.xhttp_url + '2', {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(query),\n    });\n\n    return await response.json();\n  }\n}\n","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { GlobalService } from 'src/app/shared/global.service';\n\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport * as THREE from 'three';\nimport * as ScatterGL from 'scatter-gl';\nimport { UMAP } from 'umap-js';\nimport * as d3 from 'd3'\n\n@Component({\n  selector: 'app-scattergl',\n  templateUrl: './scattergl.component.html',\n  styleUrls: ['./scattergl.component.css']\n})\nexport class ScatterglComponent implements OnInit {\n\n  @ViewChild(\"embedding\", { static: true }) private embeddingDiv!: ElementRef;\n\n  @Output() onScatterglValueChanged = new EventEmitter<any>();\n  @Output() onParamSelected = new EventEmitter<any>();\n  @Output() onAreaSelect = new EventEmitter<any>();\n  @Output() onTimeBoundsChanged = new EventEmitter<any>();\n  @Output() removeAreaSelection = new EventEmitter();\n  //elementos para o scattergl chart\n  private capitals: any = this.global.getGlobal('state_capitals').value.default;\n  private embedding: any;\n  private scatterGl: any;\n  private scatterglData: any = [];\n  private dataset: any;\n  private colorScale: any = d3.scaleSequential(d3.interpolateReds);\n  private statePairList: any[] = [];\n\n  //configurações do multiselect\n  public selectDisabler: string = \"disabled\";\n  public dropdownList: any = this.global.getGlobal(\"scattergl_params\").value.default;\n  public dropdownSettings: any = {\n    singleSelection: false,\n    limitSelection: 10,\n    idField: 'value',\n    textField: 'param',\n    enableCheckAll: false,\n    unSelectAll: false,\n    itemsShowLimit: 0,\n    allowSearchFilter: false\n  };\n  public selectedParams: any[] = [];\n\n  constructor(public global: GlobalService) { }\n\n  ngOnInit(): void {\n    this.buildStatePairList();\n    this.startScattergl();\n  }\n\n  startScattergl() {\n    //start no scattergl\n    this.scatterGl = new ScatterGL.ScatterGL(this.embeddingDiv.nativeElement, {\n      onSelect: (points: number[]) => {\n        if (points.length === 0) {\n          console.log('nothing selected');\n          this.onAreaSelect.emit([]);\n        } else {\n          this.onAreaSelect.emit(points);\n        }\n      },\n      renderMode: ScatterGL.RenderMode.POINT,\n      orbitControls: {\n        zoomSpeed: 1.125,\n      },\n    });\n    //adding resize on screen resize to scattergl plot\n    window.addEventListener('resize', () => {\n      this.scatterGl.resize();\n    }); \n  }\n\n  async updateScatterglData(id: number, added: boolean ,responseData: any) {\n    if(added) {\n      this.scatterglData.push({'id': id, 'data': responseData});\n    } else {\n      const newScatterglData = [];\n      for(let i = 0; i < this.scatterglData.length; i++) {\n        if(this.scatterglData[i].id !== id) { \n          newScatterglData.push(this.scatterglData[i]);\n        }\n      }\n      this.scatterGl.setPointColorer(() => {\n        return \"hsla(240,100%,25%,0.5)\";\n      });\n      this.scatterglData = newScatterglData;\n    }\n    if(this.scatterglData.length == 0) {\n      //restart no scattergl caso nenhum dado selecionado\n      const scatterGlDiv = document.querySelector('#scattergl-embedding')!;\n      scatterGlDiv.innerHTML = \"\";\n      this.startScattergl();\n    } else {\n      const data = this.buildData(this.scatterglData);\n  \n      //reduzindo dimensionalidade do dado\n      const umap = new UMAP();\n      const embedding = umap.fit(data);\n      const dataPoints: ScatterGL.Point2D[] = [];\n      const metadata: ScatterGL.PointMetadata[] = [];\n  \n      for(let i = 0; i < embedding.length; i++) {\n        let labelIndex = [i].toString();\n        let label = this.statePairList[i];\n        dataPoints.push([embedding[i][0], embedding[i][1]])\n        metadata.push({\n          labelIndex,\n          label\n        });\n        \n      }\n  \n      this.dataset = new ScatterGL.Dataset(dataPoints, metadata);\n      \n      this.scatterGl.updateDataset(this.dataset);\n      \n      this.scatterGl.render(this.dataset);\n      this.scatterGl.resize();\n    }\n  }\n\n  //constrói as strings de pares de saída x entrada \n  getCapitalId(id: number) {\n    return this.capitals.filter((c: any) => c.cod === id)[0].id.toUpperCase();\n  }\n\n  colorPoints(scatterglOptions: any) {\n    const data = this.selectData(scatterglOptions)\n    // @ts-ignore\n    const all = d3.extent(data.map((d: any) => d).filter(e => e > 0) );\n\n    if (scatterglOptions.invert) {\n      this.colorScale.domain( all.reverse() );\n    }\n    else {\n      this.colorScale.domain( all );\n    }\n\n    this.scatterGl.setPointColorer((i: any, selectedIndices: any, hoverIndex: any) => {\n      const isSelected = selectedIndices.has(i);\n      const labelIndex = this.dataset.metadata![i]['labelIndex'] as number;\n      const color = this.valToColor(data[labelIndex])\n      if (hoverIndex === i) return 'red';\n      else if(isSelected) return \"hsla(240,100%,25%,0.5)\";\n      else return color;\n    });\n  }\n\n  valToColor(d: any) {\n    if (d === 0) {\n      return \"#333\";\n    }\n    return this.colorScale(d)\n  }\n\n  onOptionChange(event: any) {\n    const scattergl_options = this.global.getGlobal(\"scattergl_options\")\n    console.log(scattergl_options)\n\n    if(event.target.name == 'code') {\n      scattergl_options.value = parseInt(event.target.value);\n      this.global.setGlobal(scattergl_options)      \n    } else {\n      scattergl_options.param = parseInt(event.target.value);\n      this.global.setGlobal(scattergl_options)\n    }\n    \n    this.colorPoints(scattergl_options);\n  }\n\n  onParamChange(event: any, added: boolean) {\n    if(added) {\n      this.selectDisabler = \"\";\n      this.selectedParams.push(event)\n    } else {\n      for(let i = 0; i < this.selectedParams.length; i++) {\n        if(this.selectedParams[i].value == event.value) {\n          this.selectedParams.splice(i, 1);\n        }\n      }\n      if(this.selectedParams.length > 0) {\n        this.selectDisabler = \"\";\n      } else {\n        (document.getElementById('scattergl-select-options') as HTMLInputElement).value = \"-1\";\n        this.selectDisabler = \"disabled\";\n      }\n    }\n    this.onParamSelected.emit({\"value\": event.value, \"added\": added});\n  }\n\n  onTimeBoundsChange()  {\n    for(let  i = 0; i < this.scatterglData.length; i++) {\n      this.onTimeBoundsChanged.emit({value: this.scatterglData[i].id, added: true})\n    }\n  }\n\n  onSelectionModeChange(event: any) {\n    if(event.target.value == \"pan\") { \n      this.removeAreaSelection.emit();\n      this.scatterGl.setPanMode();\n    } else {\n      this.removeAreaSelection.emit();\n      this.scatterGl.setSelectMode();\n    }\n  }\n\n  selectData(options: any) {\n    for(let i = 0; i < this.scatterglData.length; i++) {\n      if(this.scatterglData[i].id == options.value) return this.scatterglData[i].data[options.param];\n    }\n  }\n\n  buildData(data: any) {\n    const structuredData: any[] = [];\n    for(let i = 0; i < data[0].data[0].length; i++) structuredData.push([]);\n    for(let i = 0; i < data.length; i++) {\n      for(let j = 0; j < structuredData.length; j++) {\n        structuredData[j].push(data[i].data[0][j])\n        structuredData[j].push(data[i].data[1][j])\n        structuredData[j].push(data[i].data[2][j])\n      }\n    }\n    return structuredData;\n  }\n\n  buildStatePairList() {\n    //constrói a lista com os pares de estados\n    const statesIds = [];\n    for(let i = 1; i < 28; i++) {\n      for(let j = 1; j < 28; j++) {\n        statesIds.push([i, j])\n      }\n    }\n\n    for(let i = 0; i < statesIds.length; i++) {\n      this.statePairList.push(this.getCapitalId(statesIds[i][0]) + ' - ' + this.getCapitalId(statesIds[i][1]))\n    }\n  }\n}","<div class=\"fill scattergl-chart\" (mousedown)=\"$event.stopPropagation()\">\n    <div class=\"fill\" id=\"scattergl-embedding\" #embedding></div>\n    <div style=\"display: flex; margin-top: 27px; padding-bottom: 7px; width: 100%; border-top: 1px solid #eee; left: 10px; font-size: 11px !important;\">\n        <div id=\"scattergl-select-box\" class=\"chart-select\">\n            <ng-multiselect-dropdown id=\"scattergl-dropdown\" class=\"custom-font-size custom-radius custom-dropdown custom-dropdown-list custom-dropdown-place custom-dropdown-rotation \"\n            [disabled]=\"false\"\n            [placeholder]=\"'Params'\"\n            [settings]=\"this.dropdownSettings\"\n            [data]=\"this.dropdownList\"\n            (onSelect)=\"this.onParamChange($event, true)\"\n            (onDeSelect)=\"this.onParamChange($event, false)\">\n            </ng-multiselect-dropdown>\n        </div>\n        <div id=\"scattergl-select-box\" class=\"chart-select\">\n            <select [disabled]=\"this.selectDisabler\" id=\"scattergl-select-options\" placeholder=\"Color by\" name=\"code\" class=\"scattergl-select\" (change)=\"this.onOptionChange($event)\">\n                <option value=\"-1\" disabled selected hidden>Color by</option>\n                <option *ngFor=\"let param of selectedParams\" \n                    [value]=\"param.value\">\n                    {{param.param}}\n                </option>\n            </select>\n        </div>\n        <div id=\"codfield-select-box\" class=\"codfield-select\">\n            <select name=\"codfield\" class=\"scattergl-select\" (change)=\"this.onOptionChange($event)\">\n                <option value=\"0\">Average</option>\n                <option value=\"2\">Max</option>\n                <option value=\"1\">Min</option>\n            </select>        \n        </div>\n        <div id=\"codfield-select-box\" class=\"codfield-select\">\n            <select name=\"codfield\" class=\"scattergl-select\" (change)=\"this.onSelectionModeChange($event)\">\n                <option value=\"pan\">Pan</option>\n                <option value=\"selectio\">Area</option>\n            </select>        \n        </div>\n    </div>\n</div>\n","import { CategoryScale, Chart, LinearScale, BarController, BarElement, PointElement, Legend, Tooltip } from 'chart.js';\nimport { thresholdFreedmanDiaconis } from 'd3';\n\nexport class BarChart {\n\n  private chart: any;\n  private canvas: HTMLCanvasElement;\n  private capitals: any;\n  private idOrder: any;\n  public colorList: any = [];\n  public coloredCods: any = [];\n  public usedColors: any = [];\n  public zoom: any = undefined;\n  public viaipeLabels: any = [];\n  public from: any = undefined;\n  public data: any;\n  public lowerIndex: number = 0;\n  public higherIndex: number = 9;\n  public selectedColumns: any = [];\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.init();\n  }\n\n  //Configuração do grafico\n  init() {\n    if (this.canvas === undefined) {\n      return;\n    }\n\n    const self = this;\n    const setTooltipTitle = (tooltipItems:any) => {\n      if(self.zoom > 12 && self.from == 'viaipe') {\n        //@ts-ignore\n        const id = parseInt(tooltipItems[0].parsed.x) + self.lowerIndex;\n        return self.viaipeLabels[self.idOrder[id]];\n      } else {\n        const id = parseInt(tooltipItems[0].parsed.x);\n        return self.getId(self.idOrder[id]);\n      }\n    };\n    // Registra os elementos utilizados pelo grafico\n    Chart.register(PointElement, BarController, BarElement, CategoryScale, LinearScale, Legend, Tooltip);\n    Chart.defaults.animation = false;\n\n    // Configuração do gráfico\n    this.chart = new Chart(this.canvas, {\n      type: 'bar',\n      data: {\n        labels: [],\n        datasets: []\n      },\n      options: {\n        plugins: {\n          tooltip: {\n            callbacks: {\n              title: setTooltipTitle,\n            }\n          },\n          legend: {\n            display: true,\n            position: \"top\",\n            labels: {\n              font: {\n                size: 15\n              }\n            }\n          },\n          title: {\n            display: false\n          }\n        },\n        responsive: true,\n        scales: {\n          x: {\n            stacked: true,\n            ticks: {\n              font: {\n                size: 15\n              },\n              autoSkip: false,\n              // Include a dollar sign in the ticks\n              callback: function(value, index, ticks) {\n                if(self.zoom > 12 && self.from == 'viaipe') {\n                  //@ts-ignore\n                  const id = value + self.lowerIndex;\n                  return self.viaipeLabels[self.idOrder[id]];\n                } else {\n                  return self.getId(self.idOrder[value]);\n                }\n              }\n            }\n          },\n          y: {\n            stacked: true,\n            title: {\n              display: true,\n              text: 'Relative Frequency',\n              font: {\n                size: 15\n              }\n            },\n            ticks: {\n              font: {\n                size: 15\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Modifica as configurações globais para os títulos\n  setTitle(title: string) {\n    this.chart.options.plugins.title.text = title;\n    this.chart.options.plugins.title.display = true;\n  }\n\n  // Modifica as configurações dos ticks\n  setTicksX(ticks: any) {\n    this.chart.options.scales.x[0].ticks = ticks;\n  }\n\n  // Modifica as configurações dos ticks\n  setTicksY(ticks: any) {\n    this.chart.options.scales.y[0].ticks = ticks;\n  }\n\n  // Modifica o tipo do eixo\n  setTypeX(type: string) {\n    this.chart.options.scales.x[0].type = type;\n  }\n\n  // Modifica o tipo do eixo\n  setTypeY(type: string) {\n    this.chart.options.scales.y[0].type = type;\n  }\n\n  // Modifica as configurações dos labels\n  setLabelX(label: string) {\n    this.chart.options.scales.x.title.text = label;\n    this.chart.options.scales.x.title.display = true;\n  }\n\n  // Modifica as configurações dos labels\n  setLabelY(label: string) {\n    this.chart.options.scales.y.title.text = label;\n    this.chart.options.scales.y.title.display = true;\n  }\n\n  // Modifica as configurações dos labels\n  setLabels(labels: any) {\n    this.chart.config.data.labels = labels;\n  }\n\n  updateDataset(dataId:string, color: string, data: any, name: any = undefined, idOrder: any = undefined) {\n    if(idOrder !== undefined) this.idOrder = idOrder;\n    \n    this.colorList = Array(this.idOrder.length).fill(\"#AAAAAA\");\n\n    if(this.zoom > 12) {\n      for(let i = 0; i < this.coloredCods.length; i++) {\n        if(this.idOrder.includes(this.coloredCods[i])) {\n          const id = this.idOrder.indexOf(this.coloredCods[i]);\n          const colorId = this.coloredCods.indexOf(this.idOrder[id]);\n          const color = this.usedColors[colorId]\n          this.colorList[id] = color;\n        }\n      }\n    }\n\n\n    this.data = data;\n    const datasets = this.chart.config.data.datasets;\n    let label = \"\";\n    if(name) {\n      label = dataId + \" (\" + name + \")\" \n    } else {\n      label = dataId\n    };\n    const id = datasets.findIndex((d: any) => d.backgroundColor == color)\n    if (id >= 0) {\n      if(this.zoom > 12 && this.from == 'viaipe') {\n        datasets[id].data = data.slice(this.lowerIndex, this.higherIndex);\n      } else {\n        datasets[id].data = data;\n      }\n    }\n    else {\n      const newData = {\n        label: label,\n        backgroundColor: (this.zoom > 12 && this.from == 'viaipe') ? this.colorList.slice(this.lowerIndex, this.higherIndex) : color,\n        borderColor: (this.zoom > 12 && this.from == 'viaipe') ? this.colorList.slice(this.lowerIndex, this.higherIndex) : color,\n        data: (this.zoom > 12 && this.from == 'viaipe') ? data.slice(this.lowerIndex, this.higherIndex) : data,\n        fill: false,\n        stack: dataId\n      };\n      datasets.push(newData);\n    }\n\n    const newColors = this.colorList.slice(this.lowerIndex, this.higherIndex);\n    datasets[0].backgroundColor = newColors;\n    datasets[0].borderColor = newColors;\n    this.chart.update();\n  }\n\n  changeData(data: any) {\n    const datasets = this.chart.config.data.datasets;\n    datasets[0].data = data;\n    this.chart.update();\n  }\n\n  changeBarColor(color: string, cod: number = -1) {\n    const datasets = this.chart.config.data.datasets;\n    if(cod > -1) {\n      const id = this.idOrder.indexOf(cod);\n      this.colorList[id] = color;\n      if(color !== \"#AAAAAA\") {\n        this.coloredCods.push(this.idOrder[id]);\n        this.usedColors.push(color);\n      }\n    }\n\n    const newColors = this.colorList.slice(this.lowerIndex, this.higherIndex);\n    datasets[0].backgroundColor = newColors;\n    datasets[0].borderColor = newColors;\n    this.chart.update();\n  }\n\n  addFilterColor() {\n    const datasets = this.chart.config.data.datasets;\n    const newColors = this.colorList.slice(this.lowerIndex, this.higherIndex);\n    datasets[0].backgroundColor = newColors;\n    datasets[0].borderColor = newColors;\n    this.chart.update();\n  }\n\n  removeFilterColor() {\n    if(this.usedColors.length > 0)  {\n      for(let i = 0; i < this.coloredCods.length; i++) {\n        const id = this.idOrder.indexOf(this.coloredCods[i])\n        this.colorList[id] = this.usedColors[i];\n      }\n    } else {\n      this.colorList = Array(this.idOrder.length).fill(\"#AAAAAA\");\n      this.coloredCods = [];\n    }\n\n\n    const datasets = this.chart.config.data.datasets;\n    const newColors = this.colorList.slice(this.lowerIndex, this.higherIndex);\n    datasets[0].backgroundColor = newColors;\n    datasets[0].borderColor = newColors;\n    this.chart.update();\n  }\n\n  removeDataset(dataId:string, color: string) {\n    const datasets = this.chart.config.data.datasets;\n\n    const id = datasets.findIndex((d: any) => d.backgroundColor == color)\n    if (id >= 0) {\n      datasets.splice(id, 1)\n      this.chart.update();\n    }\n  }\n\n  clear() {\n    this.chart.data.labels = [];\n    this.chart.data.datasets = [];\n    this.chart.update();\n  }\n\n  setCapitals(capitals: any) {\n    this.capitals = capitals;\n  }\n\n  getId(id: number) {\n    return this.capitals.filter((c: any) => c.cod === id)[0].id.toUpperCase();\n  }\n}\n","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\n\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { UtilService } from 'src/app/shared/util.service';\n// inclusão do metadado do viaipe\nimport * as viaipeMetadata from '../../../assets/viaipe_metadata.json';\nimport { BarChart } from './bar';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.css']\n})\nexport class BarChartComponent implements OnInit {\n\n  // referência para o div do grafico\n  @ViewChild(\"barChart\", { static: true }) private barDiv!: ElementRef;\n\n  @Output() barParamChanged = new EventEmitter<number>();\n\n  public barChart: any;\n\n  private labels: any = {};\n  public rawData: any = {};\n  private nrmData: any = {};\n  private viaipeClientsLabel: any = [];\n  private lowerIndex: number = 0;\n  private higherIndex: number = 9;\n  public zoom: any;\n  private tabsCounter: number = 0;\n  private data: any;\n  public ids: any = [];\n  private optionsList = {\n    avg_in: 'Average in',\n    avg_out: 'Average out',\n    max_in: 'Max in',\n    max_out: 'Max out',\n    loss: 'Loss',\n    avg_loss: 'Average loss',\n    max_loss: 'Max loss',\n    val: 'Val',\n    avg_val: 'Average val',\n    max_val: 'Max val'\n  };\n\n  constructor(public global: GlobalService, public util: UtilService) {\n    this.ids = this.global.getGlobal('bar_params').value;\n  }\n\n  ngOnInit(): void {\n    this.barChart = new BarChart(this.barDiv.nativeElement);\n    const capitals = this.global.getGlobal('state_capitals').value.default;\n    this.barChart.setCapitals(capitals);\n  }\n\n  updateData(responseData: any, dataId: string, chartColor: string, lmap: any, zoom: any = undefined) {\n    this.viaipeClientsLabel = {};\n    this.barChart.clear();\n    this.barChart.lowerIndex = 0;\n    this.barChart.higherIndex = 10;\n    this.lowerIndex = 0;\n    this.higherIndex = 10;\n    this.tabsCounter = 0;\n    // manages data for each from\n    for(let from of Object.keys(responseData)) {\n      // clear existing element\n      this.deleteData(from, dataId, chartColor);\n      this.rawData[from][dataId][chartColor] = [];\n\n      // adiciona os valores não normalizados\n      for (let i = 0; i < responseData[from].result.length; i++) {\n        let pointId;\n        if(zoom > 12) {\n          pointId = +responseData[from].result[i].k[1];\n          this.viaipeClientsLabel[pointId] = this.getViaipeClientLabel(responseData[from].result[i].k);\n        } else {\n          pointId = +responseData[from].result[i].k[0];\n        }\n        const pointVl = +responseData[from].result[i].v[0];\n\n        this.rawData[from][dataId][chartColor].push({ x: pointId, y: pointVl });\n      }\n      this.barChart.viaipeLabels = this.viaipeClientsLabel;\n      // atualiza os labels baseado no dado novo\n      this.updateLabels(from, lmap, zoom);\n      // normaliza os dados de dataId\n      this.normalizeData(from);\n      // completa os pontos que faltam\n      if(!this.isViaipe()) this.fillMissingPoints(from);    \n    }\n  }\n\n  drawChart(from: string, name: any = undefined, zoom: any = undefined) {\n    this.barChart.setLabels(this.labels[from], name);\n    this.zoom = zoom;\n    this.barChart.zoom = zoom;\n    this.barChart.from = from;\n    // set x labal\n    if(!this.isViaipe()) {\n      if (from.includes('ttls')) {\n        this.barChart.setLabelY('TTLs');\n      }\n      else {\n        this.barChart.setLabelY('TCP Connection Services');\n      }\n       // atualiza os dados\n      for (const dataId of Object.keys(this.nrmData[from])) {\n        for (const color of Object.keys(this.nrmData[from][dataId])) {\n          // gets the data\n          const data = this.nrmData[from][dataId];\n          this.barChart.updateDataset(dataId, color, data[color], name, undefined);\n        }\n      }\n    } else {\n        const selectedValue = this.global.getGlobal('bar_params_value').value;\n        //@ts-ignore\n        this.barChart.setLabelY(this.optionsList[selectedValue]);\n        for (const dataId of Object.keys(this.nrmData[from])) {\n          for (const color of Object.keys(this.nrmData[from][dataId])) {\n            const data = this.nrmData[from][dataId];\n            const sorted = [...data[color]].sort((a: any, b: any) => a.y - b.y)\n            let newData = [];\n            let idOrder = [];\n            for(let i = 0; i < sorted.length; i++) {\n              newData.push({ x: (sorted.length) - i, y: sorted[i].y} );\n              idOrder.push(sorted[i].x);\n            }\n            newData.reverse();\n            idOrder.reverse();\n            this.barChart.updateDataset(dataId, color, newData, name, idOrder);\n          }\n        }\n    }   \n  }\n\n  deleteData(from: string, dataId: string, color: string) {\n    // new group\n    if (!this.rawData[from]) {\n      this.rawData[from] = {};\n    }\n    // new dataId\n    if (!this.rawData[from][dataId]) {\n      this.rawData[from][dataId] = {};\n    }\n\n    delete this.rawData[from][dataId][color];\n\n    // new group\n    if (!this.nrmData[from]) {\n      this.nrmData[from] = {};\n    }\n    // new dataId\n    if (!this.nrmData[from][dataId]) {\n      this.nrmData[from][dataId] = {};\n    }\n\n    delete this.nrmData[from][dataId][color]\n  }\n\n  clearChart(from: string, dataId: string, color: string, lmap: any, zoom: number) {\n    // removes from chart\n    this.barChart.removeDataset(dataId, color);\n\n    this.deleteData(from, dataId, color);\n\n    // atualiza os labels baseado no dado novo\n    this.updateLabels(from, lmap, zoom);\n\n    // normaliza os dados de dataId\n    this.normalizeData(from);\n\n    // completa os pontos que faltam\n    if(!this.isViaipe()) this.fillMissingPoints(from);   \n  }\n\n  clearLabel(from: string) {\n    this.labels[from] = [];\n  }\n\n  normalizeData(from: string) {\n    // limpa os dados normalizados\n    this.nrmData[from] = {};\n    if(this.isViaipe() || (this.isViaipe() && from == \"client\")) {\n      this.nrmData[from] = this.rawData[from];\n    } else {\n      // repete para cada dataId\n      for (const dataId of Object.keys(this.rawData[from])) {\n        // pega os datasets de dataId\n        const data = this.rawData[from][dataId];\n\n        // calcula a soma dos da categoria\n        let total = 0;\n        for (let cor of Object.keys(data)) {\n          const partial = data[cor].reduce((a: any, b: any) => {\n            return a + b.y;\n          }, 0);\n\n          total += partial;\n        }\n\n        // normaliza os valores\n        const norm: any = {};\n        for (let cor of Object.keys(data)) {\n          norm[cor] = [];\n          for (let pId = 0; pId < data[cor].length; pId++) {\n            const nrmPnt = {x: data[cor][pId].x, y: data[cor][pId].y / total};\n            norm[cor].push( nrmPnt );\n          };\n        }\n        // substitui o dado normalizado anterior\n        this.nrmData[from][dataId] = norm;\n      }\n    }\n\n\n  }\n\n  fillMissingPoints(from: string) {\n    // lista de tipos de elementos\n    const dataIds = Object.keys(this.nrmData[from]);\n    for (let dataId of dataIds) {\n      // lista de cores no elemento\n      const colors = Object.keys(this.nrmData[from][dataId]);\n      for (let color of colors) {\n        // para cada label\n        this.labels[from].forEach((label: number) => {\n          // se não existe valor associado ao label, adiciona zero\n          if (!this.nrmData[from][dataId][color].some((d: any) => d.x === label)) {\n            this.nrmData[from][dataId][color].push({ x: label, y: 0 });\n          }\n        });\n\n        // ordena os pontos\n        this.nrmData[from][dataId][color].sort((a: any, b: any) => a.x - b.x)\n      }\n    }\n  }\n\n  updateLabels(from: string, lmap: any, zoom: number) {\n    // limpa os labels do gráfico\n    this.labels[from] = [];\n    let counter = 1;\n    // percorre os tipos de elementos\n    for (const dataId of Object.keys(this.rawData[from])) {\n      // percorre os elementos\n      for (const color of Object.keys(this.rawData[from][dataId])) {\n        this.rawData[from][dataId][color].forEach((d: any) => {\n          if(this.isViaipe()) {\n            if (!this.labels[from].includes(counter)) {\n              this.labels[from].push(counter);\n            }\n          } else {\n            const x = Object.keys(lmap[from]).length > 0 ? lmap[from][d['x']] : d['x'];\n            if (!this.labels[from].includes(x)) {\n              this.labels[from].push(x);\n            }\n          }\n          counter += 1\n        });\n      }\n    }\n    // ordena os labels\n    this.labels[from].sort((a: number, b: number) => a - b);\n    if(zoom > 12 && from == 'viaipe') this.labels[from] =  this.labels[from].slice(this.lowerIndex, this.higherIndex)\n  }\n\n  onParamChange(event: any) {\n    const bar_params_value = {\n      key: \"bar_params_value\",\n      value: event.target.value\n    };\n\n    this.global.setGlobal(bar_params_value)\n    this.barParamChanged.emit();\n  }\n\n  isViaipe() {\n    return this.global.getGlobal(\"client_option\").value == \"viaipe\";\n  }\n\n  getViaipeClientLabel(ids: any) {\n    const key = this.barChart.getId(ids[0]).toLowerCase();\n    //@ts-ignore\n    return viaipeMetadata['pops'][key]['clientes'][ids[1] - 1][\"caption\"];\n  }\n\n  updateColor(color: string, cod: number, isAdded: boolean) {\n    if(isAdded) {\n      this.barChart.changeBarColor(color, cod)\n    } else {\n      this.barChart.usedColors = this.barChart.usedColors.filter((e:any) => e !== color);\n      this.barChart.coloredCods = this.barChart.coloredCods.filter((e:any) => e !== cod);\n      this.barChart.changeBarColor('#AAAAAA', cod);\n    }\n  }\n\n  removeFilters() {\n    const indices = [];\n    for(let i = 0; i < this.barChart.usedColors.length; i++) {\n      if(this.global.getGlobal('filter_color').value == this.barChart.usedColors[i]) {\n        indices.push(i);\n      }\n    }\n\n    for(let i = 0; i < indices.length; i++) {\n      this.barChart.coloredCods = this.barChart.coloredCods.splice(indices[i], 1)\n    }\n\n    this.barChart.usedColors = this.barChart.usedColors.filter((e:any) => e !== this.global.getGlobal('filter_color').value);\n    this.barChart.removeFilterColor();\n  }\n\n  updateTabCounter(value: number) {\n    this.tabsCounter += value;\n\n    if(this.tabsCounter == 0) {\n      this.barChart.lowerIndex = 0;\n      this.barChart.higherIndex = 10;\n      this.lowerIndex = 0;\n      this.higherIndex = 10;\n      this.data = this.barChart.data.slice(0, 10);\n    } else {\n      this.barChart.lowerIndex = this.tabsCounter*10;\n      this.barChart.higherIndex = (this.tabsCounter + 1)*10;\n      this.lowerIndex = this.tabsCounter*10;\n      this.higherIndex = (this.tabsCounter + 1)*10;\n      this.data = this.barChart.data.slice(this.tabsCounter*10, (this.tabsCounter + 1)*10);\n    }\n    this.barChart.changeBarColor('#AAAAAA', -1)\n    this.barChart.changeData(this.data);\n  }\n\n  hasPrevious() {\n    return ((this.tabsCounter + 1) * 10 > 10)\n  }\n\n  hasNext() {\n    return ((this.tabsCounter + 1) * 10 < this.barChart.data.length)\n  }\n}\n","<div class=\"fill\">\n  <canvas class=\"fill\" \n  [style.border-bottom] = \"!this.isViaipe() ? '1px solid #eee;' : 'none'\" \n  [style.padding-bottom] =  \"!this.isViaipe() ? '10px;' : '0px'\" \n  #barChart></canvas>\n    <select *ngIf=\"!this.isViaipe()\" name=\"select\" class=\"param-selector\" (change)=\"this.onParamChange($event)\">\n      <option *ngFor=\"let param of this.ids; let idx = index\" [value]=\"param.id\">{{param.id}}</option>\n    </select>\n\n    <div class=\"controls\">\n      <button *ngIf=\"this.isViaipe() && this.zoom > 12\" [disabled]=\"!this.hasPrevious()\" type=\"button\" class=\"btn btn-custom\" (click)=\"updateTabCounter(-1)\">\n        <i [style.color]=\"this.hasPrevious() ? 'rgb(36, 61, 143)' : 'rgb(149, 165, 166)'\" class=\"fas fa-arrow-left fa-lg\"></i>\n      </button>\n      <select *ngIf=\"this.isViaipe()\" name=\"select\" class=\"param-selector\" style=\"margin-top: 1px !important;\" \n      [style.margin-left]=\"(this.zoom > 12) ? '-367px' : '0px'\" \n      (change)=\"this.onParamChange($event)\">\n        <option value=\"avg_in\" selected>Average in</option>\n        <option value=\"avg_out\">Average out</option>\n        <option value=\"max_in\">Max in</option>\n        <option value=\"max_out\">Max out</option>\n  \n<!--  \n        <option value=\"loss\">Loss</option>\n        <option value=\"avg_loss\">Average loss</option>\n        <option value=\"max_loss\">Max loss</option>\n-->\n  \n        <option value=\"val\">Val</option>\n        <option value=\"avg_val\">Average val</option>\n        <option value=\"max_val\">Max val</option>\n      </select>\n      <button *ngIf=\"this.isViaipe() && this.zoom > 12\" [disabled]=\"!this.hasNext()\" type=\"button\" class=\"btn btn-custom\" (click)=\"updateTabCounter(1)\">\n        <i [style.color]=\"this.hasNext() ? 'rgb(36, 61, 143)' : 'rgb(149, 165, 166)'\"  class=\"fas fa-arrow-right fa-lg\"></i>\n      </button> \n    </div>\n</div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}